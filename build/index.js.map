{"version":3,"file":"index.js","mappings":";;;;;;;;;AAAA;AACA,IAAI,KAA4D,oBAAoB,mBAAO,CAAC,oGAAsC,GAAG,mBAAO,CAAC,sGAAuC,GAAG,mBAAO,CAAC,gGAAoC;AACnO,IAAI,CACqL;AACzL,CAAC,6EAA6E;;AAE9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,YAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;;;;;;;;;;;;AChUyB;AACsC;AACU;AACtB;AACc;AAElE,SAASO,GAAGA,CAAA,EAAG;EACb,OACEC,oDAAA,CAACP,+IAAa,QACZO,oDAAA,CAACN,+IAAM,QACLM,oDAAA,CAACL,+IAAK;IAACM,IAAI,EAAC,QAAQ;IAACC,OAAO,EAAEF,oDAAA,CAACH,kEAAS,MAAE;EAAE,CAAE,CAAC,EAC/CG,oDAAA,CAACL,+IAAK;IACJM,IAAI,EAAC,GAAG;IACRC,OAAO,EACLF,oDAAA,CAACF,2EAAc,QACbE,oDAAA,CAACJ,iFAAgB,MAAE,CACL;EACjB,CACF,CACK,CACK,CAAC;AAEpB;AAEA,iEAAeG,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;ACxBsB;AACqB;AACV;AACc;AACL;AAE7C,SAASW,aAAaA,CAAA,EAAG;EACtC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,+CAAQ,CAAC,KAAK,CAAC;EACvD,MAAMU,cAAc,GAAGJ,wEAAe,CAACK,KAAK,IAAIA,KAAK,CAACD,cAAc,CAAC;EAErE,MAAM;IACJE,MAAM;IACNC,cAAc;IACdC,aAAa;IACbC;EACF,CAAC,GAAGd,2EAAqB,CAAC;IACxBe,KAAK,EAAE,IAAI;IACXC,eAAe,EAAE;MAAEC,IAAI,EAAE;IAAY,CAAC;IACtCC,MAAM,EAAE,MAAAA,CAAOC,OAAO,EAAEC,IAAI,KAAK;MAC/B,IAAI,CAACX,cAAc,EAAEY,EAAE,EAAE;QACvBC,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAC;QACpC;MACF;MAEAf,eAAe,CAAC,IAAI,CAAC;MACrB,IAAI;QACF,MAAMJ,6EAAqB,CAACgB,IAAI,EAAEX,cAAc,CAACY,EAAE,CAAC;MACtD,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,SAAS;QACRf,eAAe,CAAC,KAAK,CAAC;MACxB;IACF;EACF,CAAC,CAAC;EAEF,IAAI,CAACC,cAAc,EAAE;IACnB,OAAO,IAAI;EACb;EAEA,OACEb,oDAAA;IAAK4B,SAAS,EAAC;EAAsC,GAClDb,MAAM,KAAK,WAAW,IAAI,CAACJ,YAAY,IACtCX,oDAAA;IACE6B,OAAO,EAAEb,cAAe;IACxBY,SAAS,EAAC;EAAuG,GAEjH5B,oDAAA,CAACK,oDAAG;IAACyB,IAAI,EAAE;EAAG,CAAE,CAAC,gBAEX,CACT,EAEAf,MAAM,KAAK,WAAW,IACrBf,oDAAA;IACE6B,OAAO,EAAEZ,aAAc;IACvBW,SAAS,EAAC;EAAyG,GAEnH5B,oDAAA,CAACM,oDAAM;IAACwB,IAAI,EAAE;EAAG,CAAE,CAAC,WAEd,CACT,EAEAnB,YAAY,IACXX,oDAAA;IAAK4B,SAAS,EAAC;EAAuC,GACpD5B,oDAAA,CAACO,oDAAM;IAACqB,SAAS,EAAC,cAAc;IAACE,IAAI,EAAE;EAAG,CAAE,CAAC,EAC7C9B,oDAAA,eAAM,qBAAyB,CAC5B,CACN,EAEAkB,YAAY,IAAI,CAACP,YAAY,IAC5BX,oDAAA;IAAK4B,SAAS,EAAC;EAAyB,GACtC5B,oDAAA;IAAO+B,GAAG,EAAEb,YAAa;IAACc,QAAQ;IAACJ,SAAS,EAAC;EAAK,CAAE,CACjD,CAEJ,CAAC;AAEV;;;;;;;;;;;;;;;;;;;;;AC3EwC;AACiB;AACf;AAE3B,SAAS/B,SAASA,CAAA,EAAG;EAClC,MAAM,CAACuC,KAAK,EAAEC,QAAQ,CAAC,GAAGlC,+CAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmC,QAAQ,EAAEC,WAAW,CAAC,GAAGpC,+CAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAEqC,MAAM;IAAEC,OAAO;IAAEd;EAAM,CAAC,GAAGM,kEAAY,CAAC,CAAC;EAEjD,MAAMS,YAAY,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMJ,MAAM,CAACJ,KAAK,EAAEE,QAAQ,CAAC;EAC/B,CAAC;EAED,OACEtC,oDAAA;IAAK4B,SAAS,EAAC;EAAqF,GAClG5B,oDAAA;IAAK4B,SAAS,EAAC;EAA2B,GACxC5B,oDAAA,cACEA,oDAAA;IAAI4B,SAAS,EAAC;EAAwD,GAAC,mBAEnE,CACD,CAAC,EACN5B,oDAAA;IAAM4B,SAAS,EAAC,gBAAgB;IAACiB,QAAQ,EAAEH;EAAa,GACtD1C,oDAAA;IAAK4B,SAAS,EAAC;EAAkC,GAC/C5B,oDAAA,cACEA,oDAAA;IAAO8C,OAAO,EAAC,OAAO;IAAClB,SAAS,EAAC;EAAS,GAAC,OAAY,CAAC,EACxD5B,oDAAA;IAAK4B,SAAS,EAAC;EAAU,GACvB5B,oDAAA;IAAK4B,SAAS,EAAC;EAAkD,GAC/D5B,oDAAA,CAACmC,oDAAI;IAACP,SAAS,EAAC;EAAuB,CAAE,CACtC,CAAC,EACN5B,oDAAA;IACEyB,EAAE,EAAC,OAAO;IACVJ,IAAI,EAAC,OAAO;IACZ0B,QAAQ;IACRC,KAAK,EAAEZ,KAAM;IACba,QAAQ,EAAGN,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACO,MAAM,CAACF,KAAK,CAAE;IAC1CpB,SAAS,EAAC,8NAA8N;IACxOuB,WAAW,EAAC;EAAO,CACpB,CACE,CACF,CAAC,EACNnD,oDAAA,cACEA,oDAAA;IAAO8C,OAAO,EAAC,UAAU;IAAClB,SAAS,EAAC;EAAS,GAAC,eAAiB,CAAC,EAChE5B,oDAAA;IAAK4B,SAAS,EAAC;EAAU,GACvB5B,oDAAA;IAAK4B,SAAS,EAAC;EAAkD,GAC/D5B,oDAAA,CAACkC,oDAAI;IAACN,SAAS,EAAC;EAAuB,CAAE,CACtC,CAAC,EACN5B,oDAAA;IACEyB,EAAE,EAAC,UAAU;IACbJ,IAAI,EAAC,UAAU;IACf0B,QAAQ;IACRC,KAAK,EAAEV,QAAS;IAChBW,QAAQ,EAAGN,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACO,MAAM,CAACF,KAAK,CAAE;IAC7CpB,SAAS,EAAC,8NAA8N;IACxOuB,WAAW,EAAC;EAAY,CACzB,CACE,CACF,CACF,CAAC,EAELxB,KAAK,IACJ3B,oDAAA;IAAK4B,SAAS,EAAC;EAAkC,GAC9CD,KACE,CACN,EAED3B,oDAAA,cACEA,oDAAA;IACEqB,IAAI,EAAC,QAAQ;IACb+B,QAAQ,EAAEX,OAAQ;IAClBb,SAAS,EAAC;EAAmP,GAE5Pa,OAAO,GAAG,qBAAqB,GAAG,gBAC7B,CACL,CACD,CACH,CACF,CAAC;AAEV;;;;;;;;;;;;;;;;;;;;;AC/E0B;AACmB;AACL;AACuB;AAEhD,SAAS7C,gBAAgBA,CAAA,EAAG;EACzC,MAAM;IAAEiB;EAAe,CAAC,GAAGJ,wEAAe,CAAC,CAAC;EAE5C,OACET,oDAAA;IAAK4B,SAAS,EAAC;EAA8B,GAC3C5B,oDAAA;IAAK4B,SAAS,EAAC;EAAwB,GACrC5B,oDAAA;IAAI4B,SAAS,EAAC;EAAuC,GAAC,oBAElD,CAAC,EAEJ,CAACf,cAAc,GACdb,oDAAA,CAACqD,oDAAW,MAAE,CAAC,GAEfrD,oDAAA;IAAK4B,SAAS,EAAC;EAAmC,GAChD5B,oDAAA;IAAI4B,SAAS,EAAC;EAA0C,GAAC,6BAErD,CAAC,EACL5B,oDAAA;IAAG4B,SAAS,EAAC;EAAoB,GAAC,yGAG/B,CAAC,EACJ5B,oDAAA,CAACU,sDAAa,MAAE,CACb,CAEJ,CACF,CAAC;AAEV;;;;;;;;;;;;;;;;;;;;AChC0B;AACgB;AACqB;AAsBhD,SAAS2C,WAAWA,CAAA,EAAG;EACpC,MAAM;IAAEE,QAAQ;IAAEb,YAAY;IAAEc;EAAM,CAAC,GAAGF,8IAAO,CAAkB,CAAC;EACpE,MAAM;IAAEG,WAAW;IAAEC;EAAkB,CAAC,GAAGjD,wEAAe,CAAC,CAAC;EAE5D,MAAMkD,YAAY,GAAGH,KAAK,CAAC,cAAc,CAAC;EAC1C,MAAMI,YAAY,GAAGJ,KAAK,CAAC,cAAc,CAAC;EAE1C,MAAMX,QAAQ,GAAG,MAAOgB,IAAqB,IAAK;IAChD,MAAMC,WAAW,GAAG;MAClBC,IAAI,EAAEF,IAAI,CAACE,IAAI;MACfC,GAAG,EAAEC,YAAY,CAACJ,IAAI,CAACK,SAAS,CAAC;MACjCC,MAAM,EAAEN,IAAI,CAACM,MAAM;MACnBC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAER,IAAI,CAACD,YAAY,GAAGC,IAAI,CAACS,iBAAiB,GAAG,EAAE;MAC3DC,SAAS,EAAEV,IAAI,CAACF,YAAY,GAAGE,IAAI,CAACU,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE;MAChFC,cAAc,EAAEC,oBAAoB,CAAChB,IAAI;IAC3C,CAAC;IAED,MAAMpC,EAAE,GAAG,MAAMgC,WAAW,CAACK,WAAW,CAAC;IACzCJ,iBAAiB,CAAC;MAAE,GAAGI,WAAW;MAAErC;IAAG,CAAC,CAAC;EAC3C,CAAC;EAED,OACEzB,oDAAA;IAAM6C,QAAQ,EAAEH,YAAY,CAACG,QAAQ,CAAE;IAACjB,SAAS,EAAC;EAA6C,GAC7F5B,oDAAA;IAAK4B,SAAS,EAAC;EAAuC,GACpD5B,oDAAA,cACEA,oDAAA;IAAO4B,SAAS,EAAC;EAAyC,GAAC,iBAAsB,CAAC,EAClF5B,oDAAA;IACEqB,IAAI,EAAC,MAAM;IAAA,GACPkC,QAAQ,CAAC,MAAM,CAAC;IACpB3B,SAAS,EAAC;EAAkG,CAC7G,CACE,CAAC,EAEN5B,oDAAA,cACEA,oDAAA;IAAO4B,SAAS,EAAC;EAAyC,GAAC,qBAA0B,CAAC,EACtF5B,oDAAA;IACEqB,IAAI,EAAC,MAAM;IAAA,GACPkC,QAAQ,CAAC,WAAW,CAAC;IACzB3B,SAAS,EAAC;EAAkG,CAC7G,CACE,CAAC,EAEN5B,oDAAA,cACEA,oDAAA;IAAO4B,SAAS,EAAC;EAAyC,GAAC,uBAAyB,CAAC,EACrF5B,oDAAA;IACEqB,IAAI,EAAC,MAAM;IAAA,GACPkC,QAAQ,CAAC,gBAAgB,CAAC;IAC9B3B,SAAS,EAAC;EAAkG,CAC7G,CACE,CAAC,EAEN5B,oDAAA,cACEA,oDAAA;IAAO4B,SAAS,EAAC;EAAyC,GAAC,WAAa,CAAC,EACzE5B,oDAAA;IAAA,GACMuD,QAAQ,CAAC,QAAQ,CAAC;IACtB3B,SAAS,EAAC;EAAkG,GAE5G5B,oDAAA;IAAQgD,KAAK,EAAC;EAAE,GAAC,gBAAsB,CAAC,EACxChD,oDAAA;IAAQgD,KAAK,EAAC;EAAW,GAAC,WAAiB,CAAC,EAC5ChD,oDAAA;IAAQgD,KAAK,EAAC;EAAU,GAAC,UAAgB,CAAC,EAC1ChD,oDAAA;IAAQgD,KAAK,EAAC;EAAM,GAAC,MAAY,CAC3B,CACL,CAAC,EAGNhD,oDAAA;IAAK4B,SAAS,EAAC;EAAY,GACzB5B,oDAAA;IAAI4B,SAAS,EAAC;EAAwC,GAAC,4BAA2B,CAAC,EACnF5B,oDAAA;IAAK4B,SAAS,EAAC;EAAuC,GACpD5B,oDAAA,cACEA,oDAAA;IAAO4B,SAAS,EAAC;EAAyC,GAAC,aAAe,CAAC,EAC3E5B,oDAAA;IACEqB,IAAI,EAAC,KAAK;IAAA,GACNkC,QAAQ,CAAC,OAAO,CAAC;IACrB3B,SAAS,EAAC;EAAkG,CAC7G,CACE,CAAC,EACN5B,oDAAA,cACEA,oDAAA;IAAO4B,SAAS,EAAC;EAAyC,GAAC,OAAY,CAAC,EACxE5B,oDAAA;IACEqB,IAAI,EAAC,OAAO;IAAA,GACRkC,QAAQ,CAAC,OAAO,CAAC;IACrB3B,SAAS,EAAC;EAAkG,CAC7G,CACE,CACF,CACF,CAAC,EAGN5B,oDAAA;IAAK4B,SAAS,EAAC;EAAY,GACzB5B,oDAAA;IAAI4B,SAAS,EAAC;EAAwC,GAAC,qBAAoB,CAAC,EAE5E5B,oDAAA;IAAK4B,SAAS,EAAC;EAAW,GACxB5B,oDAAA,cACEA,oDAAA;IAAO4B,SAAS,EAAC;EAAmB,GAClC5B,oDAAA;IACEqB,IAAI,EAAC,UAAU;IAAA,GACXkC,QAAQ,CAAC,cAAc,CAAC;IAC5B3B,SAAS,EAAC;EAA2F,CACtG,CAAC,EACF5B,oDAAA;IAAM4B,SAAS,EAAC;EAAM,GAAC,+BAAgC,CAClD,CAAC,EACP+B,YAAY,IACX3D,oDAAA;IACEqB,IAAI,EAAC,MAAM;IAAA,GACPkC,QAAQ,CAAC,WAAW,CAAC;IACzBJ,WAAW,EAAC,uBAAuB;IACnCvB,SAAS,EAAC;EAAkG,CAC7G,CAEA,CAAC,EAEN5B,oDAAA,cACEA,oDAAA;IAAO4B,SAAS,EAAC;EAAmB,GAClC5B,oDAAA;IACEqB,IAAI,EAAC,UAAU;IAAA,GACXkC,QAAQ,CAAC,cAAc,CAAC;IAC5B3B,SAAS,EAAC;EAA2F,CACtG,CAAC,EACF5B,oDAAA;IAAM4B,SAAS,EAAC;EAAM,GAAC,qCAAmC,CACrD,CAAC,EACPgC,YAAY,IACX5D,oDAAA;IACEqB,IAAI,EAAC,MAAM;IAAA,GACPkC,QAAQ,CAAC,mBAAmB,CAAC;IACjCJ,WAAW,EAAC,kCAA+B;IAC3CvB,SAAS,EAAC;EAAkG,CAC7G,CAEA,CAAC,EAEN5B,oDAAA,cACEA,oDAAA;IAAO4B,SAAS,EAAC;EAAyC,GAAC,yBAA8B,CAAC,EAC1F5B,oDAAA;IAAA,GACMuD,QAAQ,CAAC,eAAe,CAAC;IAC7BuB,IAAI,EAAE,CAAE;IACRlD,SAAS,EAAC;EAAkG,CAC7G,CACE,CAAC,EAEN5B,oDAAA,cACEA,oDAAA;IAAO4B,SAAS,EAAC;EAAyC,GAAC,0BAA4B,CAAC,EACxF5B,oDAAA;IAAA,GACMuD,QAAQ,CAAC,iBAAiB,CAAC;IAC/BuB,IAAI,EAAE,CAAE;IACRlD,SAAS,EAAC;EAAkG,CAC7G,CACE,CACF,CACF,CACF,CAAC,EAEN5B,oDAAA;IAAK4B,SAAS,EAAC;EAAkB,GAC/B5B,oDAAA;IACEqB,IAAI,EAAC,QAAQ;IACbO,SAAS,EAAC;EAA0N,GACrO,WAEO,CACL,CACD,CAAC;AAEX;AAEA,SAASqC,YAAYA,CAACC,SAAiB,EAAU;EAC/C,MAAMa,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,MAAMC,KAAK,GAAG,IAAID,IAAI,CAACd,SAAS,CAAC;EACjC,IAAIF,GAAG,GAAGe,KAAK,CAACG,WAAW,CAAC,CAAC,GAAGD,KAAK,CAACC,WAAW,CAAC,CAAC;EACnD,MAAMC,SAAS,GAAGJ,KAAK,CAACK,QAAQ,CAAC,CAAC,GAAGH,KAAK,CAACG,QAAQ,CAAC,CAAC;EAErD,IAAID,SAAS,GAAG,CAAC,IAAKA,SAAS,KAAK,CAAC,IAAIJ,KAAK,CAACM,OAAO,CAAC,CAAC,GAAGJ,KAAK,CAACI,OAAO,CAAC,CAAE,EAAE;IAC3ErB,GAAG,EAAE;EACP;EAEA,OAAOA,GAAG;AACZ;AAEA,SAASa,oBAAoBA,CAAChB,IAAqB,EAAU;EAC3D,OAAO;AACT,2BAA2BA,IAAI,CAACyB,aAAa;AAC7C,yBAAyBzB,IAAI,CAAC0B,eAAe;AAC7C,oBAAoB1B,IAAI,CAAC2B,iBAAiB;AAC1C,WAAW3B,IAAI,CAAC4B,MAAM;AACtB,GAAG,CAACd,IAAI,CAAC,CAAC;AACV;;;;;;;;;;;;;;;;;;;;AChN4C;AACa;AAO1C,SAAS7E,cAAcA,CAAC;EAAE6F,QAAQ;EAAEC;AAAkC,CAAC,EAAE;EACtF,MAAM;IAAEC,IAAI;IAAEpD;EAAQ,CAAC,GAAGR,kEAAY,CAAC,CAAC;EAExC,IAAIQ,OAAO,EAAE;IACX,OAAOzC,oDAAA,cAAK,YAAe,CAAC;EAC9B;EAEA,IAAI,CAAC6F,IAAI,EAAE;IACT,OAAO7F,oDAAA,CAAC0F,+IAAQ;MAACI,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA,CAAE,CAAC;EACzC;;EAEA;EACA,IAAIH,YAAY,IAAIC,IAAI,CAACG,YAAY,EAAEC,IAAI,KAAKL,YAAY,EAAE;IAC5D,OAAO5F,oDAAA,CAAC0F,+IAAQ;MAACI,EAAE,EAAC,eAAe;MAACC,OAAO;IAAA,CAAE,CAAC;EAChD;EAEA,OAAO/F,oDAAA,CAAAkG,2CAAA,QAAGP,QAAW,CAAC;AACxB;;;;;;;;;;;;;;;;ACzBO,MAAMQ,MAAM,GAAG;EACpBC,MAAM,EAAE;IACNC,MAAM,EAAEC,mFAAmCG;EAC7C,CAAC;EACDC,SAAS,EAAE;IACTL,MAAM,EAAEC,yFAAsCK;EAChD,CAAC;EACDC,OAAO,EAAE;IACPC,SAAS,EAAEP,2FAAuC;IAClDS,UAAU,EAAET,6FAAwC;IACpDW,SAAS,EAAEX,2FAAuCY;EACpD;AACF,CAAC;AAEM,SAASC,oBAAoBA,CAAA,EAAG;EACrC,MAAMC,WAAW,GAAG,EAAE;EAEtB,IAAI,CAACd,mFAAmC,EAAE;IACxCc,WAAW,CAACC,IAAI,CAAC,gBAAgB,CAAC;EACpC;EACA,IAAI,CAACf,2FAAuC,EAAE;IAC5Cc,WAAW,CAACC,IAAI,CAAC,oBAAoB,CAAC;EACxC;EACA,IAAI,CAACf,6FAAwC,EAAE;IAC7Cc,WAAW,CAACC,IAAI,CAAC,qBAAqB,CAAC;EACzC;EACA,IAAI,CAACf,2FAAuC,EAAE;IAC5Cc,WAAW,CAACC,IAAI,CAAC,oBAAoB,CAAC;EACxC;EAEA,IAAID,WAAW,CAACE,MAAM,GAAG,CAAC,EAAE;IAC1B,MAAM,IAAIC,KAAK,CACb,4CAA4CH,WAAW,CAACI,IAAI,CAAC,IAAI,CAAC,MAAM,GACxE,qCACF,CAAC;EACH;AACF;AAEAL,oBAAoB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;ACtCuB;AACL;AACU;AACJ;AAE9C,MAAMU,cAAc,GAAG;EACrBxB,MAAM,EAAEC,uFAAqC;EAC7CyB,UAAU,EAAEzB,+FAAyC;EACrD2B,SAAS,EAAE3B,6FAAwC;EACnD6B,aAAa,EAAE7B,qGAA4C;EAC3D+B,iBAAiB,EAAE/B,+GAAiD;EACpEiC,KAAK,EAAEjC,qFAAoCkC;AAC7C,CAAC;AAED,MAAMC,GAAG,GAAGhB,2IAAa,CAACI,cAAc,CAAC;AAClC,MAAMa,IAAI,GAAGhB,4IAAO,CAACe,GAAG,CAAC;AACzB,MAAME,EAAE,GAAGhB,iJAAY,CAACc,GAAG,CAAC;AAC5B,MAAMG,OAAO,GAAGhB,+IAAU,CAACa,GAAG,CAAC;;;;;;;;;;;;;;;;AChBD;AAE9B,MAAMK,gBAAiC,GAAG;EAC/C/E,IAAI,EAAE,aAAa;EACnBgF,IAAI,EAAEF,oDAAK,CAAC9E,IAAI;EAChBiF,cAAc,EAAE;AAClB;AACA;AACA;AACA;AACA,oCAAoC;EAClCC,cAAc,EAAE,CAAC,eAAe,EAAE,WAAW,EAAE,KAAK,CAAC;EACrDC,eAAe,EAAE;IACfC,aAAa,EAAE;MACb9H,IAAI,EAAE,MAAM;MACZ+H,KAAK,EAAE,kBAAkB;MACzBC,IAAI,EAAE;IACR,CAAC;IACDC,SAAS,EAAE;MACTjI,IAAI,EAAE,QAAQ;MACd+H,KAAK,EAAE,qBAAqB;MAC5BC,IAAI,EAAE;IACR,CAAC;IACDE,GAAG,EAAE;MACHlI,IAAI,EAAE,QAAQ;MACd+H,KAAK,EAAE,KAAK;MACZI,OAAO,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,uBAAuB,EAAE,MAAM;IACjE,CAAC;IACDC,SAAS,EAAE;MACTpI,IAAI,EAAE,UAAU;MAChB+H,KAAK,EAAE;IACT;EACF;AACF,CAAC;;;;;;;;;;;;;;;;;;;;ACjC+C;AACF;AACE;AACN;AAEnC,MAAMS,gBAAiD,GAAG;EAC/DC,OAAO,EAAEF,wIAAa;EACtBG,UAAU,EAAEjB,yDAAgB;EAC5BkB,SAAS,EAAEN,0IAAe;EAC1BO,UAAU,EAAEN,2IAAgBA;EAC5B;AACF,CAAC;AAEM,SAASO,kBAAkBA,CAACC,SAAiB,EAAmB;EACrE,OAAON,gBAAgB,CAACM,SAAS,CAAC,IAAIN,gBAAgB,CAACC,OAAO;AAChE;;;;;;;;;;;;;;;;;AChBqC;AAG9B,MAAMO,eAAe,SAASD,oIAAK,CAAC;EAIzCE,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,WAAW,CAAC;IAClB,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC;MACrBC,QAAQ,EAAE,uBAAuB;MACjCC,YAAY,EAAE;IAChB,CAAC,CAAC;EACJ;AACF;AAEO,MAAM/B,EAAE,GAAG,IAAI0B,eAAe,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;AChBX;AACM;AACc;AACN;AACQ;AAQ3C,MAAMU,cAAc,CAAC;EAElBC,cAAc,GAAG,CAAC;EAClBC,WAAW,GAAG,IAAIC,GAAG,CAAiB,CAAC;EAI/CZ,WAAWA,CAAA,EAAG;IACZ,IAAI,CAAClE,MAAM,GAAG,IAAIuE,8CAAM,CAAC;MACvBtE,MAAM,EAAEF,+CAAM,CAACC,MAAM,CAACC,MAAM;MAC5B8E,uBAAuB,EAAE;IAC3B,CAAC,CAAC;IAEF,IAAI,CAACzE,SAAS,GAAG,IAAIkE,wIAAS,CAAC;MAC7BvE,MAAM,EAAEF,+CAAM,CAACO,SAAS,EAAEL;IAC5B,CAAC,CAAC;IAEF,IAAI,CAAC+E,MAAM,GAAG;MACZC,MAAM,EAAE;QACNC,QAAQ,EAAE,CAAC;QACXC,WAAW,EAAE,MAAAA,CAAA,KAAY;UACvB,IAAI;YACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;YACjE,OAAOD,QAAQ,CAACE,EAAE;UACpB,CAAC,CAAC,MAAM;YACN,OAAO,KAAK;UACd;QACF,CAAC;QACDC,OAAO,EAAE,IAAI,CAACC,iBAAiB,CAACC,IAAI,CAAC,IAAI;MAC3C,CAAC;MACDC,IAAI,EAAE;QACJR,QAAQ,EAAE,CAAC;QACXC,WAAW,EAAE,MAAAA,CAAA,KAAY;UACvB,OAAO,CAAC,CAACpF,+CAAM,CAACC,MAAM,CAACC,MAAM;QAC/B,CAAC;QACDsF,OAAO,EAAE,IAAI,CAACI,eAAe,CAACF,IAAI,CAAC,IAAI;MACzC,CAAC;MACDG,MAAM,EAAE;QACNV,QAAQ,EAAE,CAAC;QACXC,WAAW,EAAE,MAAAA,CAAA,KAAY;UACvB,OAAO,CAAC,CAACpF,+CAAM,CAACO,SAAS,EAAEL,MAAM;QACnC,CAAC;QACDsF,OAAO,EAAE,IAAI,CAACM,iBAAiB,CAACJ,IAAI,CAAC,IAAI;MAC3C;IACF,CAAC;EACH;EAEA,MAAMK,cAAcA,CAACrI,IAAS,EAAExC,IAAY,EAAmB;IAC7D,MAAM8K,YAAY,GAAG,MAAM,IAAI,CAACC,eAAe,CAAC,CAAC;IACjD,IAAI,CAACD,YAAY,EAAE;MACjB,MAAM,IAAI5E,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IAEA,IAAI;MACF;MACA,MAAM8E,eAAe,GAAG,MAAMvB,2DAAc,CAACwB,cAAc,CAACzI,IAAI,EAAEsI,YAAmB,CAAC;MACtF,MAAMI,cAAc,GAAGzB,2DAAc,CAAC0B,iBAAiB,CAACH,eAAe,CAAC;MAExE,IAAIE,cAAc,EAAE;QAClB,OAAOA,cAAc;MACvB;MAEA,MAAME,MAAM,GAAG,MAAM,IAAI,CAACrB,MAAM,CAACe,YAAY,CAAC,CAACR,OAAO,CAACU,eAAe,CAAC;;MAEvE;MACAvB,2DAAc,CAAC4B,aAAa,CAACL,eAAe,EAAEI,MAAM,EAAEN,YAAY,CAAC;;MAEnE;MACA,IAAI,CAAClB,WAAW,CAAC0B,GAAG,CAACR,YAAY,EAAE,CAAC,CAAC;MAErC,MAAMtB,4DAAa,CAAC,QAAQ,EAAE,YAAY,EAAE;QAC1C+B,KAAK,EAAET,YAAY;QACnB9K,IAAI;QACJwL,UAAU,EAAE/B,2DAAc,CAACgC,aAAa,CAAC,CAAC;QAC1CC,SAAS,EAAE,IAAI/H,IAAI,CAAC;MACtB,CAAC,CAAC;MAEF,OAAOyH,MAAM;IACf,CAAC,CAAC,OAAO9K,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,cAAcwK,YAAY,GAAG,EAAExK,KAAK,CAAC;MAEnD,MAAMqL,UAAU,GAAG,CAAC,IAAI,CAAC/B,WAAW,CAACgC,GAAG,CAACd,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;MAChE,IAAI,CAAClB,WAAW,CAAC0B,GAAG,CAACR,YAAY,EAAEa,UAAU,CAAC;MAE9C,IAAIA,UAAU,IAAI,IAAI,CAAChC,cAAc,EAAE;QACrC,MAAMkC,SAAS,GAAG,MAAM,IAAI,CAACd,eAAe,CAACD,YAAY,CAAC;QAC1D,IAAIe,SAAS,EAAE;UACb,OAAO,IAAI,CAAChB,cAAc,CAACrI,IAAI,EAAExC,IAAI,CAAC;QACxC;MACF;MAEA,MAAMM,KAAK;IACb;EACF;;EAEA;AACF;AAEO,MAAMwL,cAAc,GAAG,IAAIpC,cAAc,CAAC,CAAC;;;;;;;;;;;;;;;;;AC7GU;AAcrD,MAAMqC,cAAc,CAAC;EAClBC,SAAS,GAAgB;IAC/BhC,MAAM,EAAE,IAAI;IACZS,IAAI,EAAE,IAAI;IACVE,MAAM,EAAE;EACV,CAAC;EAEOsB,YAAY,GAAe;IACjCxB,IAAI,EAAE,OAAO;IACbE,MAAM,EAAE,OAAO;IACfX,MAAM,EAAE;EACV,CAAC;EAEOkC,aAAa,GAAG,IAAIrC,GAAG,CAAiB,CAAC;EACzCsC,aAAa,GAAG,IAAItC,GAAG,CAK5B,CAAC;EAEJ,MAAMoB,cAAcA,CAACzI,IAAS,EAAE4J,SAA4B,EAAmB;IAC7E,MAAMC,YAAY,GAAG,IAAI,CAACC,mBAAmB,CAAC9J,IAAI,CAAC;IACnD,MAAM+J,gBAAgB,GAAG,IAAI,CAACC,cAAc,CAACH,YAAY,CAAC;IAE1D,IAAI,IAAI,CAACI,cAAc,CAACF,gBAAgB,CAAC,GAAG,IAAI,CAACP,SAAS,CAACI,SAAS,CAAC,EAAE;MACrE,OAAO,IAAI,CAACM,cAAc,CAACH,gBAAgB,EAAEH,SAAS,CAAC;IACzD;IAEA,OAAOG,gBAAgB;EACzB;EAEQD,mBAAmBA,CAAC9J,IAAS,EAAE;IACrC,MAAMsG,SAAS,GAAGtG,IAAI,CAACsG,SAAS,IAAI,SAAS;IAC7C,MAAMhE,MAAM,GAAG0D,iEAAgB,CAACM,SAAS,CAAC;IAE1C,OAAO;MACL6D,QAAQ,EAAE,IAAI,CAACC,mBAAmB,CAACpK,IAAI,EAAEsC,MAAM,CAAC;MAChD/B,QAAQ,EAAE,IAAI,CAAC8J,iBAAiB,CAACrK,IAAI,CAACO,QAAQ,IAAI,EAAE,CAAC;MACrD+J,MAAM,EAAE,IAAI,CAACC,oBAAoB,CAACvK,IAAI,CAACsK,MAAM,IAAI,CAAC,CAAC,EAAEhE,SAAS,CAAC;MAC/DkE,OAAO,EAAE,IAAI,CAACC,gBAAgB,CAACzK,IAAI,CAACe,cAAc,IAAI,EAAE;IAC1D,CAAC;EACH;EAEQqJ,mBAAmBA,CAACpK,IAAS,EAAEsC,MAAuB,EAAE;IAC9D,MAAMoI,cAAc,GAAGpI,MAAM,CAAC8C,cAAc,IAAI,EAAE;IAClD,OAAOsF,cAAc,CAACC,MAAM,CAAC,CAACC,GAAwB,EAAEC,KAAa,KAAK;MACxE,IAAI7K,IAAI,CAAC6K,KAAK,CAAC,EAAE;QACfD,GAAG,CAACC,KAAK,CAAC,GAAG7K,IAAI,CAAC6K,KAAK,CAAC;MAC1B;MACA,OAAOD,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACR;EAEQP,iBAAiBA,CAAC9J,QAAkB,EAAY;IACtD,MAAMuK,cAAc,GAAG,IAAIC,GAAG,CAACxK,QAAQ,CAACK,GAAG,CAACoK,CAAC,IAAIA,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;IAClE,OAAOC,KAAK,CAACC,IAAI,CAACL,cAAc,CAAC,CAC9BM,IAAI,CAAC,CAACvK,CAAC,EAAEwK,CAAC,KAAK,IAAI,CAACC,kBAAkB,CAACD,CAAC,CAAC,GAAG,IAAI,CAACC,kBAAkB,CAACzK,CAAC,CAAC,CAAC,CACvE0K,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAChB;EAEQD,kBAAkBA,CAACE,OAAe,EAAU;IAClD,MAAMC,cAAc,GAAG,CAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,CAAC;IACpE,OAAOA,cAAc,CAACC,IAAI,CAACC,OAAO,IAAIH,OAAO,CAACI,QAAQ,CAACD,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;EAC1E;EAEQpB,oBAAoBA,CAACD,MAA2B,EAAEhE,SAAiB,EAAE;IAC3E,MAAMhE,MAAM,GAAG0D,iEAAgB,CAACM,SAAS,CAAC;IAC1C,MAAMuF,cAAc,GAAGvJ,MAAM,CAAC+C,eAAe,IAAI,CAAC,CAAC;IAEnD,OAAOyG,MAAM,CAACC,OAAO,CAACzB,MAAM,CAAC,CAC1B0B,MAAM,CAAC,CAAC,CAACC,GAAG,CAAC,KAAKA,GAAG,IAAIJ,cAAc,CAAC,CACxClB,MAAM,CAAC,CAACC,GAAwB,EAAE,CAACqB,GAAG,EAAE9M,KAAK,CAAC,KAAK;MAClDyL,GAAG,CAACqB,GAAG,CAAC,GAAG9M,KAAK;MAChB,OAAOyL,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACV;EAEQH,gBAAgBA,CAACD,OAAe,EAAU;IAChD,MAAM0B,SAAS,GAAG1B,OAAO,CAAC7J,KAAK,CAAC,QAAQ,CAAC,CAACqL,MAAM,CAACG,OAAO,CAAC;IACzD,OAAOD,SAAS,CAACX,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC5H,IAAI,CAAC,IAAI,CAAC,IAAIuI,SAAS,CAACzI,MAAM,GAAG,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;EAC/E;EAEQuG,cAAcA,CAAChK,IAAS,EAAU;IACxC,OAAOoM,IAAI,CAACC,SAAS,CAACrM,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;EACtC;EAEQkK,cAAcA,CAACoC,MAAc,EAAE1C,SAA4B,EAAU;IAC3E,MAAM2C,SAAS,GAAG,IAAI,CAAC/C,SAAS,CAACI,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IACjD,OAAO0C,MAAM,CAACf,KAAK,CAAC,CAAC,EAAEgB,SAAS,CAAC;EACnC;EAEQtC,cAAcA,CAACuC,IAAY,EAAU;IAC3C;IACA,OAAOC,IAAI,CAACC,IAAI,CAACF,IAAI,CAAC/I,MAAM,GAAG,CAAC,CAAC;EACnC;EAEA,MAAMkJ,aAAaA,CAACC,MAAc,EAAE7D,KAAuB,EAAmB;IAC5E,OAAO6D,MAAM,GAAG,IAAI,CAACnD,YAAY,CAACV,KAAK,CAAC;EAC1C;EAEAF,aAAaA,CAACyD,MAAc,EAAE3E,QAAgB,EAAEoB,KAAa,EAAQ;IACnE,MAAM8D,IAAI,GAAG,IAAI,CAACC,UAAU,CAACR,MAAM,CAAC;IACpC,MAAMS,UAAU,GAAG;MACjBpF,QAAQ;MACRuB,SAAS,EAAE/H,IAAI,CAAC6L,GAAG,CAAC,CAAC;MACrBJ,MAAM,EAAE,IAAI,CAAC3C,cAAc,CAACqC,MAAM,GAAG3E,QAAQ,CAAC;MAC9CoB;IACF,CAAC;IAED,IAAI,CAACY,aAAa,CAACb,GAAG,CAAC+D,IAAI,EAAEE,UAAU,CAAC;IACxC,IAAI,CAACE,gBAAgB,CAAClE,KAAK,EAAEgE,UAAU,CAACH,MAAM,CAAC;EACjD;EAEAjE,iBAAiBA,CAAC2D,MAAc,EAAiB;IAC/C,MAAMO,IAAI,GAAG,IAAI,CAACC,UAAU,CAACR,MAAM,CAAC;IACpC,MAAMY,MAAM,GAAG,IAAI,CAACvD,aAAa,CAACP,GAAG,CAACyD,IAAI,CAAC;IAE3C,IAAIK,MAAM,IAAI/L,IAAI,CAAC6L,GAAG,CAAC,CAAC,GAAGE,MAAM,CAAChE,SAAS,GAAG,OAAO,EAAE;MAAE;MACvD,OAAOgE,MAAM,CAACvF,QAAQ;IACxB;IAEA,OAAO,IAAI;EACb;EAEQmF,UAAUA,CAACR,MAAc,EAAU;IACzC,IAAIO,IAAI,GAAG,CAAC;IACZ,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,MAAM,CAAC7I,MAAM,EAAE0J,CAAC,EAAE,EAAE;MACtC,MAAMC,IAAI,GAAGd,MAAM,CAACe,UAAU,CAACF,CAAC,CAAC;MACjCN,IAAI,GAAI,CAACA,IAAI,IAAI,CAAC,IAAIA,IAAI,GAAIO,IAAI;MAClCP,IAAI,GAAGA,IAAI,GAAGA,IAAI;IACpB;IACA,OAAOA,IAAI,CAACS,QAAQ,CAAC,CAAC;EACxB;EAEQL,gBAAgBA,CAAClE,KAAa,EAAE6D,MAAc,EAAQ;IAC5D,MAAMW,OAAO,GAAG,IAAI,CAAC7D,aAAa,CAACN,GAAG,CAACL,KAAK,CAAC,IAAI,CAAC;IAClD,IAAI,CAACW,aAAa,CAACZ,GAAG,CAACC,KAAK,EAAEwE,OAAO,GAAGX,MAAM,CAAC;EACjD;EAEA3D,aAAaA,CAAA,EAA2B;IACtC,OAAO6C,MAAM,CAAC0B,WAAW,CAAC,IAAI,CAAC9D,aAAa,CAAC;EAC/C;AACF;AAEO,MAAMzC,cAAc,GAAG,IAAIsC,cAAc,CAAC,CAAC;;;;;;;;;;;;;;;;;;;AChKd;AAC6B;AAClB;AAExC,eAAe5M,qBAAqBA,CAACgR,SAAe,EAAEC,SAAiB,EAAE;EAC9E,IAAI;IACF;IACA,MAAMC,WAAW,GAAG;MAClBD,SAAS;MACTD,SAAS;MACTG,SAAS,EAAE,IAAI3M,IAAI,CAAC;IACtB,CAAC;IAED,MAAM4M,OAAO,GAAG,MAAMjJ,4CAAE,CAAC+B,YAAY,CAACmH,GAAG,CAACH,WAAW,CAAC;;IAEtD;IACA,MAAM7G,4DAAa,CAAC,QAAQ,EAAE,wBAAwB,EAAE;MACtD4G,SAAS;MACTG,OAAO;MACP7E,SAAS,EAAE,IAAI/H,IAAI,CAAC;IACtB,CAAC,CAAC;;IAEF;IACA,MAAM8M,aAAa,GAAG,MAAMR,wDAAe,CAACE,SAAS,CAAC;IACtD,MAAMO,QAAQ,GAAG,MAAMR,6DAAoB,CAACO,aAAa,CAAC;;IAE1D;IACA,MAAMnJ,4CAAE,CAAC+B,YAAY,CAACsH,MAAM,CAACJ,OAAO,EAAE;MACpCE,aAAa;MACbC;IACF,CAAC,CAAC;;IAEF;IACA,MAAMlH,4DAAa,CAAC,QAAQ,EAAE,2BAA2B,EAAE;MACzD4G,SAAS;MACTG,OAAO;MACP7E,SAAS,EAAE,IAAI/H,IAAI,CAAC;IACtB,CAAC,CAAC;IAEF,OAAO;MAAE8M,aAAa;MAAEC;IAAS,CAAC;EACpC,CAAC,CAAC,OAAOpQ,KAAK,EAAE;IACd;IACA,MAAMkJ,4DAAa,CAAC,QAAQ,EAAE,wBAAwB,EAAE;MACtD4G,SAAS;MACT9P,KAAK,EAAEA,KAAK,YAAY4F,KAAK,GAAG5F,KAAK,CAACsQ,OAAO,GAAG,eAAe;MAC/DlF,SAAS,EAAE,IAAI/H,IAAI,CAAC;IACtB,CAAC,CAAC;IAEFtD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAM,IAAI4F,KAAK,CAAC,yEAAyE,CAAC;EAC5F;AACF;AAEO,eAAe2K,sBAAsBA,CAACT,SAAiB,EAAE;EAC9D,IAAI;IACF,OAAO,MAAM9I,4CAAE,CAAC+B,YAAY,CACzByH,KAAK,CAAC,WAAW,CAAC,CAClBC,MAAM,CAACX,SAAS,CAAC,CACjBY,OAAO,CAAC,CAAC,CACTC,MAAM,CAAC,WAAW,CAAC;EACxB,CAAC,CAAC,OAAO3Q,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAM,IAAI4F,KAAK,CAAC,kCAAkC,CAAC;EACrD;AACF;;;;;;;;;;;;;;;;;AChEwC;AACgB;AASjD,eAAesD,aAAaA,CACjC4H,MAAc,EACdC,MAAc,EACdC,OAAgC,EAChC;EACA,IAAI;IACF,MAAMC,QAAkB,GAAG;MACzBH,MAAM;MACNC,MAAM;MACNC,OAAO;MACP5F,SAAS,EAAE,IAAI/H,IAAI,CAAC;IACtB,CAAC;IAED,MAAMwN,iJAAM,CAACD,iJAAU,CAAC5J,gDAAE,EAAE,YAAY,CAAC,EAAEiK,QAAQ,CAAC;EACtD,CAAC,CAAC,OAAOjR,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD;EACF;AACF;;;;;;;;;;;;;;;;;;;AC5BuC;AACc;AACN;AAExC,eAAe2P,eAAeA,CAACE,SAAe,EAAmB;EACtE,IAAI;IACF,MAAMqB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEvB,SAAS,CAAC;IAClCqB,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,WAAW,CAAC;IACrCF,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC;IAEjC,MAAMvH,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgD,EAAE;MAC7EuH,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,eAAe,EAAE,UAAU9M,+CAAM,CAACC,MAAM,CAACC,MAAM;MACjD,CAAC;MACD6M,IAAI,EAAEL;IACR,CAAC,CAAC;IAEF,IAAI,CAACrH,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM/J,KAAK,GAAG,MAAM6J,QAAQ,CAAC2H,IAAI,CAAC,CAAC;MACnC,MAAM,IAAI5L,KAAK,CAAC5F,KAAK,CAACA,KAAK,EAAEsQ,OAAO,IAAI,sBAAsB,CAAC;IACjE;IAEA,MAAMpO,IAAI,GAAG,MAAM2H,QAAQ,CAAC2H,IAAI,CAAC,CAAC;IAClC,OAAOtP,IAAI,CAACwM,IAAI;EAClB,CAAC,CAAC,OAAO1O,KAAK,EAAE;IACd,MAAMkJ,4DAAa,CAAC,QAAQ,EAAE,qBAAqB,EAAE;MACnDlJ,KAAK,EAAEA,KAAK,YAAY4F,KAAK,GAAG5F,KAAK,CAACsQ,OAAO,GAAG,eAAe;MAC/DlF,SAAS,EAAE,IAAI/H,IAAI,CAAC;IACtB,CAAC,CAAC;IAEFtD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAM,IAAI4F,KAAK,CAAC,qEAAqE,CAAC;EACxF;AACF;AAEO,eAAegK,oBAAoBA,CAACO,aAAqB,EAAmB;EACjF,IAAI;IACF,OAAO,MAAM3E,8DAAc,CAACjB,cAAc,CACxC;MAAE4F;IAAc,CAAC,EACjB,kBACF,CAAC;EACH,CAAC,CAAC,OAAOnQ,KAAK,EAAE;IACd,MAAMkJ,4DAAa,CAAC,QAAQ,EAAE,gBAAgB,EAAE;MAC9ClJ,KAAK,EAAEA,KAAK,YAAY4F,KAAK,GAAG5F,KAAK,CAACsQ,OAAO,GAAG,eAAe;MAC/DlF,SAAS,EAAE,IAAI/H,IAAI,CAAC;IACtB,CAAC,CAAC;IAEFtD,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAM,IAAI4F,KAAK,CAAC,oDAAoD,CAAC;EACvE;AACF;;;;;;;;;;;;;;;;;;ACpDiC;AACS;AAMnB;AAUhB,MAAMtF,YAAY,GAAGmR,sIAAM,CAAazG,GAAG,KAAM;EACtD9G,IAAI,EAAE,IAAI;EACVpD,OAAO,EAAE,IAAI;EACbd,KAAK,EAAE,IAAI;EACXa,MAAM,EAAE,MAAAA,CAAOJ,KAAa,EAAEE,QAAgB,KAAK;IACjD,IAAI;MACFqK,GAAG,CAAC;QAAElK,OAAO,EAAE,IAAI;QAAEd,KAAK,EAAE;MAAK,CAAC,CAAC;MACnC,MAAM0R,4IAA0B,CAAC3K,kDAAI,EAAEtG,KAAK,EAAEE,QAAQ,CAAC;IACzD,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdgL,GAAG,CAAC;QAAEhL,KAAK,EAAGA,KAAK,CAAWsQ;MAAQ,CAAC,CAAC;IAC1C,CAAC,SAAS;MACRtF,GAAG,CAAC;QAAElK,OAAO,EAAE;MAAM,CAAC,CAAC;IACzB;EACF,CAAC;EACD6Q,OAAO,EAAE,MAAAA,CAAA,KAAY;IACnB,IAAI;MACF,MAAMC,4IAAe,CAAC7K,kDAAI,CAAC;MAC3BiE,GAAG,CAAC;QAAE9G,IAAI,EAAE;MAAK,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOlE,KAAK,EAAE;MACdgL,GAAG,CAAC;QAAEhL,KAAK,EAAGA,KAAK,CAAWsQ;MAAQ,CAAC,CAAC;IAC1C;EACF;AACF,CAAC,CAAC,CAAC;;AAEH;AACAuB,4IAAkB,CAAC9K,kDAAI,EAAG7C,IAAI,IAAK;EACjC5D,YAAY,CAACwR,QAAQ,CAAC;IAAE5N,IAAI;IAAEpD,OAAO,EAAE;EAAM,CAAC,CAAC;AACjD,CAAC,CAAC;;;;;;;;;;;;;;;;;AC5C+B;AAEG;AAS7B,MAAMhC,eAAe,GAAG2S,sIAAM,CAAgBzG,GAAG,KAAM;EAC5D9L,cAAc,EAAE,IAAI;EACpB6C,iBAAiB,EAAGgQ,OAAO,IAAK/G,GAAG,CAAC;IAAE9L,cAAc,EAAE6S;EAAQ,CAAC,CAAC;EAChEjQ,WAAW,EAAE,MAAOiQ,OAAO,IAAK;IAC9B,MAAMjS,EAAE,GAAG,MAAMkH,4CAAE,CAAC8B,QAAQ,CAACoH,GAAG,CAAC;MAC/B,GAAG6B,OAAO;MACV/B,SAAS,EAAE,IAAI3M,IAAI,CAAC;IACtB,CAAC,CAAC;IACF,OAAOvD,EAAE;EACX,CAAC;EACDkS,mBAAmB,EAAEA,CAAA,KAAMhH,GAAG,CAAC;IAAE9L,cAAc,EAAE;EAAK,CAAC;AACzD,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;ACtBI;AACP;AACA;AACA;;;;;;;;;;;;;;;;ACHsC;AAC/B;AACP;AACA,gBAAgB,MAAM;AACtB;AACA,oBAAoB,eAAe;AACnC,mDAAmD,aAAa;AAChE,YAAY,+CAAQ;AACpB;AACA;AACA,KAAK;AACL,mBAAmB,MAAM;AACzB;AACA,2BAA2B,+CAAQ;AACnC;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA,KAAK;AACL,oBAAoB,MAAM;AAC1B;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;ACxBO;AACP;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;;;;;ACDiC;AACG;AACQ;AACb;AAC/B;;;;;;;;;;;;ACJU;AACV;;;;;;;;;;;;;;;;;;;;;ACD2D;AACL;AAC8B;AACpF;AACA;AACA;AACA;AACmC;AACL;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,qCAAqC,iGAA0B;AAC/D;AACA;AACA,+CAA+C,eAAe;AAC9D,oBAAoB,KAAK;AACzB;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,YAAY,mEAAa;AACzB;AACA;AACA;AACA;AACA,2BAA2B,yEAAoB;AAC/C,0CAA0C,iBAAiB;AAC3D;AACA,yCAAyC,YAAY;AACrD;AACA;AACA,yCAAyC,oBAAoB;AAC7D;AACA,aAAa;AACb;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA,0BAA0B,+BAA+B,cAAc;AACvE;AACA,iBAAiB;AACjB;AACA;AACA;;;;;;;;;;;;AC7DU;AACV;;;;;;;;;;;;;ACDwC;AACxC;;;;;;;;;;ACDA;AACA,IAAI,KAA4D,oBAAoB,mBAAO,CAAC,4GAA0C,GAAG,mBAAO,CAAC,gDAAS,GAAG,mBAAO,CAAC,mFAAoB;AACzL,IAAI,CAC+K;AACnL,CAAC,8EAA8E;;AAE/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP,+BAA+B,uBAAuB;AACtD;AACA;AACA,gCAAgC,KAAK,oBAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;;;;;;;;;;;AClHD;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,GAAG;AACnB;AACA;;;;;;;;;;;;;ACjBU;AACV;;;;;;;;;;;;;ACD0E;AAC1E;;;;;;;;;;;;;;;;;;;ACD8C;AAC9C;AACA;AACA;AACA;AACmC;AACL;AACvB,aAAa,4DAAY;AAChC,qBAAqB,MAAM;AAC3B;AACA,KAAK;AACL,eAAe,MAAM;AACrB;AACA,oCAAoC,wBAAwB;AAC5D;AACA,KAAK;AACL,eAAe,MAAM;AACrB;AACA,mCAAmC,sCAAsC,qBAAqB,QAAQ;AACtG;AACA;AACA,CAAC;AACM;AACP;AACA;AACA;AACA;;;;;;;;;;;;AC1BU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;;;;ACDsE;AACC;AACzC;AAC9B;;;;;;;;;;;;ACHU;AACV;;;;;;;;;;;;;;;;;;;;;;ACDoE;AAC3B;AACzC,uBAAuB,kDAAM,KAAK,+BAA+B,gBAAgB;AACjF;AACA,0CAA0C,kFAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACP;AACA;;;;;;;;;;;;;;;ACZA;AACO,sBAAsB,OAAO,kBAAkB,aAAa,aAAa,kBAAkB,mBAAmB,WAAW,mBAAmB,eAAe,qBAAqB,qBAAqB,+GAA+G,mBAAmB,6CAA6C,2BAA2B,aAAa,KAAK,SAAS,+BAA+B,cAAc,8HAA8H,KAAK,SAAS,+BAA+B,eAAe,sCAAsC,6CAA6C,KAAK,MAAM,cAAc,WAAW,+BAA+B,YAAY,YAAY,oDAAoD,MAAM,aAAa,sEAAsE,SAAS,8GAA8G,MAAM,wBAAwB,IAAI,aAAa,IAAI,gGAAgG,4BAA4B,gHAAgH,uCAAuC,aAAa,gCAAgC,KAAK,gCAAgC,MAAM,4BAA4B,GAAG,eAAe,cAAc,KAAK,SAAS,MAAM,0BAA0B,GAAG,eAAe,OAAO,iBAAiB,MAAM,IAAI,aAAa,6BAA6B,eAAe,OAAO,IAAI,UAAU,+CAA+C,qBAAqB,0BAA0B,IAAI,UAAU,cAAc,SAAS,IAAI,iBAAiB,kKAAkK,YAAY,aAAa,uBAAuB,0BAA0B,4BAA4B,gBAAgB,oBAAoB,cAAc,OAAO,oCAAoC,IAAI,YAAY,OAAO,uCAAuC,OAAO,YAAY,qBAAqB,0BAA0B,8EAA8E,gDAAgD,WAAW,QAAQ,OAAO,IAAI,EAAE,iBAAiB,YAAY,IAAI,MAAM,aAAa,yBAAyB,kBAAkB,sBAAsB,mCAAmC,QAAQ,YAAY,mBAAmB,6BAA6B,oDAAoD,GAAG,SAAS,2BAA2B,iBAAiB,eAAe,SAAS,8DAA8D,oBAAoB,4DAA4D,2BAA2B,uGAAuG,gGAAgG,YAAY,eAAe,iBAAiB,YAAY,IAAI,MAAM,aAAa,sEAAsE,GAAG,OAAO,mBAAmB,0CAA0C,gTAAgT,aAAa,QAAQ,mBAAmB,uBAAuB,WAAW,0BAA0B,IAAI,iBAAiB,mGAAmG,iBAAiB,aAAa,0FAA0F,SAAS,+BAA+B,EAAE,GAAG,0HAA0H,wBAAwB,0BAA0B,eAAe,oFAAoF,oBAAoB,0BAA0B,OAAO,4BAA4B,UAAU,yCAAyC,IAAI,4BAA4B,+DAA+D,8GAA8G,uCAAuC,yBAAyB,EAAE,OAAO,cAAc,EAAE,IAAI,IAAI,GAAG;AAChxJ;;;;;;;;;;;;;;;ACFO;AACP;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACZO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;;;;;;;;;;;;;;AC/BO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3BO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACRO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACZO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACXO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,UAAU;AACxF,mEAAmE,MAAM;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;;;ACtCO;AACP;AACA,wCAAwC;AACxC,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClKO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACNO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACNO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF,iBAAiB;AACzG,yCAAyC;AACzC;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,yCAAyC;AACtI;AACA;AACA;AACA;AACA,6FAA6F,gDAAgD;AAC7I;AACA;AACA;AACA;AACA;AACA,6FAA6F,oBAAoB;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3HO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACXO;AACP;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,sBAAsB;AAC/D,4BAA4B,qBAAqB;AACjD;AACA,gCAAgC,kBAAkB;AAClD;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;;;;;;;;;;;;;;;AC3BO;AACP;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;;;;;;;;;;;;;;;ACtBO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,wBAAwB,YAAY;AACpC,+EAA+E;AAC/E;AACA,iBAAiB;AACjB;AACA;AACA;;;;;;;;;;;;;;;;;;AClByD;AAC8C;AACuF;AAC9L;AACA;AACA;AACA,YAAY,kBAAkB,QAAQ,+DAAW;AACjD,QAAQ,wEAAgB;AACxB;AACA;AACA,sCAAsC,6EAAqB,iBAAiB,qBAAqB;AACjG,2CAA2C,kFAA0B,iBAAiB,aAAa;AACnG,qCAAqC,sFAA8B,CAAC,wEAAgB,kBAAkB,cAAc;AACpH,aAAa;AACb;AACO;AACP;AACA;AACA;AACA,iCAAiC,2EAAmB,GAAG,qCAAqC;AAC5F;AACA,gCAAgC,mEAAW,GAAG,6CAA6C;AAC3F;AACA,2CAA2C,qFAA6B;AACxE,gBAAgB,6EAAqB;AACrC;AACA;AACA,mBAAmB,iFAAqB;AACxC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,+BAA+B,gBAAgB,GAAG;AAC3H;AACA;AACA,uCAAuC,0DAAM;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,qFAAqF;AAC9I;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,2CAA2C,0DAAM;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,8FAA8F;AAClI;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,mDAAmD,0EAAkB,iBAAiB,WAAW;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA,wEAAwE,yCAAyC;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACvKyD;AACI;AACpB;AAClC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,sBAAsB,aAAa;AACzH;AACA;AACA,uCAAuC;AACvC;AACA,yEAAyE,+BAA+B,gBAAgB,GAAG;AAC3H;AACA;AACA,uCAAuC,0DAAM;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,gEAAgE,yCAAyC;AACzG,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,+DAAW;AACjF;AACA;AACA;AACA,gDAAgD,uDAAE,0CAA0C,MAAM;AAClG;AACA,gIAAgI,sDAAsD;AACtL;AACA;AACA;AACA,sCAAsC,uEAAmB;AACzD,sCAAsC,uEAAmB;AACzD;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,wCAAwC,QAAQ;AAChD;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,oCAAoC,uCAAuC;AAC3E;AACA,sCAAsC,uEAAmB;AACzD;AACA,mGAAmG,QAAQ;AAC3G;AACA,gCAAgC,0DAAM;AACtC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,qCAAqC;AACrC,yBAAyB;AACzB,qBAAqB;AACrB;AACA,4EAA4E,WAAW;AACvF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChIO;AACP;;;;;;;;;;;;;;;ACDO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChCO;AACP;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACbU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;;;;;;;;;ACD6C;AAChB;AACK;AACH;AACE;AACY;AACF;AACF;AACzC;;;;;;;;;;;;ACRU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDuD;AACiB;AACD;AACa;AACR;AACY;AACd;AACE;AACY;AACK;AACR;AACgB;AAC3B;AACE;AACN;AACiB;AACG;AACF;AACtC;AAC4C;AAC1B;AACpE;AACA;AACA;AACA;AACmC;AACL;AAC9B;AACA,eAAe,gEAAY;AAC3B,mCAAmC,0GAAgC;AACnE,wBAAwB,qFAAsB;AAC9C,oCAAoC,wGAAkC,kBAAkB,iGAA8B,EAAE,mFAAuB,EAAE,oFAAuB;AACxK,gCAAgC,qGAA6B,CAAC,wGAA6B;AAC3F,2BAA2B,0FAAwB;AACnD,wBAAwB,oFAAqB;AAC7C,wBAAwB,oFAAqB;AAC7C,mCAAmC,sGAAiC,kBAAkB,iGAA8B,EAAE,oFAAuB;AAC7I,0BAA0B,yFAAwB;AAClD,uCAAuC,mHAAoC;AAC3E,kCAAkC,mGAAgC,CAAC,iGAA8B,EAAE,oFAAuB;AAC1H,iCAAiC,qGAA8B,4BAA4B,oFAAuB,2EAA2E,iGAA4B,oBAAoB,8EAAiB;AACzM;AAC9C,0BAA0B,yFAAwB;AAClD;AACP,8BAA8B,4DAAK;AACnC;AACA;;;;;;;;;;;;AC9CU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDyC;AACJ;AACA;AACQ;AACA;AACC;AACf;AACO;AACN;AACW;AACQ;AACZ;AACQ;AACM;AACP;AACC;AACM;AACT;AACN;AACsB;AACZ;AACQ;AACV;AACwB;AACvB;AACC;AACJ;AACC;AACQ;AACC;AACO;AAC3B;AACiB;AACQ;AACT;AACQ;AACjC;AACQ;AACc;AAC/C;;;;;;;;;;;;ACvCU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;ACDA;AACA,IAAI,KAA4D;AAChE,IAAI,CACkH;AACtH,CAAC,8BAA8B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,CAAC;;;;;;;;;;;AC3ED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK,KAA6B;AAClC;AACA,EAAE;AACF;AACA;;;;;;;;;;;;;;;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;;AAEkD;AACK;;AAEvD;AACA;AACA,oBAAoB,iDAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,aAAa,oDAAa;AAC1B;AACA;AACA;AACA,aAAa,6DAAiB;AAC9B;AACA;AACA;AACA;AACA,0CAA0C,sBAAsB;AAChE;AACA,SAAS;AACT;AACA,4CAA4C,oDAAa;AACzD;AACA;AACA;AACA;AACA;AACA,6BAA6B,SAAS;AACtC;AACA;;AAEoD;AACpD;;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEwC;AACxC;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;AAEtD,cAAc,gEAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE4B;AAC5B;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;AAEtD,eAAe,gEAAgB;AAC/B,aAAa,qDAAqD;AAClE,aAAa,uDAAuD;AACpE,aAAa,+DAA+D;AAC5E,aAAa,mEAAmE;AAChF,aAAa,qDAAqD;AAClE,aAAa,uDAAuD;AACpE,aAAa,iEAAiE;AAC9E,aAAa,iEAAiE;AAC9E;;AAE6B;AAC7B;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;AAEtD,aAAa,gEAAgB;AAC7B,aAAa,6EAA6E;AAC1F,aAAa,8CAA8C;AAC3D;;AAE2B;AAC3B;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;AAEtD,aAAa,gEAAgB;AAC7B,aAAa,mEAAmE;AAChF,aAAa,+DAA+D;AAC5E;;AAE2B;AAC3B;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;AAEtD,YAAY,gEAAgB;AAC5B,aAAa,0EAA0E;AACvF,aAAa,gDAAgD;AAC7D,aAAa,uDAAuD;AACpE;;AAE0B;AAC1B;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;AAEtD,eAAe,gEAAgB;AAC/B,aAAa,mEAAmE;AAChF;;AAE6B;AAC7B;;;;;;;;;;;;;;ACduD;AACvD;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;;;;;;;;;;ACD8C;AACQ;AACtD;AACA;AACA;AACA;AACmC;AACL;AAC9B;AACO,aAAa,4DAAY;AAChC,mBAAmB,MAAM;AACzB;AACA,wCAAwC,MAAM;AAC9C;AACA,KAAK;AACL,eAAe,MAAM;AACrB;AACA,wDAAwD,sBAAsB;AAC9E;AACA;AACA;AACA,KAAK;AACL,oBAAoB,MAAM;AAC1B;AACA,8BAA8B,oEAAe;AAC7C,qDAAqD,iCAAiC;AACtF,qBAAqB;AACrB;AACA,KAAK;AACL,iBAAiB,MAAM;AACvB;AACA,sCAAsC,MAAM;AAC5C;AACA;AACA,CAAC;AACM;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;ACvCmD;AACC;AACpD;;;;;;;;;;;;ACFU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;;;;;;;;;;;;ACD+D;AACtB;AACzC,uBAAuB,kDAAM,KAAK,+BAA+B,gBAAgB;AACjF;AACA,yBAAyB,+DAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACP;AACA;;;;;;;;;;;;;;;ACbA;AACO,sBAAsB,OAAO,kBAAkB,aAAa,aAAa,kBAAkB,mBAAmB,WAAW,mBAAmB,eAAe,qBAAqB,qBAAqB,+GAA+G,mBAAmB,6CAA6C,2BAA2B,aAAa,KAAK,SAAS,+BAA+B,cAAc,8HAA8H,KAAK,SAAS,+BAA+B,eAAe,sCAAsC,6CAA6C,KAAK,MAAM,cAAc,WAAW,+BAA+B,YAAY,YAAY,oDAAoD,MAAM,aAAa,aAAa,yCAAyC,cAAc,iBAAiB,IAAI,OAAO,GAAG,iBAAiB,MAAM,gBAAgB,yCAAyC,OAAO,MAAM,qBAAqB,gBAAgB,IAAI,OAAO,GAAG,iBAAiB,iBAAiB,kEAAkE,sBAAsB,SAAS,GAAG,iBAAiB,IAAI,OAAO,GAAG,4BAA4B,EAAE,MAAM,WAAW,aAAa,4BAA4B,gBAAgB,oBAAoB,KAAK,kCAAkC,IAAI,OAAO,GAAG,MAAM,KAAK,GAAG,uBAAuB,MAAM,mBAAmB,UAAU,wEAAwE,iDAAiD,oBAAoB,8HAA8H,4BAA4B,sCAAsC,SAAS,mBAAmB,0BAA0B,cAAc,mBAAmB,uBAAuB,IAAI,GAAG,iBAAiB,gEAAgE,eAAe,0BAA0B,KAAK,SAAS,sCAAsC,YAAY,gBAAgB,GAAG,OAAO,OAAO,GAAG,iBAAiB,IAAI,OAAO,GAAG,4BAA4B,YAAY,IAAI,OAAO,GAAG,yBAAyB,0BAA0B,EAAE,YAAY,IAAI,OAAO,GAAG,sBAAsB,kBAAkB,yCAAyC,YAAY,IAAI,SAAS,GAAG,SAAS,MAAM,kEAAkE,SAAS,iHAAiH,IAAI,MAAM,wBAAwB,GAAG,aAAa,IAAI,gGAAgG,4BAA4B,gHAAgH,uCAAuC,aAAa,gCAAgC,KAAK,gCAAgC,MAAM,4BAA4B,GAAG,eAAe,cAAc,KAAK,SAAS,MAAM,0BAA0B,GAAG,eAAe,OAAO,iBAAiB,MAAM,GAAG,wBAAwB,iBAAiB,IAAI,OAAO,GAAG,UAAU,+CAA+C,qBAAqB,0BAA0B,IAAI,UAAU,gBAAgB,IAAI,SAAS,GAAG,iBAAiB,kKAAkK,YAAY,aAAa,uBAAuB,0BAA0B,4BAA4B,gBAAgB,oBAAoB,gBAAgB,IAAI,OAAO,GAAG,mBAAmB,sBAAsB,IAAI,YAAY,OAAO,uCAAuC,OAAO,YAAY,kBAAkB,sFAAsF,8EAA8E,OAAO,2BAA2B,uCAAuC,iBAAiB,mFAAmF,wBAAwB,2BAA2B,iBAAiB,+FAA+F,SAAS,mBAAmB,aAAa,qBAAqB,qBAAqB,oBAAoB,0BAA0B,gBAAgB,IAAI,OAAO,GAAG,yDAAyD,oBAAoB,iBAAiB,8DAA8D,yFAAyF,2BAA2B,yGAAyG,cAAc,gBAAgB,iCAAiC,kCAAkC,IAAI,OAAO,GAAG,+FAA+F,GAAG,+BAA+B,qDAAqD,uHAAuH,mCAAmC,uBAAuB,cAAc,qBAAqB,KAAK,QAAQ,qBAAqB,IAAI,OAAO,GAAG,OAAO,aAAa,kBAAkB,IAAI,wBAAwB,GAAG,yCAAyC,OAAO,0BAA0B,iBAAiB,IAAI,oCAAoC,GAAG,iBAAiB,OAAO,4BAA4B,oBAAoB,IAAI,OAAO,GAAG,OAAO,oBAAoB,EAAE,IAAI,IAAI,GAAG;AAC1wL;;;;;;;;;;;;;;;;;;;;ACFA;AACA,IAAI,KAA4D,oBAAoB,mBAAO,CAAC,oGAAsC,GAAG,mBAAO,CAAC,sGAAuC,GAAG,mBAAO,CAAC,gGAAoC;AACnO,IAAI,CACwL;AAC5L,CAAC,6EAA6E;;AAE9E,yCAAyC,4DAA4D;;AAErG;AACA;AACA;;AAEA,6DAA6D,iFAAiF,WAAW,wHAAwH,gBAAgB,WAAW,yBAAyB,SAAS,wBAAwB,4BAA4B,cAAc,SAAS,+BAA+B,sBAAsB,WAAW,YAAY,gKAAgK,kDAAkD,SAAS,kBAAkB,kBAAkB,oBAAoB,sBAAsB,8BAA8B,cAAc,uBAAuB,eAAe,YAAY,oBAAoB,MAAM,iEAAiE,UAAU;AACj9B,sDAAsD,gBAAgB,gEAAgE,wDAAwD,6DAA6D,sDAAsD;AACjT,2CAA2C,uDAAuD,uCAAuC,SAAS,OAAO,oBAAoB;AAC7K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8BAA8B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gCAAgC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;;AAEA,mDAAmD,aAAa;;AAEhE,CAAC;;;;;;;;;;;AC/PD,qGAAiC;;;;;;;;;;;;ACApB,+EAA+E,sBAAsB,wDAAwD,gBAAgB;AAC1L,oDAAoD,0BAA0B,IAAI,6BAA6B,SAAS;AACxH,yBAAyB,IAAI,iCAAiC,SAAS;AACvE,sBAAsB;AACtB,kEAAkE,IAAI,iEAAiE,OAAO,wBAAwB,qBAAqB,aAAa,gBAAgB,SAAS,UAAU,8CAA8C,4DAA4D,aAAa,IAAI,iBAAiB,mBAAmB;AAC1Y,kBAAkB,4DAA4D,YAAY,8HAA8H,8BAA8B,cAAc,mBAAmB,MAAM,iBAAiB,OAAO,wBAAwB,iBAAiB,QAAQ,OAAO,SAAS,sBAAsB,aAAa,SAAS,4EAA4E,IAAI;AAClf,8CAA8C,cAAc;AAC5D,4BAA4B,aAAa,KAAK;AAC9C,oBAAoB,aAAa,eAAe;AAChD,oBAAoB,aAAa;AACjC,yBAAyB,SAAS,SAAS,KAAK,QAAQ;AACxD,uBAAuB,OAAO,uCAAuC,8CAA2C,CAAC,WAAW,EAAC,CAAC,0BAA0B,CAAC,6BAA6B,CAAC,sBAAsB,QAAQ,gCAAgC,mBAAO,CAAC,kGAA2B,EAAE,YAAY,mBAAO,CAAC,oBAAO,EAAE,4CAA4C,mBAAO,CAAC,0HAAuC,EAAE,mBAAmB,0BAA0B,6CAA6C,sDAAsD,2DAA2D,kDAAkD,mEAAmE,6CAA6C,0BAA0B,gDAAgD,0CAA0C,sBAAsB,GAAG,GAAG,mCAAmC,eAAe,iMAAiM,aAAa,iDAAiD,aAAa,0VAA0V,2CAA2C,uCAAuC,yCAAyC,iEAAiE,4EAA4E,gFAAgF,+DAA+D,4DAA4D,iCAAiC,SAAS;AACtiE,qBAAqB,gDAAgD,WAAW,qCAAqC,iBAAiB,8BAA8B,wCAAwC,gEAAgE,8CAA8C,iBAAiB,YAAY,qBAAqB,YAAY,mBAAmB,GAAG,IAAI,QAAQ,eAAe,KAAK,sDAAsD,gDAAgD,sDAAsD,qCAAqC,iBAAiB,oCAAoC,eAAe,4FAA4F,WAAW,+BAA+B,kCAAkC,sCAAsC,YAAY,8BAA8B,wDAAwD,yDAAyD,GAAG,4BAA4B,iEAAiE,iBAAiB,EAAE,sBAAsB,qDAAqD,aAAa,GAAG,6BAA6B,0DAA0D,sCAAsC,EAAE,WAAW,oCAAoC,YAAY,2EAA2E,wBAAwB,2BAA2B,WAAW,yBAAyB,aAAa,yBAAyB,uBAAuB,kBAAkB,aAAa,oBAAoB,GAAG,GAAG,uBAAuB,iCAAiC,0BAA0B;AAC9wD,WAAW,mDAAmD;AAC9D,yCAAyC,+EAA+E,8EAA8E,8CAA8C,EAAE,oCAAoC,0JAA0J,4BAA4B;AAChd,4BAA4B;AAC5B,wDAAwD,kEAAkE;AAC1H,+CAA+C;AAC/C,kBAAkB,wBAAwB,2CAA2C,+BAA+B,6BAA6B,MAAM,iFAAiF,8BAA8B,gDAAgD,kBAAkB,qCAAqC,iBAAiB,wBAAwB,qCAAqC,2BAA2B,iBAAiB,WAAW,2CAA2C,mEAAmE,mCAAmC,EAAE,8BAA8B,2BAA2B,iBAAiB,WAAW,uCAAuC;AACjwB,yHAAyH,wDAAwD,6CAA6C,+CAA+C,yCAAyC,wBAAwB,oBAAoB,8BAA8B,uBAAuB,WAAW,mBAAmB,GAAG,IAAI,mCAAmC,iBAAiB,iCAAiC,gCAAgC,YAAY,+BAA+B,iCAAiC,gCAAgC,gBAAgB,0BAA0B,iBAAiB,EAAE,iBAAiB,GAAG,oDAAoD,kCAAkC,qBAAqB,qBAAqB,mBAAmB,6BAA6B,sBAAsB,wBAAwB,kEAAkE,kCAAkC,KAAK,8BAA8B,qEAAqE,oBAAoB,iCAAiC,+BAA+B,kEAAkE,uBAAuB,kCAAkC,6BAA6B,0BAA0B,6CAA6C,sBAAsB,6BAA6B,sBAAsB,6EAA6E,qBAAqB;AACtnD,2BAA2B,OAAO,iDAAiD,wBAAwB,wBAAwB,yBAAyB,kZAAkZ,iBAAiB;AAC/jB,2BAA2B,mBAAmB;AAC9C,6BAA6B,uBAAuB,uCAAuC,oDAAoD,0BAA0B;;;;;;;;;;;;;;;ACtBlK;AACP;AACA,sDAAsD,+BAA+B,gBAAgB;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACZO;AACP,cAAc,eAAe;AAC7B,gBAAgB,KAAK;AACrB;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClBO;AACP;AACA;AACA;AACA;AACA,0CAA0C,iBAAiB;AAC3D,mCAAmC,gBAAgB;AACnD,aAAa;AACb;AACA;AACA;AACA;;;;;;;;;;;;;;;ACXO;AACP,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,yBAAyB;AACzB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvEO;AACP;AACA,oDAAoD;AACpD,wCAAwC,cAAc;AACtD,2BAA2B,cAAc,aAAa;AACtD;AACA;AACA;;;;;;;;;;;;;;ACPqD;AACP;AAC9C;;;;;;;;;;;;ACFU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACD2D;AAClB;AACI;AACuD;AAC9C;AACsB;AAC4B;AAC7C;AACf;AAC5C;AACA;AACA;AACA;AACmC;AACL;AACvB,sCAAsC,iHAAmC,YAAY,qDAAO;AAC5F,uCAAuC,qHAAqC,CAAC,+DAAc,EAAE,yFAAwB,CAAC,qEAAoB,GAAG,mDAAE,EAAE,oEAAa;AAC9I;AACvB;;;;;;;;;;;;AClBU;AACV;;;;;;;;;;;;;;;;ACD0D;AACG;AACP;AAC9B;AACxB;;;;;;;;;;;;ACJU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;;;;ACDA;AACO,uBAAuB,aAAa,sCAAsC,cAAc,8EAA8E,IAAI,OAAO,GAAG,iuBAAiuB,OAAO,6DAA6D,SAAS,GAAG,WAAW,SAAS,6DAA6D,2BAA2B,kFAAkF,yBAAyB,wBAAwB,wDAAwD,kFAAkF,kEAAkE,IAAI,SAAS,GAAG,SAAS,OAAO,8BAA8B,SAAS,wBAAwB,uBAAuB,iBAAiB,EAAE,6BAA6B,uBAAuB,OAAO,sFAAsF,MAAM,EAAE,SAAS,0EAA0E,kFAAkF,IAAI,GAAG;AACr3D;;;;;;;;;;ACFA;AACA,IAAI,KAA4D;AAChE,IAAI,CACkH;AACtH,CAAC,8BAA8B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,CAAC;;;;;;;;;;;;;;;;;AC3EsH;AAChH;AACP,oBAAoB,QAAQ,sBAAsB;AAClD;AACA;AACA;AACA,sBAAsB,2EAAyB,GAAG,QAAQ;AAC1D;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAA0B,GAAG,QAAQ;AAC3D;AACA;AACA;AACA;AACA,0BAA0B,6EAA2B,GAAG,QAAQ;AAChE;AACA;AACA;AACA;AACA,0BAA0B,6EAA2B,GAAG,QAAQ;AAChE;AACA,wBAAwB,6BAA6B;AACrD,uCAAuC,YAAY;AACnD;AACA;AACA;AACA,oBAAoB,2BAA2B;AAC/C,mCAAmC,SAAS,uBAAuB,MAAM;AACzE;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AClCoC;AACpC,+BAA+B;AACxB,kCAAkC,kDAAO;AAChD,6CAA6C,OAAO;AACpD;AACA,CAAC;AACM,mCAAmC,kDAAO;AACjD,kDAAkD,OAAO;AACzD;AACA,CAAC;AACM,oCAAoC,kDAAO;AAClD,kDAAkD,OAAO;AACzD;AACA,CAAC;AACM,iCAAiC,kDAAO;AAC/C,8EAA8E,OAAO;AACrF;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;AClB2D;AACE;AACa;AAC1E;AACO;AACP;AACA,gBAAgB,MAAM;AACtB;AACA;AACA,uBAAuB,yEAAoB;AAC3C;AACA;AACA;AACA;AACA,SAAS;AACT,iBAAiB;AACjB,KAAK;AACL,mBAAmB,QAAQ;AAC3B;AACA;AACA,kBAAkB,0EAAwB,GAAG,2BAA2B;AACxE;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACA,sCAAsC,uFAAyB;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA,CAAC;AACD;;;;;;;;;;;;;;;ACnCA;AACO;AACP;AACA,YAAY,eAAe;AAC3B,yBAAyB,MAAM;AAC/B;AACA,CAAC;AACD;;;;;;;;;;;;ACPU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;;;;;;;;;;;;;;;ACD+B;AACE;AACW;AACpB;AACa;AACJ;AACF;AACJ;AACD;AACI;AACF;AACQ;AACG;AACC;AACxC;;;;;;;;;;;;ACdU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;;;;;;;;;;ACDwE;AACY;AACF;AAClF;AACA;AACA;AACA;AACmC;AACL;AACvB;AACP,qCAAqC,iGAA0B;AAC/D,2BAA2B,qFAAoB;AAC/C;AACA;AACA;AACoD;AACpD;;;;;;;;;;;;AChBU;AACV;;;;;;;;;;;;;;;;;;;;;;;ACD0C;AAChB;AACS;AACY;AACG;AACpB;AACN;AACI;AACQ;AACI;AACP;AACjC;;;;;;;;;;;;ACXU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;;;;;ACDuC;AAChC;AACP;AACA;AACA;AACA;AACA,0BAA0B,gDAAU;AACpC;AACA;AACA;AACA,gBAAgB,gDAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChBO;AACP;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACrBO;AACA;AACP;;;;;;;;;;;;;;;ACFO;AACP;;;;;;;;;;;;;;;ACDO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACLO;AACP;AACA;AACA,wBAAwB,oCAAoC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;ACdO;AACP;AACA,qDAAqD,qFAAqF;AAC1I;AACA;AACA;;;;;;;;;;;;;;;;;;ACLqE;AACP;AACa;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0EAAe;AACxB;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,4CAA4C,qBAAqB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,uFAAqB;AAC/F;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,yCAAyC,kBAAkB,SAAS,+FAA+F,EAAE;AACrK,CAAC,EAAE;AACH;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,8DAA8D,6EAAuC;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6EAAuC;AAC/D;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,uFAAqB;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,kBAAkB,cAAc,QAAQ,wGAAwG;AAC5M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,mEAAmE,GAAG;AACtE,oBAAoB;AACpB,yBAAyB,+BAA+B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,6CAA6C,aAAa;AAC1D;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,2HAA2H;AAC3H;AACA;AACA,2CAA2C,oBAAoB,2BAA2B;AAC1F,yCAAyC,kBAAkB,6CAA6C,EAAE;AAC1G,CAAC,IAAI,6BAA6B,4CAA4C,EAAE,iBAAiB,eAAe,EAAE,mBAAmB,kEAAkE,GAAG,0BAA0B,aAAa,sCAAsC,UAAU,WAAW;AAC5S,yDAAyD,+BAA+B,gBAAgB;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gHAAgH,aAAa,IAAI;AACjI;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5NmH;AAChC;AAC8B;AAC1G;AACP;AACA;AACA,gBAAgB,8BAA8B;AAC9C,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA,0CAA0C,+HAAuC;AACjF;AACA;AACA;AACA;AACA;AACA,oBAAoB,+FAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6HAAsC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6HAAsC;AAClE;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC5DO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACXO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjBO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxEkE;AAC3D;AACP;AACA;AACA;AACA;AACA;AACA,uDAAuD,8EAAgB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACnC8I;AACnC;AAC3G;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uCAAuC,IAAI;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,sCAAsC;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uHAAmC;AACnD;AACA;AACA,sCAAsC,sJAAmD,QAAQ,0JAAmD;AACpJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACnDsF;AAClB;AACe;AACE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6GAA6G,kEAA0B,EAAE,kEAA0B;AACnK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+FAAwB;AACxC;AACA;AACA,wBAAwB,gFAAiB;AACzC,wBAAwB,iGAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACtGkE;AAC3D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,8EAAgB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC9DyE;AACH;AAC/D;AACP;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kFAAkB;AACnC,2DAA2D,oBAAoB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,cAAc;AAClC,oBAAoB,aAAa;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qFAAoB;AACpC,aAAa;AACb;AACA;AACA,sEAAsE,cAAc;AACpF;AACA;AACA;AACA;AACA;AACA,qEAAqE,aAAa;AAClF;AACA;AACA,0EAA0E,kBAAkB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvJO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACzCO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClBsF;AAC/E;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,aAAa;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,sDAAsD,SAAS,wCAAwC,kEAA0B,EAAE,kEAA0B;AAC7J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+EAA+E;AAC/F;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClO+D;AACZ;AACkC;AACwB;AACE;AACK;AAC5B;AAC2B;AAClB;AACkB;AACE;AACS;AAC9C;AACE;AACU;AACtB;AACE;AACF;AACF;AACL;AACO;AACa;AAC8B;AACL;AAC7B;AACc;AAC7F;AACA,YAAY,8BAA8B,EAAE,+FAAwB;AACpE,YAAY,UAAU,EAAE,6FAAuB;AAC/C,2BAA2B,yGAA4B;AACvD;AACA,gCAAgC,mFAAkB;AAClD,iCAAiC,qFAAmB;AACpD;AACA,sCAAsC,kIAAwC;AAC9E,YAAY,yHAAoC;AAChD,+BAA+B,4EAAc;AAC7C;AACA;AACA;AACA;AACA,sCAAsC,+HAAuC;AAC7E,YAAY,2HAAqC;AACjD,+BAA+B,4EAAc;AAC7C;AACA;AACA;AACA;AACA,QAAQ,mFAAkB;AAC1B;AACA,YAAY,iFAAiB;AAC7B,YAAY,yHAAoC;AAChD;AACA;AACA,YAAY,2HAAqC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8BAA8B,EAAE,6FAAuB;AACnE,kCAAkC,oGAA2B;AAC7D;AACA,uCAAuC,+HAAuC;AAC9E;AACA;AACA;AACA;AACA;AACA,YAAY,8BAA8B,EAAE,+FAAwB;AACpE,kCAAkC,oGAA2B;AAC7D;AACA,uCAAuC,kIAAwC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6GAA8B;AACtC,uCAAuC,4EAAc;AACrD,YAAY,2IAA4C,CAAC,mFAAkB,UAAU,mFAAkB;AACvG;AACA;AACA,QAAQ,iFAAiB;AACzB,gBAAgB,eAAe,EAAE,6FAAuB;AACxD,QAAQ,8HAAsC;AAC9C;AACA;AACA;AACA;AACA;AACA,QAAQ,6GAA8B;AACtC,uCAAuC,4EAAc;AACrD,YAAY,mFAAkB,oBAAoB,qFAAmB;AACrE;AACA;AACA;AACA;AACA,yCAAyC,6FAAuB;AAChE;AACA;AACA,YAAY,iGAA2B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,6FAAuB;AAChE;AACA;AACA;AACA,gBAAgB,iGAA2B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,6FAAuB;AAChE;AACA;AACA;AACA;AACA;AACA,YAAY,iGAA2B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qHAAoC;AACxE,+BAA+B,yHAAoC;AACnE,qBAAqB;AACrB,gBAAgB,0GAA6B;AAC7C;AACA,YAAY,sDAAgB;AAC5B,YAAY,qDAAe;AAC3B;AACA,gBAAgB,gGAAwB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+DAAW;AAC3B,mDAAmD,mFAAkB;AACrE;AACA,uCAAuC,gIAAuC;AAC9E,sCAAsC,mFAAkB;AACxD;AACA;AACA;AACA,yEAAyE,mFAAkB;AAC3F,wBAAwB,gGAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4FAAsB;AAC1C;AACA;AACA;AACA,qCAAqC,qFAAmB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4FAAsB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,+DAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4FAAsB;AACtC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1SwD;AACjD;AACP;AACA;AACA;AACA,wCAAwC,kEAAmB;AAC3D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gCAAgC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3KO;AACP;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA,4BAA4B,kCAAkC;AAC9D;AACA;AACA;AACA,4BAA4B,mBAAmB;AAC/C;AACA;AACA;AACA,4BAA4B,8BAA8B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC/BqE;AACtB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,oEAAoE,gCAAgC;AACpG;AACA;AACA,sDAAsD,6EAAuC;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mCAAmC,uDAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC5E+D;AACJ;AACU;AACW;AACE;AAChB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4FAAuB;AACxD,wCAAwC,8FAAwB;AAChE,mBAAmB,iFAAkB;AACrC,oBAAoB,iFAAkB;AACtC,uFAAuF,0CAA0C,KAAK;AACtI,oBAAoB,YAAY;AAChC;AACA,4BAA4B,4BAA4B;AACxD,gCAAgC,0BAA0B;AAC1D,oBAAoB,2EAAe;AACnC;AACA;AACA;AACA;AACA,iEAAiE,MAAM;AACvE,gBAAgB,2EAAe;AAC/B,aAAa;AACb;AACA,wBAAwB,4BAA4B;AACpD,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,qEAAqE,6BAA6B;AAClG,oCAAoC,2BAA2B;AAC/D,wBAAwB,uEAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,8EAAgB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,gCAAgC,2BAA2B;AAC3D;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4BAA4B;AACpE;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,wCAAwC,4BAA4B;AACpE;AACA,4CAA4C,0BAA0B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,2BAA2B;AAChG;AACA,oCAAoC,2BAA2B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC/OO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,sCAAsC;AACtF;AACA;AACA;AACA;AACA;AACA,4DAA4D,gBAAgB;AAC5E;AACA;AACA,8DAA8D,iBAAiB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,cAAc;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,uBAAuB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,6BAA6B;AACpF,uDAAuD,4BAA4B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnFsF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,kFAAkF,kEAA0B,EAAE,kEAA0B;AACxI;AACA,6GAA6G,kEAA0B,qBAAqB,kEAA0B;AACtL;AACA;AACA;AACA,wGAAwG,kEAA0B,GAAG,kEAA0B;AAC/J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACpEkE;AAC3D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,8EAAgB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACnDO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjBkE;AAC3D;AACP;AACA;AACA;AACA;AACA;AACA,oDAAoD,8EAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,mEAAmE,gCAAgC;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjBkE;AAC3D;AACP;AACA;AACA;AACA;AACA;AACA,oDAAoD,8EAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChCO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACLgE;AACzD;AACP;AACA;AACA;AACA;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACbO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACvBsF;AAClB;AACe;AACE;AACrF;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F,kEAA0B,EAAE,kEAA0B;AACpJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+FAAwB;AACxC;AACA;AACA,wBAAwB,gFAAiB;AACzC,wBAAwB,iGAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AChEkE;AAC3D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,8EAAgB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvDO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AClD2E;AACT;AAC3D;AACP;AACA;AACA;AACA;AACA;AACA,wDAAwD,8EAAgB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uFAAsB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvCO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjBO;AACP;;;;;;;;;;;;;;;;;ACDmE;AACwC;AACpG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+EAAiB;AACjC;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,+EAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uHAAmC;AAC3D;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;AC3EqF;AAC9E;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,UAAU;AAClC;AACA,wBAAwB,iGAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxBkE;AAC3D;AACP;AACA;AACA;AACA;AACA;AACA,oDAAoD,8EAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvCO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACLO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACLmD;AACA;AAC5C;AACP;AACA,0BAA0B,+DAAW;AACrC,YAAY,+DAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACpBgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC9EkE;AAC3D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,8EAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACrDO;AACP;;;;;;;;;;;;;;;ACDO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF;AACtF,8CAA8C,gCAAgC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;AChDO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3BO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3BO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACdsF;AACtF;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,gFAAgF,kEAA0B,EAAE,kEAA0B;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxBkE;AAC3D;AACP;AACA;AACA;AACA;AACA;AACA,mDAAmD,8EAAgB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACtCO;AACP;AACA;AACA;;;;;;;;;;;;;;;ACHO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACTO;AACP,4BAA4B,QAAQ;AACpC;AACA;;;;;;;;;;;;;;;ACHO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACTO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACLgE;AACzD;AACP;AACA;AACA;AACA,kBAAkB,6EAAuB;AACzC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACVO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACfO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACT4H;AAC5H;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,YAAY,wIAA2C;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3BwD;AACU;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA,QAAQ,oEAAY;AACpB;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,8EAAgB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5FqF;AAC9E;AACP;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,UAAU;AACtC;AACA,4BAA4B,iGAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC5BO;AACP;;;;;;;;;;;;;;;ACDO;AACP;;;;;;;;;;;;;;;ACDO;AACP;;;;;;;;;;;;;;;ACDO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACNO;AACP;AACA;AACA;;;;;;;;;;;;;;;ACHO;AACP;AACA;AACA;;;;;;;;;;;;;;;ACHO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACNO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACLO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACLO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACLO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACLO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACLO;AACP;;;;;;;;;;;;;;;ACDO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACtBO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvBO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjBO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACTyE;AACH;AAC/D;AACP;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kFAAkB;AACnC,2DAA2D,oBAAoB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,cAAc;AAClC,oBAAoB,aAAa;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qFAAoB;AACpC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC3I2C;AACpC;AACP;AACA;AACA;AACA;AACA,YAAY,mDAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxCyE;AACJ;AACrE;AACA;AACA;AACO;AACP;AACA;AACA,oBAAoB,uCAAuC,IAAI;AAC/D;AACA;AACA,iCAAiC,6EAAkB,QAAQ,iFAAkB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qFAAoB;AACpC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACpEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AClEyF;AACE;AACmD;AACf;AACxH;AACP;AACA;AACA;AACA,QAAQ,uGAA4B;AACpC;AACA;AACA;AACA;AACA,QAAQ,qGAA2B;AACnC,QAAQ,qGAA2B;AACnC,QAAQ,qGAA2B;AACnC,QAAQ,qGAA2B;AACnC;AACA,6BAA6B,sJAAmD,QAAQ,0JAAmD;AAC3I,YAAY,2IAA4C;AACxD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACxBO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACT6G;AACpB;AACE;AACoD;AACU;AACF;AAChJ;AACP;AACA;AACA,QAAQ,uGAA4B;AACpC,QAAQ,yHAAoC;AAC5C,QAAQ,qGAA2B;AACnC;AACA,QAAQ,qGAA2B;AACnC,QAAQ,qGAA2B;AACnC,QAAQ,qGAA2B;AACnC;AACA;AACA,YAAY,2JAAoD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qKAAyD;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mKAAwD;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC7CO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACTO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACzDO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACNqH;AAC9G;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,6CAA6C;AAC7C;AACA;AACA;AACA,6FAA6F,UAAU;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iIAAwC;AAChD;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC3HsF;AACnB;AACJ;AACJ;AAC6B;AACnB;AACtB;AACxC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4BAA4B;AACpD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,yBAAyB,yCAAyC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA,6DAA6D,kEAA0B;AACvF,qBAAqB;AACrB;AACA,6DAA6D,kEAA0B;AACvF;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,2BAA2B,+EAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB,4BAA4B;AACpD;AACA,4BAA4B,0BAA0B;AACtD;AACA;AACA;AACA,iCAAiC,uDAAW;AAC5C;AACA,+DAA+D,MAAM;AACrE;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,6CAA6C,oGAA2B;AACxE;AACA,uBAAuB,iFAAkB;AACzC,wBAAwB,iFAAkB;AAC1C;AACA;AACA,0EAA0E,MAAM,QAAQ,0CAA0C,KAAK;AACvI;AACA;AACA;AACA;AACA;AACA,iEAAiE,6BAA6B;AAC9F;AACA,gCAAgC,2BAA2B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,2BAA2B;AAC3E;AACA;AACA,gCAAgC,gBAAgB;AAChD,oCAAoC,4BAA4B;AAChE,wCAAwC,0BAA0B;AAClE,4BAA4B,2EAAe;AAC3C;AACA;AACA;AACA,6EAA6E,MAAM;AACnF,4BAA4B,2EAAe;AAC3C,yBAAyB;AACzB;AACA,oCAAoC,4BAA4B;AAChE,wCAAwC,2BAA2B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,6EAA6E,6BAA6B;AAC1G,4CAA4C,2BAA2B;AACvE,gCAAgC,uEAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,wCAAwC,4BAA4B;AACpE;AACA,4CAA4C,0BAA0B;AACtE;AACA;AACA;AACA;AACA;AACA,4CAA4C,YAAY;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,6BAA6B;AAClG;AACA,oCAAoC,2BAA2B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC1Y6G;AACpB;AACE;AACpF;AACP;AACA,IAAI,uGAA4B;AAChC,IAAI,yHAAoC;AACxC,IAAI,yHAAoC;AACxC,IAAI,yHAAoC;AACxC,IAAI,yHAAoC;AACxC,IAAI,qGAA2B;AAC/B;AACA;AACA;;;;;;;;;;;;;;;;ACb2F;AACpF;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uGAA4B;AACpC;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChB2F;AACX;AACzE;AACP;AACA;AACA;AACA;AACA,IAAI,uGAA4B;AAChC;AACA,IAAI,4FAAuB;AAC3B;AACA;AACA;;;;;;;;;;;;;;;;;;;ACZ6G;AAClB;AAC8D;AACF;AAChJ;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uGAA4B;AACpC,QAAQ,yHAAoC;AAC5C;AACA;AACA,YAAY,qKAAyD;AACrE;AACA;AACA;AACA,YAAY,mKAAwD;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC1BwE;AACjE;AACP,6BAA6B,6BAA6B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,+DAA+D,mCAAmC;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oFAAoB;AACtD;AACA;AACA;;;;;;;;;;;;;;;;;ACxFyF;AACE;AACpF;AACP;AACA;AACA,QAAQ,uGAA4B;AACpC;AACA;AACA;AACA;AACA,QAAQ,qGAA2B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AClC6G;AAClB;AACpF;AACP;AACA,IAAI,uGAA4B;AAChC,IAAI,yHAAoC;AACxC;AACA;AACA;;;;;;;;;;;;;;;;;ACR6G;AAClB;AACpF;AACP;AACA;AACA,QAAQ,uGAA4B;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yHAAoC;AAC5C,QAAQ,yHAAoC;AAC5C,QAAQ,yHAAoC;AAC5C,QAAQ,yHAAoC;AAC5C,QAAQ,yHAAoC;AAC5C;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtB6G;AAClB;AACpF;AACP;AACA,IAAI,uGAA4B;AAChC,IAAI,yHAAoC;AACxC;AACA;AACA;;;;;;;;;;;;;;;;ACR2F;AACpF;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uGAA4B;AACpC;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACbmE;AACX;AACgB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACO;AACP,0CAA0C,8EAA8E;AACxH,2BAA2B,+EAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA,4BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA,mCAAmC,oEAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gCAAgC,YAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,oFAAoB;AACnC;AACA;AACA;;;;;;;;;;;;;;;AC1IO;AACP;AACA;AACA;;;;;;;;;;;;;;;;ACH2F;AACpF;AACP;AACA,IAAI,uGAA4B;AAChC;AACA;AACA,0FAA0F,cAAc;AACxG;AACA;AACA;AACA;;;;;;;;;;;;;;;ACVO,sEAAsE,aAAa;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,oBAAoB;AACjG;AACA;AACA;;;;;;;;;;;;;;;AChBO;AACP,kCAAkC,kBAAkB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACnBO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACT6G;AACpB;AACE;AAC8D;AACF;AAChJ;AACP;AACA;AACA,QAAQ,uGAA4B;AACpC,QAAQ,yHAAoC;AAC5C,QAAQ,yHAAoC;AAC5C;AACA;AACA;AACA;AACA,YAAY,qGAA2B;AACvC;AACA;AACA;AACA,YAAY,qKAAyD;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mKAAwD;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AClC6G;AACpB;AACE;AACpF;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uGAA4B;AACpC,QAAQ,yHAAoC;AAC5C,QAAQ,yHAAoC;AAC5C,QAAQ,yHAAoC;AAC5C,QAAQ,yHAAoC;AAC5C,QAAQ,yHAAoC;AAC5C,QAAQ,yHAAoC;AAC5C,QAAQ,qGAA2B;AACnC,QAAQ,qGAA2B;AACnC,QAAQ,qGAA2B;AACnC,QAAQ,qGAA2B;AACnC,QAAQ,qGAA2B;AACnC,QAAQ,qGAA2B;AACnC,QAAQ,qGAA2B;AACnC,QAAQ,qGAA2B;AACnC;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC5B2F;AACnB;AACjE;AACP,6BAA6B,qNAAqN;AAClP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uGAA4B;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oEAAoE,8BAA8B;AAClG,2EAA2E,oCAAoC;AAC/G,2EAA2E,oCAAoC;AAC/G,2EAA2E,oCAAoC;AAC/G,wEAAwE,oCAAoC;AAC5G,wEAAwE,oCAAoC;AAC5G,wEAAwE,oCAAoC;AAC5G;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gDAAgD,aAAa;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA,2EAA2E,cAAc;AACzF,2EAA2E,cAAc;AACzF,wEAAwE,cAAc;AACtF,wEAAwE,cAAc;AACtF,wEAAwE,cAAc;AACtF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oFAAoB;AACtD;AACA;AACA;;;;;;;;;;;;;;;AC7RO;AACP,6BAA6B,kCAAkC;AAC/D;AACA;AACA;AACA,oGAAoG,sBAAsB;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACbO;AACP,2GAA2G;AAC3G;AACA;;;;;;;;;;;;;;;;;ACH6G;AAClB;AACpF;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uGAA4B;AACpC,QAAQ,yHAAoC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClCwE;AACjE;AACP;AACA;AACA;AACA;AACA,qCAAqC;AACrC,iDAAiD;AACjD;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA,mEAAmE,oCAAoC;AACvG;AACA,gFAAgF,mEAAmE;AACnJ;AACA,+EAA+E,wDAAwD;AACvI,oEAAoE,oCAAoC;AACxG;AACA,iFAAiF,oEAAoE;AACrJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qFAAqF,oCAAoC;AACzH;AACA;AACA;AACA;AACA,SAAS;AACT,sFAAsF,oCAAoC;AAC1H;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,+EAA+E,wDAAwD;AACvI,sFAAsF,oCAAoC;AAC1H;AACA;AACA;AACA;AACA,SAAS;AACT,uFAAuF,oCAAoC;AAC3H;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAA0D;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oEAAoE,8DAA8D;AAClI;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,cAAc,gCAAgC;AAC9C,kEAAkE,cAAc;AAChF,8DAA8D,cAAc;AAC5E,8DAA8D,eAAe;AAC7E;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oFAAoB;AACtD;AACA;AACA;;;;;;;;;;;;;;;;;AC3QyF;AACE;AACpF;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uGAA4B;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qGAA2B,yBAAyB,OAAO;AACnE,QAAQ,qGAA2B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxD2F;AACnB;AACjE;AACP,6BAA6B,wCAAwC;AACrE;AACA;AACA,QAAQ,uGAA4B;AACpC,QAAQ,uGAA4B;AACpC,oEAAoE,8BAA8B;AAClG,qEAAqE,+BAA+B;AACpG,qEAAqE,8BAA8B;AACnG,qEAAqE,+BAA+B;AACpG;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,YAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oFAAoB;AACtD;AACA;AACA;;;;;;;;;;;;;;;AClKO;AACP;;;;;;;;;;;;;;;;;ACDyE;AACJ;AACrE;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uCAAuC,IAAI;AAC/D;AACA;AACA,iCAAiC,6EAAkB,QAAQ,iFAAkB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qFAAoB;AACpC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC9EoE;AACe;AACE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+FAAwB;AACxC;AACA;AACA,wBAAwB,gFAAiB;AACzC,wBAAwB,iGAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxFkE;AAC3D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,8EAAgB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC7DsF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG,kEAA0B,EAAE,kEAA0B;AACxJ,kGAAkG,kEAA0B,EAAE,kEAA0B;AACxJ,kGAAkG,kEAA0B,EAAE,kEAA0B;AACxJ,4FAA4F,kEAA0B,EAAE,kEAA0B;AAClJ,4FAA4F,kEAA0B,EAAE,kEAA0B;AAClJ,4FAA4F,kEAA0B,EAAE,kEAA0B;AAClJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC5G2E;AACT;AAC3D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,8EAAgB;AACrE;AACA;AACA,mFAAmF,oCAAoC;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,wFAAwF,oCAAoC;AAC5H;AACA;AACA,gCAAgC,qCAAqC;AACrE;AACA;AACA;AACA;AACA,qFAAqF,oCAAoC;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,kCAAkC,2BAA2B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF,oCAAoC;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uFAAsB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACtKA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,gEAAgE,gCAAgC;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACnBO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACPO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;;;ACfO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;ACZqE;AAC9D;AACP;AACA;AACA,4BAA4B,6EAAkB,QAAQ,iFAAkB;AACxE;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA,sGAAsG;AACtG;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;ACpCO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACLO;AACP;AACA;AACA;;;;;;;;;;;;;;;;ACH2G;AACpG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uHAAmC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1B2E;AACT;AAC3D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,8EAAgB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uFAAsB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC/CA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,+CAA+C,8BAA8B,GAAG;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACzBO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;ACxCO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,yBAAyB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChBA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sCAAsC,cAAc,QAAQ,0BAA0B,SAAS,iBAAiB,iBAAiB,WAAW,0BAA0B,UAAU,KAAK;AAC1M;AACA,2CAA2C;AAC3C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uGAAuG,oBAAoB;AAC3H;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,oDAAoD,MAAM;AAC1D;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClDA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,WAAW,2CAA2C;AAC5H,2CAA2C;AAC3C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uGAAuG,oBAAoB;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC1BO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClBA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClBA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjBO;AACP;AACA;AACA;;;;;;;;;;;;;;;ACHA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACnBO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC9BO;AACP;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACpD2E;AACT;AAC3D;AACP;AACA;AACA;AACA;AACA;AACA,yDAAyD,8EAAgB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uFAAsB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvCO;AACP;;;;;;;;;;;;;;;ACDO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;ACtBO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,+DAA+D;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,0DAA0D;AACzH;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC9BO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;ACdO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC9BO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACP;AACO;AACA;AACP;;;;;;;;;;;;;;;ACXO;AACP;AACA;AACA;;;;;;;;;;;;;;;;ACH2C;AACpC;AACP,WAAW,wDAAW;AACtB;AACA;;;;;;;;;;;;;;;ACJO;AACP;AACA;AACA;;;;;;;;;;;;;;;ACHO;AACP;AACA;AACA;;;;;;;;;;;;;;;ACHO;AACP;AACA;AACA;;;;;;;;;;;;;;;ACHO;AACP;AACA;AACA;;;;;;;;;;;;;;;ACHO;AACP;AACA;AACA;;;;;;;;;;;;;;;ACHO;AACP;AACA;AACA;;;;;;;;;;;;;;;ACHO;AACP;AACA;AACA;;;;;;;;;;;;;;;ACHO;AACP;AACA;AACA;;;;;;;;;;;;;;;ACHO;AACP;AACA;AACA;;;;;;;;;;;;;;;ACHO;AACP;AACA;AACA;;;;;;;;;;;;;;;;ACH6D;AACtD;AACP,IAAI,0EAAkB;AACtB;AACA;;;;;;;;;;;;;;;;ACJ6D;AACtD;AACP;AACA;AACA;AACA;AACA;AACA,QAAQ,0EAAkB;AAC1B;AACA;AACA;;;;;;;;;;;;;;;ACVO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACNO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACNgF;AACzE;AACP,IAAI,6FAA2B;AAC/B,IAAI,6FAA2B;AAC/B,IAAI,6FAA2B;AAC/B;AACA;;;;;;;;;;;;;;;ACNO;AACP;AACA,gBAAgB,eAAe;AAC/B,6BAA6B,MAAM;AACnC;AACA;AACA;AACA;AACA,kCAAkC,MAAM;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACjBO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACN2E;AACpE;AACP,QAAQ,uFAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACVO;AACP,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvBO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACfkF;AAC3E;AACP,gDAAgD,+FAA4B;AAC5E;AACA;AACA;;;;;;;;;;;;;;;;;ACLoD;AAC0C;AACvF;AACP,6BAA6B,4DAAsB;AACnD;AACA;AACA,QAAQ,4DAAsB;AAC9B;AACA,yCAAyC,2GAAkC;AAC3E;AACA;AACA;AACA;;;;;;;;;;;;;;;ACZO;AACP;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ6E;AACX;AACA;AACI;AACrB;AACY;AACK;AACK;AACE;AACd;AACiB;AACrE;AACP,YAAY,eAAe,EAAE,oFAAuB;AACpD;AACA;AACA;AACA;AACA,KAAK;AACL,wBAAwB,yFAAuB;AAC/C;AACA;AACA;AACA;AACA,UAAU,8EAAkB;AAC5B;AACA,cAAc,8EAAkB;AAChC;AACA,kBAAkB,kFAAoB;AACtC;AACA,sBAAsB,6DAAU;AAChC;AACA,0BAA0B,yEAAgB;AAC1C;AACA,8BAA8B,8EAAkB;AAChD;AACA;AACA;AACA,sCAAsC,sFAAwB;AAC9D;AACA;AACA;AACA;AACA,QAAQ,wEAAiB;AACzB,QAAQ,0FAAyB;AACjC;AACA;AACA;;;;;;;;;;;;;;;;AC9C6G;AACtG;AACP,IAAI,0HAAyC;AAC7C;AACA;;;;;;;;;;;;;;;;ACJ6D;AACtD;AACP,WAAW,0EAAkB;AAC7B;AACA;;;;;;;;;;;;;;;ACJO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACTmF;AAC5E;AACP,2BAA2B,gGAA4B;AACvD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACPqD;AACQ;AACtD;AACP,oCAAoC,kEAAc;AAClD,+BAA+B,0EAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACVqD;AACQ;AACtD;AACP,oCAAoC,kEAAc;AAClD,+BAA+B,0EAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACVO;AACP,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;ACrB2E;AACpE;AACP,QAAQ,uFAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACTA;AACA;AACA,IAAI,8IAA8I;AAC3I;AACP;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA,wBAAwB,eAAe;AACvC,oDAAoD;AACpD;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD,yEAAyE;AACzE;AACA,gCAAgC,oBAAoB;AACpD,sEAAsE;AACtE;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1B0D;AACL;AAC9C;AACP,WAAW,kEAAc,CAAC,kEAA4B;AACtD;AACA;;;;;;;;;;;;;;;;;ACL2D;AACN;AAC9C;AACP,WAAW,kEAAc,CAAC,mEAA6B;AACvD;AACA;;;;;;;;;;;;;;;;;;ACLoD;AACS;AACR;AAC9C;AACP,+BAA+B,kEAAc,CAAC,4DAAsB;AACpE,mCAAmC,0EAAkB;AACrD,WAAW,kEAAc;AACzB;AACA;;;;;;;;;;;;;;;;;ACR6C;AACQ;AAC9C;AACP,WAAW,kEAAc,CAAC,qDAAe;AACzC;AACA;;;;;;;;;;;;;;;ACLO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACR8C;AACO;AAC9C;AACP,WAAW,kEAAc,CAAC,sDAAgB;AAC1C;AACA;;;;;;;;;;;;;;;;;ACL+C;AACM;AAC9C;AACP,WAAW,kEAAc,CAAC,uDAAiB;AAC3C;AACA;;;;;;;;;;;;;;;ACLO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACPO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACZO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACLqD;AAC9C,yCAAyC,6DAAuB;AACvE;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACfO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACVO;AACP;AACA;AACA;;;;;;;;;;;;;;;;ACH4C;AACrC;AACP,WAAW,oDAAc;AACzB;AACA;;;;;;;;;;;;;;;;ACJqD;AAC9C;AACP,YAAY,6DAAuB;AACnC;AACA;;;;;;;;;;;;;;;ACJO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACLO;AACP;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB,8CAA8C,gDAAgD;AAC9F;AACA;;;;;;;;;;;;;;;ACRO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACZO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iCAAiC;AAChE;AACA;AACA;;;;;;;;;;;;;;;ACfO;AACP,aAAa;AACb;AACA;;;;;;;;;;;;;;;ACHO;AACP,YAAY,aAAa;AACzB;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;;;;;;;;;;;;;;;;;ACbqD;AAC8B;AAC5E;AACP,QAAQ,6DAAuB;AAC/B;AACA;AACA,IAAI,6DAAuB;AAC3B,IAAI,gGAA4B;AAChC;AACA;;;;;;;;;;;;;;;;;ACTkE;AACU;AAC5E;AACO;AACP,SAAS,8EAAkB;AAC3B,QAAQ,yFAAyB;AACjC;AACA;AACA;;;;;;;;;;;;;;;;;ACRqD;AAC8B;AAC5E;AACP,SAAS,6DAAuB;AAChC;AACA;AACA,IAAI,6DAAuB;AAC3B,IAAI,gGAA4B;AAChC;AACA;;;;;;;;;;;;;;;ACTO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,gCAAgC;AAC5C;AACA,2BAA2B,cAAc;AACzC,2BAA2B,gCAAgC;AAC3D;AACA;AACA,oFAAoF,iFAAiF,8GAA8G,IAAI;AAChR;AACP;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;;;;;;;;;;;;;;;AC5BO;AACP;AACA;AACA;;;;;;;;;;;;;;;ACHO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACTO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACXO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACZO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACXO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACzCO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACVO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACdO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACVO;AACP,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACXO;AACP,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvCO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACrBA;AACO;AACP;AACA,YAAY,eAAe;AAC3B,yBAAyB,MAAM;AAC/B;AACA,CAAC;AACD;;;;;;;;;;;;;;;ACPO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACVO;AACP;AACA;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACXqE;AAC9D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iFAAoB;AAC9C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;AChB2E;AACpE;AACP;AACA;AACA;AACA;AACA,sBAAsB,uFAAuB;AAC7C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACbO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;AChBgE;AACzD;AACP;AACA;AACA;AACA;AACA,gCAAgC,4EAAiB;AACjD;AACA;AACA;AACA,gDAAgD,eAAe;AAC/D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4EAAiB;AACzC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACnEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;ACX+D;AACxD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,4EAAoB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;AC/BO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;ACV2E;AACpE;AACP;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uFAAuB;AAC7C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sBAAsB,uFAAuB;AAC7C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sBAAsB,uFAAuB;AAC7C;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;AC/BO;AACP;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACb6E;AACtE;AACP;AACA;AACA;AACA,sBAAsB,yFAAwB;AAC9C;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;ACXU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDgC;AACG;AACJ;AACQ;AACI;AACS;AACN;AACd;AACQ;AACC;AACR;AACJ;AACQ;AACC;AACR;AACW;AACF;AACO;AACU;AACxB;AACK;AACU;AACF;AACH;AACY;AACzB;AACQ;AACA;AACG;AACC;AACE;AACJ;AACQ;AACR;AACS;AACN;AACT;AACG;AACP;AACG;AACW;AACG;AACf;AACH;AACG;AACG;AACG;AACa;AACG;AACC;AACL;AACG;AACG;AACG;AAClB;AACK;AACU;AACP;AACN;AACQ;AACE;AACN;AACC;AACJ;AACO;AACF;AACC;AACT;AACY;AACJ;AACd;AACS;AACN;AACP;AACG;AACD;AACY;AACJ;AACR;AACK;AACG;AACL;AACG;AACJ;AAClC;;;;;;;;;;;;ACpFU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDA;AACU;AACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACF2S;AAChP;AACuD;AAC3B;AACE;AACN;AACO;AAC0B;AACtC;AACsB;AACd;AACS;AACX;AACsB;AACS;AAC7B;AACiB;AACE;AACzB;AACA;AACN;AACE;AACmB;AACS;AACT;AACA;AACS;AAClC;AAC2B;AACS;AACL;AACS;AACpC;AACU;AAC8C;AAC/B;AACS;AACZ;AACR;AACS;AACO;AACpC;AACE;AACY;AACF;AACS;AAC+B;AACd;AAC3C;AAC2B;AACiB;AACS;AACnD;AACE;AACiB;AACuB;AAC9C;AACiB;AACS;AACkB;AACxB;AACC;AACC;AACe;AAC1B;AAC4C;AACd;AACb;AACS;AACD;AAC7B;AACQ;AACF;AACC;AACN;AACE;AACmB;AACT;AACN;AACE;AACP;AAC0B;AAC1B;AACM;AAC2C;AACQ;AACV;AACW;AAC3B;AACS;AACM;AACzC;AACgB;AACM;AACc;AACZ;AACC;AACQ;AACR;AACW;AAC1B;AACiB;AACX;AACa;AACW;AACtB;AACvB;AAC0C;AAC5C;AAC0B;AACW;AACI;AACQ;AACV;AAC0B;AACnB;AACnB;AACR;AACW;AACP;AACA;AACS;AACW;AACf;AACW;AACjC;AAC2B;AACX;AACS;AACjB;AACS;AACL;AACf;AACiB;AACE;AACc;AACC;AACvB;AACf;AAC4B;AACS;AACI;AACiC;AAC9B;AAC0C;AACnD;AACO;AACiB;AACI;AACN;AACc;AACL;AAClB;AACrB;AACqF;AACrD;AACJ;AAC3D;AAC4B;AACS;AAClD;AAC2D;AACyB;AACY;AAC/D;AACyE;AACzC;AACU;AAC9C;AACE;AACU;AAC/B;AACS;AACE;AACV;AACQ;AACF;AACjB;AACY;AACO;AACF;AACE;AAC2B;AACH;AACN;AACE;AACoD;AACgB;AACJ;AACA;AACc;AACN;AACI;AACtD;AACT;AAClC;AACY;AAC0D;AACQ;AAChF;AAClE;AACA;AACA;AACA;AACmC;AACL;AAC9B,4CAA4C,+HAAyC,CAAC,gFAAkB;AACxG,6CAA6C,iIAA0C,CAAC,gFAAkB;AAC1G,+CAA+C,sIAA4C,CAAC,gFAAkB;AAC9G;AACA,6BAA6B,gGAA0B;AACvD,wBAAwB,oFAAqB;AAC7C,eAAe,iEAAY;AAC3B,iCAAiC,yGAA+B,kBAAkB,8EAAoB;AACtG,6BAA6B,+FAA0B,CAAC,0FAAuB;AAC/E,gCAAgC,uGAA6B,CAAC,0FAAuB,wBAAwB,yEAAc;AAC3H,mCAAmC,6GAAiC,2BAA2B,gFAAkB;AACjH,yBAAyB,sFAAsB,CAAC,qDAAa;AAC7D,6CAA6C,iIAA0C;AACvF,oCAAoC,8GAAiC;AACrE;AACA,+BAA+B,kGAA4B,CAAC,6EAAiB;AAC7E,sCAAsC,iHAAmC;AACzE,6BAA6B,+FAA0B;AACvD,0BAA0B,yFAAuB;AACjD,2BAA2B,2FAAwB;AACnD,0CAA0C,0HAAuC;AACjF,6BAA6B,8FAA0B,CAAC,oGAA6B,CAAC,oEAA4B,GAAG,uGAA8B,4EAA4E,8HAAuC,0CAA0C,wIAA4C,EAAE,0FAAuB,wBAAwB,sGAA4B,EAAE,gFAAkB,EAAE,gFAAkB,EAAE,8EAAiB,EAAE,yEAAc,EAAE,gFAAkB,oBAAoB,+GAAkC,CAAC,sDAAc,EAAE,wIAA4C,EAAE,0FAAuB,EAAE,gFAAkB,EAAE,kFAAmB,EAAE,8EAAiB,GAAG,8EAAoB,EAAE,sFAAwB,EAAE,qFAAuB,EAAE,gGAA2B,CAAC,8HAAuC,EAAE,sDAAc,EAAE,0FAAuB,EAAE,gFAAkB,EAAE,kFAAmB,oBAAoB,8EAAiB,gCAAgC,6EAAkB,2BAA2B,0FAAuB,EAAE,wEAAc;AAC1kC,gCAAgC,oGAA6B,mDAAmD,8EAAoB;AACjF;AACnD;AACA,qCAAqC,+GAAkC;AACvE,oCAAoC,8GAAiC;AACrE,0CAA0C,4HAAuC,8BAA8B,8EAAoB;AACnI,qDAAqD,qJAAkD;AACvG,+BAA+B,kGAA4B,oCAAoC,qFAAuB,sEAAsE,2HAAuC;AAClL;AACjD,4BAA4B,2FAAyB,CAAC,+EAAoB;AAC1E,iCAAiC,yGAA8B,uBAAuB,4FAAwB,EAAE,yEAAc;AAC9H,0BAA0B,wFAAuB;AACjD,0CAA0C,6HAAwC,uCAAuC,wKAA2D,EAAE,oKAAyD,EAAE,oKAAyD,EAAE,kLAAgE,EAAE,4KAA6D,EAAE,gLAA+D,EAAE,qJAAkD,EAAE,iKAAwD,CAAC,8EAAkB,GAAG,6JAAsD;AACtqB,yBAAyB,sFAAsB,CAAC,iGAA2B,CAAC,4FAAwB;AACpG,4CAA4C,iIAA0C,uDAAuD,gFAAkB;AAC/J,yBAAyB,wFAAuB,CAAC,sGAA8B,CAAC,qEAA6B,6BAA6B,yDAAiB,EAAE,sFAAwB,EAAE,iFAAkC,EAAE,yFAA0C,EAAE,0FAA2C,EAAE,qFAAsC,EAAE,6EAA8B,EAAE,4EAA6B,EAAE,iFAAkC,iCAAiC,oGAA2B;AACzf,yCAAyC,wHAAsC,8EAA8E,oFAAuB,oFAAoF,6EAAiB;AACpN;AACrE,wCAAwC,qHAAqC,uBAAuB,mHAAkC,EAAE,8EAAoB,EAAE,oFAAuB,EAAE,kHAAuC,CAAC,+EAAoB,EAAE,8EAAkB;AACvQ,uCAAuC,sHAAqC,oBAAoB,gGAA4B,EAAE,gFAAkB;AAChJ,6BAA6B,iGAA0B;AACvD,oCAAoC,6GAAiC,yEAAyE,sFAAwB,EAAE,gGAA4B;AACpM,2BAA2B,yFAAwB,CAAC,gFAAkB;AACtE,8BAA8B,kGAA2B,CAAC,oFAAuB;AACjF,sCAAsC,qHAAoC;AAC1E,wCAAwC,wHAAsC,gCAAgC,gFAAkB;AAChI,qCAAqC,+GAAkC;AACvE,0CAA0C,4HAAwC,CAAC,sGAA+B,EAAE,gFAAkB;AACtI,uCAAuC,mHAAoC,0DAA0D,sGAA+B,iDAAiD,wGAA8B;AACnP,4CAA4C,kIAA0C,yDAAyD,+EAAoB;AACnK,uCAAuC,uHAAqC,4EAA4E,kLAAgE,EAAE,gLAA+D;AACzR,yCAAyC,0HAAuC,oDAAoD,gFAAkB;AACtJ,sCAAsC,iHAAmC,0JAA0J,6EAAiB;AACpP,kCAAkC,4GAAgC,CAAC,qFAAuB,EAAE,8EAAkB;AAC9G,oCAAoC,+GAAkC,4BAA4B,gFAAkB;AACpH,iCAAiC,sGAA8B;AAC/D,gCAAgC,uGAA8B,oBAAoB,iFAAqB,EAAE,gFAAkB;AAC3H,6BAA6B,8FAA0B,kEAAkE,iFAAqB;AAC9I,2CAA2C,+HAAyC,CAAC,qFAAuB;AAC5G,6CAA6C,kIAA2C,wDAAwD,gFAAkB;AAClK,0CAA0C,yHAAuC,mHAAmH,qFAAuB;AAC3N,+BAA+B,qGAA6B,oBAAoB,+EAAoB,EAAE,gFAAkB;AACxH,4BAA4B,4FAAyB,iEAAiE,+EAAoB;AAC1I,uCAAuC,wHAAqC,CAAC,sFAAwB,EAAE,oFAAuB,EAAE,sGAA+B,EAAE,qFAAuB;AACxL,wCAAwC,uHAAqC,kBAAkB,+EAAoB,EAAE,sGAA+B,EAAE,6IAA+C,CAAC,+EAAoB;AAC1N,oCAAoC,gHAAkC,oCAAoC,gFAAkB;AAC5H,kCAAkC,6GAAgC;AAClE,iCAAiC,uGAA8B;AAC/D,4BAA4B,8FAA0B,kFAAkF,sGAA+B,EAAE,qFAAuB,EAAE,uEAAc,+BAA+B,8EAAkB;AACjQ;AACA,2CAA2C,4HAAwC,6IAA6I,6EAAiB;AACjP,mCAAmC,8GAAiC,uCAAuC,kLAAgE,EAAE,4KAA6D,EAAE,gLAA+D,EAAE,6JAAsD;AACnW,qCAAqC,kHAAmC,gDAAgD,gFAAkB;AAC1I,kCAAkC,yGAA+B,kJAAkJ,6EAAiB;AACpO,mDAAmD,gJAAiD;AACpG,wCAAwC,0HAAsC,6CAA6C,oFAAuB,EAAE,+EAAoB,EAAE,6DAAS;AACnL,mCAAmC,+GAAiC,6CAA6C,oFAAuB,mCAAmC,6DAAS,qDAAqD,8EAAkB;AAC3P,oCAAoC,iHAAkC,CAAC,8HAAuC,EAAE,oFAAuB,iCAAiC,+EAAoB,EAAE,sGAA+B,8BAA8B,qFAAuB,EAAE,wIAA4C,EAAE,uEAAc;AAChV,+BAA+B,sGAA6B;AAC5D,iCAAiC,0GAA+B,mFAAmF,+EAAoB,0BAA0B,gFAAkB;AACnN,8BAA8B,iGAA2B;AACzD,iCAAiC,0GAA+B,CAAC,8EAAoB;AACrF,gCAAgC,qGAA6B,4DAA4D,kGAA2B;AACpJ,2CAA2C,8HAAwC,gCAAgC,sGAA+B,EAAE,+EAAoB,8BAA8B,qFAAuB;AAC7N,qCAAqC,mHAAmC,qCAAqC,qFAAuB;AACpI,uCAAuC,uHAAqC,kDAAkD,gFAAkB;AAChJ,oCAAoC,8GAAiC;AACrE,qCAAqC,mHAAmC,6BAA6B,gFAAkB;AACvH,kCAAkC,0GAA+B,uBAAuB,oFAAuB;AAC/G,wBAAwB,oFAAqB;AAC7C,yCAAyC,yHAAsC;AAC/E;AACA,6CAA6C,kIAA0C;AACvF;AACO;AACP,MAAM,gGAA2B,kBAAkB,qFAAuB,EAAE,iFAAoB,4CAA4C,2EAAiB,CAAC,oEAAgB,yJAAyJ,iJAAiD;AACxX;AACA;AACA;AACA,wBAAwB,oFAAqB;AACtC,wBAAwB,oFAAqB,oCAAoC,8EAAoB,EAAE,2EAAmB,oDAAoD,wJAAmD,EAAE,+EAAkB;AAC5P,oCAAoC,6GAAiC;AACrE,+CAA+C,qIAA4C,uBAAuB,wHAAuC;AACzJ,mDAAmD,6IAAgD,uBAAuB,gIAA2C;AACrK,8CAA8C,mIAA2C,uBAAuB,sHAAsC;AACtJ,oDAAoD,oJAAkD,CAAC,oFAAuB;AAC9H,mDAAmD,8IAAgD;AACnG,gCAAgC,oGAA6B,8BAA8B,oFAAuB,EAAE,qFAAuB,EAAE,0EAAkB;AAC5G;AACnD,uCAAuC,oHAAoC;AAC3E,sCAAsC,iHAAmC;AACzE,+BAA+B,kGAA4B,CAAC,8EAAoB;AAChF,yCAAyC,wHAAsC;AAC/E,kCAAkC,wGAA+B,CAAC,8EAAoB;AACtF;AACA,wCAAwC,uHAAqC,oCAAoC,wEAAc;AAC/H,0CAA0C,6HAAwC,yBAAyB,8EAAoB,EAAE,oFAAuB,iCAAiC,sGAA+B,kCAAkC,+EAAoB,EAAE,sGAA+B,EAAE,qFAAuB;AACxU,qCAAqC,kHAAmC,CAAC,oFAAuB,qCAAqC,+EAAoB,EAAE,qFAAuB;AAClL,uCAAuC,sHAAqC,8GAA8G,sGAA+B,kCAAkC,+EAAoB,iGAAiG,gFAAkB;AAClY,qCAAqC,gHAAkC;AACvE,wCAAwC,wHAAqC;AAC7E;AACA;AACA,MAAM,6GAAiC,sIAAsI,0FAAuB,kHAAkH,2GAA+B,mCAAmC,0HAAsC,EAAE,6EAAiB;AACjb;AAC2D;AACA;AACE;AACI;AACZ;AACU;AAClB;AAC0B;AAC5B;AACU;AAC4B;AACQ;AACV;AACU;AACzF,uCAAuC,mHAAoC,CAAC,oFAAuB,EAAE,qFAAuB,EAAE,0EAAkB;AAC/E;AACjE,wCAAwC,sHAAqC,CAAC,qFAAuB;AACrG,uBAAuB,kFAAoB,2HAA2H,wJAAmD;AACzN,8CAA8C,kIAA2C,kBAAkB,oFAAuB;AACnD;AAC/E,uCAAuC,oHAAoC,+CAA+C,oFAAuB;AAChF;AACV;AACR;AACI;AACQ;AACJ;AAChD,0BAA0B,yFAAuB,CAAC,qDAAa;AAC/D,uBAAuB,mFAAoB,CAAC,wDAAgB;AAC5D,wBAAwB,qFAAqB,CAAC,yDAAiB;AAC/D,iCAAiC,wGAA8B,CAAC,qDAAa;AAC7E,0BAA0B,0FAAwB,kBAAkB,4JAAsD,wCAAwC,8HAAwC,iCAAiC,wKAA2D,wCAAwC,qHAAoC,iCAAiC,4HAAuC,wCAAwC,6IAA+C,2EAA2E,2IAA8C,wCAAwC,yJAAqD,wCAAwC,oJAAmD,wCAAwC,kIAA0C,wCAAwC,iHAAkC,EAAE,6GAAgC,UAAU,kMAAuE,iCAAiC,yIAA6C,wCAAwC,2FAAwB;AACtuC;;;;;;;;;;;;;;;AC7WO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1BU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDsC;AACmB;AACf;AAC0B;AACC;AAChB;AACC;AACA;AACC;AACJ;AACC;AACG;AACC;AACa;AACC;AACtB;AACC;AACW;AACC;AACjB;AACQ;AACH;AACQ;AACtB;AACL;AACa;AACQ;AACI;AACQ;AACX;AACQ;AACQ;AAC/B;AACO;AACQ;AACH;AACX;AACe;AACQ;AACH;AACjB;AACQ;AACR;AACM;AACN;AACQ;AACF;AACT;AACH;AACU;AACE;AACL;AACM;AACV;AACQ;AACZ;AACc;AACD;AACX;AACa;AACQ;AACH;AACQ;AACT;AACJ;AACQ;AACR;AACQ;AACH;AACQ;AACzB;AACA;AACI;AACS;AACQ;AACH;AACQ;AACX;AACQ;AACH;AACQ;AACrB;AACC;AACC;AACC;AACI;AACC;AACsB;AACN;AACQ;AACzB;AACQ;AACX;AACQ;AACQ;AAClC;AACJ;AACM;AAC0B;AACC;AACd;AACQ;AACH;AACQ;AACI;AACC;AAC9B;AACU;AACC;AACC;AACL;AACE;AACQ;AACC;AACV;AACQ;AACH;AACQ;AACiB;AACC;AACT;AACC;AACxB;AACC;AACa;AACC;AACwB;AACzC;AACiB;AACQ;AACH;AACQ;AAC3B;AACH;AACyB;AACrB;AACC;AACX;AACW;AACQ;AACa;AACC;AAC1B;AACC;AACA;AACQ;AACH;AACQ;AACU;AACC;AACV;AACJ;AACC;AACA;AACC;AACG;AACJ;AACC;AACO;AACC;AACC;AACjB;AACK;AACC;AACL;AACC;AACuB;AACC;AACT;AACC;AACjB;AACC;AACQ;AACH;AACQ;AACT;AACQ;AACP;AACR;AACM;AACD;AACD;AACD;AACE;AACD;AACC;AACJ;AACC;AACA;AACC;AACS;AACC;AACjB;AACW;AACC;AACJ;AACC;AACA;AACC;AACL;AACC;AACa;AACC;AACb;AACG;AACL;AACG;AACe;AACQ;AACJ;AACQ;AACb;AACQ;AACF;AACQ;AACvB;AACQ;AACH;AACQ;AACL;AACQ;AACtB;AACC;AACR;AACQ;AACQ;AACjB;AACY;AACQ;AACR;AACQ;AACQ;AAC3B;AACY;AACQ;AACX;AACQ;AACQ;AACxB;AACJ;AACC;AACI;AACF;AACK;AACY;AACQ;AACZ;AACQ;AACF;AACQ;AACd;AACR;AACQ;AACP;AACQ;AACQ;AACd;AACQ;AACT;AACQ;AACQ;AACF;AACQ;AACnC;AACO;AACQ;AACQ;AACZ;AACR;AACc;AACQ;AACQ;AAC5B;AACH;AACQ;AACF;AACQ;AACQ;AACF;AACQ;AACN;AACQ;AACJ;AACQ;AACb;AACQ;AACF;AACQ;AACQ;AAC/B;AACY;AACQ;AAC1B;AACQ;AACQ;AACpB;AACQ;AACQ;AACF;AACQ;AACpB;AACQ;AACQ;AACR;AACQ;AACX;AACQ;AACQ;AACF;AACQ;AACxB;AACQ;AACQ;AACF;AACQ;AAClB;AACc;AACd;AACQ;AACX;AACQ;AACQ;AACzB;AACE;AACD;AACY;AACL;AACQ;AACH;AACQ;AAClB;AACiB;AACC;AACX;AACQ;AACH;AACL;AACC;AACS;AACC;AACA;AACC;AACM;AACC;AACA;AACF;AACH;AACK;AACC;AACb;AACC;AACQ;AAClB;AACC;AACM;AACQ;AACK;AACR;AAC4B;AAClB;AACE;AACuB;AAC5B;AACI;AACM;AACG;AACE;AACH;AACO;AACH;AACT;AACX;AACsC;AACrB;AACF;AAChC;AACc;AACL;AACF;AACQ;AACK;AACR;AAC3B;AACQ;AACgC;AACC;AACa;AACC;AACM;AACD;AACC;AACI;AACvC;AACC;AACL;AAC/C;;;;;;;;;;;;AC3YU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;;;;ACDO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACZO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;ACVO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACbO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACfO,kJAAkJ,yDAAyD;AAClN;;;;;;;;;;;;;;;ACDO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;AC9BO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACbO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACfO;AACP;AACA;AACA;AACA;AACA,kFAAkF,IAAI;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACfO;AACP;AACA;AACA;AACA;AACA,qFAAqF,IAAI;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACfO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACfO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACPO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;AChBO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;AC9BO;AACP;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;ACJO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACVO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACfO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,SAAS;AAC7D;AACA;AACA,mDAAmD,mBAAmB;AACtE;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;AC3CO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kBAAkB;AAC9C,SAAS;AACT;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACZO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;AC5CA;AACO;AACP;;;;;;;;;;;;;;;ACFO;AACP,qCAAqC;AACrC;AACA;AACA;AACA,mFAAmF,eAAe;AAClG;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uCAAuC,iCAAiC;AACxE,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjBO;AACP;AACA,sBAAsB;AACtB;AACA;;;;;;;;;;;;ACJU;AACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDqC;AACP;AACU;AACX;AACU;AACF;AACP;AACU;AACZ;AACH;AACK;AACO;AACQ;AACX;AACM;AACE;AACH;AACA;AACX;AACS;AACU;AAC/C;;;;;;;;;;;;ACrBU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDiD;AACkB;AACX;AACI;AACI;AACgB;AACjB;AACO;AAClB;AACO;AACE;AACL;AACd;AACQ;AACmB;AACmB;AACpC;AACA;AACuB;AAChB;AACJ;AACL;AACgC;AACL;AAC7E;AACA;AACA;AACA;AACmC;AACL;AAC9B,eAAe,gEAAY;AAC3B,8BAA8B,gGAA2B,CAAC,gDAAK,EAAE,qDAAU;AACpE,uBAAuB,gFAAoB,CAAC,uFAAqB;AACjE,kBAAkB,sEAAe,CAAC,uFAAqB;AAC9D,6BAA6B,6FAA0B;AACvD,iCAAiC,sGAA8B;AACxD,kBAAkB,qEAAe;AACjC,oBAAoB,yEAAiB,CAAC,uFAAqB;AAC3D,sBAAsB,6EAAmB,CAAC,uFAAqB;AAC/D,qBAAqB,4EAAkB,CAAC,uFAAqB;AAC7D,wBAAwB,mFAAqB,CAAC,uFAAqB;AACnE,gBAAgB,iEAAa,CAAC,uFAAqB;AACnD,mBAAmB,wEAAgB;AACnC,oBAAoB,0EAAiB;AACrC,WAAW,wDAAQ;AACnB,eAAe,gEAAY,CAAC,uFAAqB;AACjD,wBAAwB,mFAAqB,CAAC,uFAAqB;AACnE,gBAAgB,kEAAa,CAAC,uFAAqB;AACnD,gBAAgB,kEAAa,CAAC,uFAAqB;AACnD,2BAA2B,yFAAwB,CAAC,uFAAqB;AACzE,mBAAmB,yEAAgB,CAAC,uFAAqB;AACzD,iBAAiB,qEAAc,CAAC,uFAAqB;AAC5D;;;;;;;;;;;;ACpDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;ACDU;AACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACD0C;AACC;AACS;AACpB;AACqB;AACxB;AACiB;AACN;AACC;AACD;AACC;AACG;AACC;AACX;AACC;AACa;AACV;AACC;AACM;AACN;AACC;AACK;AACJ;AACR;AACG;AACC;AACC;AACL;AACC;AACL;AACC;AACkB;AACL;AACC;AACJ;AACN;AACC;AACW;AACZ;AACC;AACE;AACA;AACS;AACC;AACR;AACD;AACC;AACQ;AACX;AACC;AACJ;AACR;AACQ;AACiB;AACC;AACnD;;;;;;;;;;;;ACvgCAAgC,OAAO;AACvC;AACA;AACA,oCAAoC,yBAAyB,SAAS,yBAAyB;;;;;;;;;;ACL/F;AACA;AACA;AACA,kCAAkC,yBAAyB,SAAS,yBAAyB;;;;;;;;;;ACH7F,uBAAuB,mBAAO,CAAC,wFAAuB;AACtD;AACA;AACA;AACA,qCAAqC,yBAAyB,SAAS,yBAAyB;;;;;;;;;;ACJhG;AACA;AACA;AACA,kCAAkC,yBAAyB,SAAS,yBAAyB;;;;;;;;;;ACH7F,oBAAoB,mBAAO,CAAC,kFAAoB;AAChD;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,+BAA+B,yBAAyB,SAAS,yBAAyB;;;;;;;;;;ACZ1F;AACA;AACA;AACA,mCAAmC,yBAAyB,SAAS,yBAAyB;;;;;;;;;;ACH9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,YAAY,kEAAkE;AACtF,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,yBAAyB,SAAS,yBAAyB;;;;;;;;;;AC3BnG;AACA;AACA;AACA,mCAAmC,yBAAyB,SAAS,yBAAyB;;;;;;;;;;ACH9F;AACA;AACA;AACA,qCAAqC,yBAAyB,SAAS,yBAAyB;;;;;;;;;;ACHhG,qBAAqB,mBAAO,CAAC,oFAAqB;AAClD,2BAA2B,mBAAO,CAAC,gGAA2B;AAC9D,iCAAiC,mBAAO,CAAC,4GAAiC;AAC1E,sBAAsB,mBAAO,CAAC,sFAAsB;AACpD;AACA;AACA;AACA,iCAAiC,yBAAyB,SAAS,yBAAyB;;;;;;;;;;ACP5F,wBAAwB,mBAAO,CAAC,0FAAwB;AACxD,sBAAsB,mBAAO,CAAC,sFAAsB;AACpD,iCAAiC,mBAAO,CAAC,4GAAiC;AAC1E,wBAAwB,mBAAO,CAAC,0FAAwB;AACxD;AACA;AACA;AACA,qCAAqC,yBAAyB,SAAS,yBAAyB;;;;;;;;;;ACPhG,cAAc,sGAAiC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yBAAyB,SAAS,yBAAyB;;;;;;;;;;ACXzF,cAAc,sGAAiC;AAC/C,kBAAkB,mBAAO,CAAC,8EAAkB;AAC5C;AACA;AACA;AACA;AACA,gCAAgC,yBAAyB,SAAS,yBAAyB;;;;;;;;;;ACN3F;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,GAAG,EAAE,yBAAyB,SAAS,yBAAyB;AAChE;AACA,0BAA0B,yBAAyB,SAAS,yBAAyB;;;;;;;;;;ACTrF,uBAAuB,mBAAO,CAAC,wFAAuB;AACtD;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,8CAA8C,yBAAyB,SAAS,yBAAyB;;;;;;;;;;;;;;;ACRzG;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACwC;AACW;AACnD,KAAK,+CAAU,EAAE,mDAAc,CAAC,iEAAe,MAAM,YAAY;AAClC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AACzD;AACA,2DAA2D,WAAW;AACtE;AACA;AACA,wDAAwD,WAAW,mCAAmC,KAAK;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACpCoD;AAC7C,sBAAsB,mBAAmB,IAAI;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF,cAAc,IAAI,eAAe;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qHAAqH,eAAe;AACpI;AACA,SAAS;AACT;AACA;AACA,iHAAiH,eAAe;AAChI;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iHAAiH,eAAe;AAChI;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uHAAuH,eAAe;AACtI;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,sBAAsB,6DAAa;AACnC,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ,gEAAgE,aAAa;AAChG;AACA,YAAY,aAAa;AACzB,YAAY,eAAe;AAC3B;AACA;AACA;AACA,kDAAkD,kBAAkB;AACpE;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,KAAK,cAAc,MAAM;AAC1D;AACA;AACA,mCAAmC,KAAK,cAAc,MAAM;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,sDAAsD,6DAA6D;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACoD;AACpD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChPA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACwC;AACC;AAC8E;AACvC;AACpB;AAC+C;AAC3G;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qBAAqB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,kBAAkB;AAClB,uCAAuC;AACvC;AACA;AACA;AACA;AACA,uCAAuC,mDAAK;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wDAAU;AAC3C;AACA;AACA;AACA;AACA,qBAAqB;AACrB,SAAS;AACT;AACA;AACA,2CAA2C,8BAA8B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB,IAAI;AACjD,gBAAgB,6CAA6C;AAC7D;AACA;AACA,cAAc,6DAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,iEAAe;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,6CAA6C;AAC5F;AACA;AACA,0BAA0B,YAAY;AACtC;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,8CAA8C;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6DAAe,kBAAkB,kDAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA,eAAe,gDAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAoB,+BAA+B,2CAA2C;AAC9G,yCAAyC,cAAc;AACvD;AACA;AACA,sBAAsB,yDAAiB;AACvC;AACA;AACA;AACA;AACA;AACA,0BAA0B,yDAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA,0BAA0B,iEAAyB;AACnD;AACA,sBAAsB,0DAAkB,GAAG,iBAAiB;AAC5D;AACA;AACA;AACA;AACA,kDAAkD,kBAAkB;AACpE,wCAAwC,EAAE,aAAa;AACvD;AACA;AACA;AACA;AACA;AACA,6DAA6D,kCAAkC;AAC/F,oCAAoC,EAAE,aAAa;AACnD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wBAAwB,GAAG,0BAA0B;AAC/E;AACA;AACA,0BAA0B,wBAAwB;AAClD;AACA,sBAAsB,mDAAW,0BAA0B,eAAe,6HAA6H,SAAS,4CAA4C;AAC5P,SAAS;AACT;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,0CAA0C,uCAAuC;AACjF;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB,MAAM,iDAAO,CAAC;AACtD;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mDAAW,yBAAyB;AAC1D;AACA,8BAA8B;AAC9B;AACA,kCAAkC;AAClC;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,iDAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,iDAAO;AAClD;AACA,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,iDAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,iDAAO;AAClD;AACA;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iDAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,8DAA8D;AACxE,UAAU,4DAA4D;AACtE,UAAU,kEAAkE;AAC5E,UAAU,kEAAkE;AAC5E,UAAU,oEAAoE;AAC9E,UAAU,6FAA6F;AACvG;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B,MAAM,GAAG,MAAM,GAAG,MAAM;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,KAAK;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,kBAAkB,mDAAW,IAAI,MAAM;AACvC;AACA;AACA,kBAAkB,mDAAW,IAAI,MAAM;AACvC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,kBAAkB,mDAAW,8CAA8C,OAAO;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,cAAc,mDAAW,qBAAqB,OAAO,SAAS,aAAa;AAC3E;AACO;AACP;AACA;AACA;AACA;AACA,cAAc,mDAAW,qBAAqB,OAAO,SAAS,aAAa;AAC3E;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,cAAc,kBAAkB,QAAQ;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mDAAW,8BAA8B;AACvD;AACO;AACP;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC53BA;AACyC;AAClC;AACP;AACO;AACP;AACA,iBAAiB,6CAA6C;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ,EAAE,IAAI;AACpC;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,gBAAgB,sDAAW,iBAAiB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,kBAAkB,UAAU,IAAI;AAChC;AACA;AACA;AACA;AACO;AACP,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,kBAAkB,UAAU,IAAI;AAChC,gBAAgB,0CAA0C;AAC1D;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7IA;AACA;AAC8C;AACX;AACG;AACS;AACN;AACI;AACmB;AACL;AACF;AACO;AACf;AACW;AACD;AACP;AACH;AACA;AACoB;AACW;AAChF;AACA;AACA;AACO,qBAAqB,gDAAc;AAC1C;AACA;AACA;AACA,eAAe,oBAAoB;AACnC,eAAe,2BAA2B;AAC1C,eAAe,2BAA2B;AAC1C,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,YAAY;AAC3B,eAAe,QAAQ;AACvB,eAAe,cAAc;AAC7B,eAAe,mBAAmB;AAClC,eAAe,SAAS;AACxB;AACA,kBAAkB,UAAU,8CAAY,8BAA8B,8CAAY,mCAAmC,8CAAY,qCAAqC,8CAAY,yCAAyC,IAAI;AAC/N;AACA,sBAAsB,mDAAkB,+DAA+D,6FAA6F,sBAAsB;AAC1N;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,yDAAuB;AACvE,sBAAsB,mDAAkB,wTAAwT,uCAAuC,EAAE;AACzY;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,+BAA+B,6DAAe;AAC9C,wBAAwB,sDAAQ;AAChC,8BAA8B,4DAAc;AAC5C,yBAAyB,uDAAS;AAClC,0BAA0B,wDAAU;AACpC,yBAAyB,uDAAS;AAClC,+BAA+B,6DAAe;AAC9C,0BAA0B,wDAAU;AACpC,8BAA8B,6DAAc;AAC5C,wBAAwB,uDAAQ;AAChC,2BAA2B,0DAAW;AACtC,2BAA2B,0DAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yBAAyB,YAAY;AACtD;AACA;AACA,eAAe,8DAAY,UAAU,yBAAyB;AAC9D;AACA;AACA;AACA;AACA,iCAAiC;AACjC,qBAAqB,mDAAkB;AACvC,kBAAkB,gDAAe;AACjC,4BAA4B,0DAAyB;AACrD,mCAAmC,iEAAgC;AACnE,2BAA2B,yDAAwB;AACnD,uBAAuB,qDAAoB;AAC3C,uBAAuB,qDAAoB;AAC3C,wBAAwB,sDAAqB;AAC7C,yBAAyB,uDAAsB;AAC/C,6BAA6B,2DAA0B;AACvD,6BAA6B,2DAA0B;AACvD,+BAA+B,6DAA4B;AAC3D,kCAAkC,gEAA+B;AACjE,gBAAgB,iDAAc;AAC9B,sBAAsB,uDAAoB;AAC1C,qBAAqB,6DAAW;AAChC,cAAc,sDAAI;AAClB,oBAAoB,4DAAU;AAC9B,eAAe,uDAAK;AACpB,yBAAyB,iEAAe;AACxC,gBAAgB,wDAAM;AACtB,eAAe,uDAAK;AACpB,qBAAqB,6DAAW;AAChC,gBAAgB,wDAAM;AACtB,oBAAoB,4DAAU;AAC9B,oBAAoB,6DAAU;AAC9B,cAAc,uDAAI;AAClB,iBAAiB,0DAAO;AACxB,qBAAqB,8DAAW;AAChC,iBAAiB,0DAAiB;AAClC;AACO;AACP;AACA;AACA;AACA,eAAe,oBAAoB;AACnC,eAAe,oBAAoB;AACnC,eAAe,oBAAoB;AACnC,eAAe,oBAAoB,mGAAmG,WAAW;AACjJ,eAAe,2BAA2B;AAC1C,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,YAAY;AAC3B,eAAe,QAAQ;AACvB,eAAe,cAAc;AAC7B,eAAe,mBAAmB;AAClC,eAAe,SAAS;AACxB;AACA,kBAAkB,UAAU,8CAAY,8BAA8B,8CAAY,uCAAuC,8CAAY,uGAAuG,IAAI;AAChP;AACA,sBAAsB,mDAAkB,mEAAmE,2GAA2G,8BAA8B;AACpP;AACA;AACA;AACA;AACA;AACA,sBAAsB,mDAAkB;AACxC;AACA;AACA,sBAAsB,mDAAkB,4EAA4E;AACpH;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,0BAA0B,mDAAkB;AAC5C;AACA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA,0BAA0B,mDAAkB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,0BAA0B,IAAI;AACxF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4CAAU;AAC3B;AACA;AACA;AACA;AACA,+CAA+C,MAAM,EAAE,aAAa;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mDAAkB,gFAAgF,MAAM;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA,sDAAsD,MAAM;AAC5D;AACA;AACA;AACA;AACA;AACA,sBAAsB,mDAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACqD;AAC4N;AACjR,iEAAe,MAAM,EAAC;AACtB;;;;;;;;;;;;;;;;AC1P8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mDAAW,yCAAyC,uBAAuB;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mDAAW,qDAAqD,uBAAuB;AAC7G;AACA,kBAAkB,mDAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnFO;AACA;AACP;AACA;AACA;AACO;AACA;AACP;;;;;;;;;;;;;;;;;ACP2D;AACA;AAC3D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,8CAAM;AACnB;AACA,YAAY,wDAAc;AAC1B,eAAe,oDAAU,CAAC,wDAAc;AACxC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,qDAAS;AACvB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qDAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qDAAS;AAC3B;AACA,sBAAsB,gEAAgE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wDAAc;AAC/B;AACA,sBAAsB,oDAAU;AAChC;AACA;AACA;AACA;AACA,sBAAsB,oDAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,oCAAoC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACnRwC;AACxC;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACO,2CAA2C;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA,iDAAiD,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,EAAE;AACpD;AACA,SAAS;AACT;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iDAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,qBAAqB,OAAO,UAAU,aAAa;AACnD;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA,6BAA6B,qBAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACxNA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AAC2C;AAC2B;AAC2B;AACjD;AAC4B;AAC5E;AACO,2CAA2C,yDAAW;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2EAAiB,aAAa,uEAAa;AAC5D,4CAA4C,0BAA0B;AACtE;AACA;AACA,qBAAqB,4EAAkB;AACvC;AACA;AACA,qBAAqB,4EAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mDAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,0BAA0B,IAAI,4CAA4C;AAChJ;AACA,uCAAuC,oEAAmB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gDAAgD;AAChE;AACA,gBAAgB,oDAAoD;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,0BAA0B,mDAAW;AACrC;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA,0DAA0D,qBAAqB,2BAA2B;AAC1G;AACA,gCAAgC;AAChC,mCAAmC,qBAAqB;AACxD;AACA;AACA;AACA,0DAA0D,qBAAqB,IAAI,sCAAsC;AACzH,mCAAmC,qBAAqB;AACxD;AACA;AACA;AACA;AACA,yBAAyB,kFAA2B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,+BAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8CAA8C;AAC9D;AACA,gBAAgB,oDAAoD;AACpE;AACA;AACA,gBAAgB,mEAAkB;AAClC;AACA,8BAA8B,mDAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,0BAA0B,mDAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA,0DAA0D,qBAAqB,2BAA2B;AAC1G;AACA,oCAAoC;AACpC,uCAAuC,6BAA6B;AACpE;AACA;AACA;AACA,0DAA0D,qBAAqB,IAAI,sCAAsC;AACzH,uCAAuC,6BAA6B;AACpE;AACA;AACA;AACA;AACA,6BAA6B,kFAA2B;AACxD;AACA;AACA;AACA,uCAAuC,6BAA6B;AACpE;AACA;AACA;AACA;AACA;AACA,mCAAmC,6BAA6B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,YAAY,4EAAkB;AAC9B,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mDAAW;AACzB,CAAC;AACD,2CAA2C,QAAQ;AACnD;AACA,YAAY,4EAAkB;AAC9B;AACA;AACA,YAAY,4EAAkB;AAC9B;AACA;AACA;AACA;AACA,CAAC;AACD,2CAA2C,QAAQ;AACnD;AACA,YAAY,2EAAiB;AAC7B;AACA;AACA,YAAY,uEAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAkB,mDAAW;AAC7B;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC/WA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACoC;AACM;AACoB;AACd;AACzC,8BAA8B,yDAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,6EAA6E,iBAAiB,8BAA8B,4BAA4B,IAAI,8BAA8B;AAC1L;AACA;AACA,yBAAyB;AACzB,aAAa;AACb;AACA;AACA,yBAAyB;AACzB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kDAAM;AAC7B;AACA;AACA;AACA;AACA,sBAAsB,yDAAiB;AACvC;AACA;AACA;AACA;AACA,2BAA2B,kDAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAA4D;AACnF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAA4D;AACnF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAA4D;AACnF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,yDAAyD,4CAA4C;AACrG;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,0DAA0D,4CAA4C;AACtG;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4CAAU,cAAc,4CAAU;AACvD;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA,yBAAyB,4CAAU;AACnC,+FAA+F,WAAW;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gHAAgH,MAAM;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,IAAI,gBAAgB,WAAW,cAAc,SAAS;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAkB,mDAAW;AAC7B;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACziBmF;AACpB;AACxD,mCAAmC,2FAA4B;AACtE;AACA;AACA;AACA;AACA;AACA,uBAAuB,kEAAkE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8DAA8D;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4EAAkB;AAC9B;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC7BA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACwH;AACrC;AACzC;AACkH;AACnF;AAClE,mCAAmC,2FAA4B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,yBAAyB,IAAI,uBAAuB,8DAA8D;AAChL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,yBAAyB,IAAI,4CAA4C;AACvI;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kDAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mEAAkB;AACpD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,yCAAyC,yCAAyC;AAClF;AACA;AACA;AACA,kDAAkD,0CAA0C;AAC5F;AACA;AACA;AACA,kDAAkD,0CAA0C;AAC5F;AACA,KAAK;AACL;AACA,sBAAsB,mDAAW;AACjC;AACA;AACA;AACA,sBAAsB,mDAAW;AACjC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,YAAY,6EAA4B;AACxC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,yDAAyD;AAC9E;AACA;AACA,qDAAqD,iCAAiC;AACtF;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,4BAA4B,4BAA4B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,sEAAqB;AAC5G;AACA,kCAAkC,+DAAuB;AACzD;AACA;AACA,kCAAkC,sEAA8B;AAChE;AACA;AACA;AACA;AACA;AACA,0BAA0B,qBAAqB;AAC/C,oBAAoB,6DAA6D;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oFAAY;AACxD;AACA;AACA;AACA;AACA;AACA,6BAA6B,yCAAyC;AACtE,iGAAiG;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,oCAAoC;AAC1G;AACA;AACA;AACA;AACA,4BAA4B,oEAAmB;AAC/C,kEAAkE,oFAAY;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,6EAA6E,iBAAiB,8BAA8B,4BAA4B,IAAI,8BAA8B;AAC1L;AACA;AACA,yBAAyB;AACzB,aAAa;AACb;AACA;AACA,yBAAyB;AACzB,aAAa;AACb;AACA;AACA;AACA,2BAA2B,kDAAM;AACjC;AACA;AACA;AACA;AACA,YAAY,2DAA2D;AACvE;AACA;AACA;AACA,gCAAgC,wDAAwD;AACxF;AACA,0BAA0B,mDAAW,qCAAqC,MAAM;AAChF;AACA,oBAAoB,4DAA4D;AAChF,uCAAuC,2BAA2B;AAClE;AACA,0BAA0B,mDAAW,4BAA4B,MAAM;AACvE;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA,8BAA8B,mDAAW,+CAA+C,MAAM;AAC9F;AACA;AACA,8BAA8B,mDAAW,0CAA0C,MAAM;AACzF;AACA;AACA;AACA;AACA;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,sCAAsC;AAC1E,oCAAoC,mCAAmC;AACvE;AACA,0CAA0C,mDAAW,oBAAoB,MAAM,eAAe,EAAE,QAAQ,cAAc;AACtH;AACA;AACA,0CAA0C,mDAAW,oBAAoB,MAAM,eAAe,EAAE,UAAU,cAAc;AACxH;AACA;AACA,0CAA0C,mDAAW,oBAAoB,MAAM,eAAe,EAAE,mBAAmB,cAAc;AACjI;AACA;AACA,0CAA0C,mDAAW,oBAAoB,MAAM,eAAe,EAAE,wBAAwB,cAAc;AACtI;AACA,qCAAqC,mCAAmC;AACxE,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,2BAA2B,iEAAiE;AAC5F;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mCAAmC,qBAAqB,IAAI;AAC5D;AACA,WAAW,yEAAwB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClfkE;AAC3D,4CAA4C,2EAAoB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kEAAkE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8DAA8D;AACrF;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC7BA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AAC8D;AACvD;AACP;AACA;AACA;AACA;AACA,gEAAgE;AAChE,+DAA+D;AAC/D;AACA,0DAA0D;AAC1D,yDAAyD;AACzD,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,wFAAwF;AACxF,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sBAAsB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yDAAiB;AACrC;AACA,yBAAyB,yDAAiB;AAC1C;AACA;AACA;AACA,yBAAyB,mDAAW;AACpC;AACA;AACA;AACA,gCAAgC,mDAAW;AAC3C;AACA;AACA;AACA;AACA,mCAAmC,mDAAW;AAC9C;AACA;;;;;;;;;;;;;;;;;ACnMO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACrBO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACZoG;AAC7F;AACP,kBAAkB;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACO;AACP;AACA;AACO,mCAAmC,mBAAmB;AAC7D,kBAAkB;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,2BAA2B,8EAA8E;AACzG,aAAa;AACb;AACA;AACA;AACA;AACO;AACP;AACA;AACA,sBAAsB,+DAAuB;AAC7C;AACA;AACA,sBAAsB,sEAA8B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,sBAAsB,mDAAW,+DAA+D,aAAa,UAAU;AACvH;AACA;AACA,sBAAsB,mDAAW,UAAU,mBAAmB;AAC9D;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxHA;AAC0C;AAC1C;AACA;AACA;AACO,mBAAmB,mDAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,yBAAyB,mDAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;;;;;;;;;;;;;;;AC1DA;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACNA;AACiD;AACP;AACJ;AACoB;AACH;AACD;AACH;AAC5C,oBAAoB,sDAAW;AACtC;AACA;AACA,kCAAkC,+DAAgC;AAClE,gCAAgC,2DAA4B;AAC5D,0BAA0B,+CAAgB;AAC1C;AACA;AACA,uBAAuB,+DAAc;AACrC,qBAAqB,2DAAY;AACjC,eAAe,+CAAM;AACrB;;;;;;;;;;;;;;;;ACnBA;AACiD;AAC1C,qBAAqB,sDAAW;AACvC;AACA;AACA;AACA;AACA,oDAAoD,0CAA0C;AAC9F;AACA;AACA;;;;;;;;;;;;;;;;;ACVA;AACiD;AACV;AAChC,6BAA6B,sDAAW;AAC/C;AACA,0DAA0D,kEAAgC,GAAG,kBAAkB;AAC/G;AACA;AACA;;;;;;;;;;;;;;;;;ACRA;AACiD;AACV;AAChC,2BAA2B,sDAAW;AAC7C;AACA,wDAAwD,kEAAgC,GAAG,kBAAkB;AAC7G;AACA;AACA;;;;;;;;;;;;;;;;;;;ACRA;AAC8C;AACC;AACA;AACxC,sBAAsB,sDAAW;AACxC;AACA;AACA;AACA;AACA,+CAA+C,kBAAkB;AACjE;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA,mBAAmB;AACnB,YAAY,2DAAgB;AAC5B,+BAA+B;AAC/B;AACA,kEAAkE,mBAAmB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACO,0BAA0B,uDAAU;AAC3C;AACA;AACA;;;;;;;;;;;;;;;;;;;ACnCA;AACiD;AACC;AACA;AAC3C,yBAAyB,sDAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,+CAA+C,YAAY;AAC3D;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gDAAgD,YAAY;AAC5D;AACA;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA,mBAAmB;AACnB,YAAY,2DAAgB;AAC5B,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kDAAkD,YAAY;AAC9D;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACO,6BAA6B,uDAAU;AAC9C;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACzDA;AACiD;AACC;AACP;AACoB;AACX;AACH;AACoB;AACe;AAC7C;AAChC,mBAAmB,sDAAW;AACrC;AACA;AACA,gCAAgC,0EAA4B;AAC5D,wBAAwB,gDAAY;AACpC,8BAA8B,uDAAwB;AACtD,2BAA2B,yDAAkB;AAC7C;AACA;AACA,oBAAoB,0EAAY;AAChC,wBAAwB,8EAAgB;AACxC,kBAAkB,uDAAU;AAC5B,sBAAsB,2DAAc;AACpC,eAAe,yDAAO;AACtB;;;;;;;;;;;;;;;;;ACxBA;AACoD;AACA;AAC7C,mBAAmB,sDAAW;AACrC;AACA;AACA,+BAA+B,yDAA0B;AACzD;AACA;AACA;AACA,uBAAuB,yDAA0B;AACjD,CAAC,oBAAoB;AACrB;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACoD;AACyB;AACmB;AACnB;AACK;AACc;AACN;AACb;AACC;AACvE,0BAA0B,sDAAW;AAC5C;AACA,QAAQ,mEAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,yCAAyC,oEAAmB;AAC5D;AACA;AACA;AACA,mBAAmB,iGAA6B;AAChD;AACA,eAAe,+EAAoB;AACnC;AACA;AACA;AACA,mBAAmB,iGAA6B;AAChD;AACA,eAAe,+EAAoB;AACnC;AACA;AACA;AACA;AACA;AACA,eAAe,+EAAoB;AACnC;AACA;AACA;;;;;;;;;;;;;;;;;;;AC1CA;AACoD;AACC;AACA;AAC9C,uBAAuB,sDAAW;AACzC;AACA;AACA;AACA;AACA,6CAA6C,SAAS;AACtD;AACA;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,4CAA4C,SAAS,YAAY,UAAU;AAC3E;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS,YAAY,UAAU;AAC5E;AACA;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA,6BAA6B;AAC7B,YAAY,2DAAgB;AAC5B,yCAAyC;AACzC;AACA,mDAAmD,SAAS;AAC5D;AACA;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS,YAAY,UAAU;AAC9E;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACO,2BAA2B,uDAAU;AAC5C;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACzDA;AACuD;AACC;AACc;AACzB;AACL;AACW;AACK;AACjD,mBAAmB,sDAAW;AACrC;AACA;AACA,yBAAyB,6CAAc;AACvC;AACA;AACA,gBAAgB,mBAAmB;AACnC,6CAA6C,SAAS;AACtD,qBAAqB,SAAS;AAC9B;AACA;AACA,uBAAuB,qDAAqD;AAC5E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,4CAA4C,SAAS,QAAQ,MAAM;AACnE;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS,QAAQ,MAAM;AACpE;AACA;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA,6BAA6B;AAC7B,YAAY,2DAAgB;AAC5B,yCAAyC;AACzC;AACA,mDAAmD,SAAS;AAC5D;AACA;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS,QAAQ,MAAM;AACpE;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qEAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA,2BAA2B,iCAAiC;AAC5D,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gDAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qEAAe;AAC9B;AACA;AACA,6CAA6C,SAAS,QAAQ,MAAM;AACpE;AACA;AACA,uBAAuB,qDAAqD;AAC5E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qEAAe;AAC9B;AACA;AACO,uBAAuB,uDAAU;AACxC;AACA;AACA,aAAa,6CAAK;AAClB,oBAAoB,oDAAY;AAChC;;;;;;;;;;;;;;;;;;;ACjKA;AACuD;AACC;AACA;AACjD,oBAAoB,sDAAW;AACtC,gDAAgD;AAChD,YAAY,2DAAgB;AAC5B,4DAA4D;AAC5D;AACA,4CAA4C,SAAS,QAAQ,MAAM,SAAS,OAAO;AACnF;AACA;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA,oCAAoC;AACpC,YAAY,2DAAgB;AAC5B,gDAAgD;AAChD;AACA,mDAAmD,SAAS,QAAQ,MAAM;AAC1E;AACA;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACO,2BAA2B,uDAAU;AAC5C;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC7BA;AACoD;AACC;AACc;AACrB;AACW;AACd;AACO;AAC3C,sBAAsB,sDAAW;AACxC;AACA;AACA,wBAAwB,gDAAY;AACpC,4BAA4B,mDAAoB;AAChD;AACA,oBAAoB;AACpB,YAAY,2DAAgB;AAC5B,iCAAiC;AACjC;AACA;AACA;AACA;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,4CAA4C,SAAS;AACrD;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS;AACtD;AACA;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uBAAuB,qDAAqD;AAC5E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qEAAe;AAC9B;AACA;AACA,eAAe,gDAAI;AACnB,mBAAmB,oDAAQ;AAC3B,mBAAmB,mDAAQ;AAC3B,uBAAuB,uDAAY;AACnC;;;;;;;;;;;;;;;;;;;;AChFA;AACoD;AACC;AACX;AACkB;AACT;AAC5C,0BAA0B,sDAAW;AAC5C;AACA;AACA;AACA;AACA,mDAAmD,cAAc;AACjE;AACA;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kDAAkD,cAAc,gBAAgB,QAAQ;AACxF;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,cAAc,gBAAgB,QAAQ;AACzF;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,YAAY,2DAAgB;AAC5B,4DAA4D;AAC5D;AACA,yDAAyD,cAAc,gBAAgB,QAAQ,SAAS,4DAAoB,IAAI,8BAA8B,uDAAuD;AACrN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gDAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,mCAAmC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kEAAmB;AACjC;AACA;AACA,SAAS;AACT;AACA;AACgC;AAChC;;;;;;;;;;;;;;;;;;;AC1HA;AACoD;AACQ;AACP;AAC9C,oBAAoB,sDAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,cAAc;AACjE;AACA;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kDAAkD,cAAc,SAAS,OAAO;AAChF;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA,kCAAkC;AAClC,YAAY,2DAAgB;AAC5B,8CAA8C;AAC9C;AACA,yDAAyD,cAAc;AACvE;AACA;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,cAAc,SAAS,OAAO;AACnF;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gDAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,mCAAmC;AAC9F,4CAA4C,sBAAsB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,mCAAmC,uDAAU;AACpD;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACpHA;AACoD;AACC;AACA;AACH;AACV;AACmB;AACN;AAC9C,2BAA2B,sDAAW;AAC7C;AACA;AACA,yBAAyB,6CAAc;AACvC,+BAA+B,0DAA0B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kDAAkD,cAAc;AAChE;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mDAAmD,cAAc;AACjE;AACA;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA,mBAAmB;AACnB,YAAY,2DAAgB;AAC5B,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qDAAqD,cAAc;AACnE;AACA,uBAAuB,qDAAqD;AAC5E,SAAS;AACT;AACA;AACO,+BAA+B,uDAAU;AAChD;AACA;AACA,qBAAqB,6CAAK;AAC1B,oCAAoC,4DAAoB;AACxD,2BAA2B,0DAAW;AACtC;;;;;;;;;;;;;;;;;ACrEA;AACiD;AACG;AACH;AAC1C,mBAAmB,sDAAW;AACrC;AACA;AACA,+BAA+B,yDAA0B;AACzD;AACA;AACA,mBAAmB,yDAAW;AAC9B;;;;;;;;;;;;;;;;ACXA;AACiD;AAC1C,0BAA0B,sDAAW;AAC5C;AACA,wDAAwD,gDAAgD;AACxG;AACA;AACA;;;;;;;;;;;;;;;;ACPA;AAC8C;AACvC,0BAA0B,sDAAW;AAC5C;AACA,mDAAmD,gDAAgD;AACnG;AACA;AACA;;;;;;;;;;;;;;;;ACPA;AAC8C;AACvC,yBAAyB,sDAAW;AAC3C;AACA;AACA;AACA;AACA,kDAAkD,kBAAkB;AACpE;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACVA;AAC8C;AACC;AACX;AACqB;AACrB;AACW;AACxC,oBAAoB,sDAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,kEAAgC,GAAG,kBAAkB;AAChG;AACA;AACA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD;AACA,mBAAmB;AACnB,YAAY,2DAAgB;AAC5B,+BAA+B;AAC/B;AACA,oEAAoE,mBAAmB;AACvF;AACA;AACA;AACA;AACA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA,0CAA0C,OAAO,aAAa,oCAAoC;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD;AACA,uBAAuB,iDAAiD;AACxE,SAAS;AACT;AACA;AACA;AACA;AACA,kCAAkC,gDAAgD,IAAI;AACtF;AACA;AACA;AACA;AACA,kBAAkB,gDAAK;AACvB;AACA;AACA,0BAA0B,iEAAyB;AACnD,8DAA8D,IAAI,6BAA6B,SAAS;AACxG,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACO,8BAA8B,uDAAU;AAC/C;AACA;AACA;;;;;;;;;;;;;;;;;AC3FA;AACiD;AACN;AAC0C;AAC9E,yBAAyB,sDAAW;AAC3C;AACA;AACA,wBAAwB,gDAAY;AACpC;AACA;AACA,kBAAkB,gDAAI;AACtB,gCAAgC,8DAAkB;AAClD,qCAAqC,mEAAuB;AAC5D;;;;;;;;;;;;;;;;;;;ACbA;AACoD;AACC;AACA;AAC9C,0BAA0B,sDAAW;AAC5C,oCAAoC;AACpC,YAAY,2DAAgB;AAC5B,gDAAgD;AAChD;AACA,4DAA4D,gBAAgB,+CAA+C,mBAAmB;AAC9I;AACA;AACO,2CAA2C,uDAAU;AAC5D;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACfA;AACoD;AACC;AACD;AAC2B;AAC1B;AAC9C,mBAAmB,sDAAW;AACrC;AACA;AACA,+BAA+B,yDAA0B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,kBAAkB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE;AACA,mBAAmB;AACnB,YAAY,2DAAgB;AAC5B,+BAA+B;AAC/B;AACA,kFAAkF,mBAAmB;AACrG;AACA;AACA;AACA;AACA;AACA,sDAAsD,gBAAgB;AACtE;AACA,0CAA0C;AAC1C,YAAY,2DAAgB;AAC5B,sDAAsD;AACtD;AACA,4DAA4D,gBAAgB;AAC5E;AACA;AACA,SAAS;AACT;AACA;AACO,iCAAiC,uDAAU;AAClD;AACO,sCAAsC,uDAAU;AACvD;AACA;AACA;AACA,mBAAmB,yDAAW;AAC9B,oCAAoC,0EAA4B;AAChE;;;;;;;;;;;;;;;;;AC7DA;AAC8C;AACV;AAC7B,qBAAqB,sDAAW;AACvC;AACA;AACA;AACA;AACA,uDAAuD,kEAAgC,GAAG,kBAAkB;AAC5G;AACA;AACA;AACA;AACA;AACA,kDAAkD,kEAAgC,GAAG,kBAAkB;AACvG;AACA;AACA;AACA;AACA;AACA,0DAA0D,kBAAkB;AAC5E;AACA;AACA;;;;;;;;;;;;;;;;;;ACvBA;AAC8C;AACL;AAClC,qBAAqB,sDAAW;AACvC;AACA;AACA;AACA;AACA;AACA,2CAA2C,MAAM;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,MAAM;AACpD;AACA;AACA;AACA;AACA;AACO,yBAAyB,iDAAI;AACpC;AACA;AACA;;;;;;;;;;;;;;;;AChCA;AAC8C;AACvC,0BAA0B,sDAAW;AAC5C;AACA;AACA;AACA;AACA;AACA,mDAAmD,kBAAkB;AACrE;AACA;AACA;;;;;;;;;;;;;;;;;ACXA;AACiD;AACV;AAChC,oBAAoB,sDAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS,SAAS,kEAAgC,GAAG,kBAAkB;AACpH;AACA;AACA;;;;;;;;;;;;;;;;;ACrBA;AACiD;AACT;AACJ;AAC7B,sBAAsB,sDAAW;AACxC;AACA;AACA,yBAAyB,6CAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,kBAAkB;AACjE;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS,cAAc,kBAAkB;AACtF;AACA;AACA,gBAAgB,6CAAK;AACrB;;;;;;;;;;;;;;;;;;;;;AC5DoD;AACV;AACiB;AACpB;AAChC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,gDAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,gDAAQ;AAC9C;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oEAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAc;AACjC;AACA;AACA,aAAa;AACb;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACO;AACP;AACA;AACA,kBAAkB,mDAAW;AAC7B;AACA;AACA,4BAA4B,oEAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,2BAA2B;AAC3B,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,wBAAwB,oEAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qBAAqB;AACrB,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACxViG;AAC/C;AAC3C;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,oFAAoF;AACpF;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP,yDAAyD,gEAAc;AACvE;AACA;AACA,0BAA0B,YAAY;AACtC,yDAAyD,iBAAiB,GAAG,mBAAmB,MAAM,qBAAqB,IAAI,mBAAmB;AAClJ,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,eAAe,YAAY;AAC3B;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kDAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,eAAe,kDAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,iDAAiD,eAAe,eAAe;AAC/E,qBAAqB,SAAS,qBAAqB;AACnD;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB,EAAE,eAAe;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,WAAW,4EAA0B;AACrC;AACO;AACP;AACA,WAAW,4EAA0B;AACrC;AACO;AACP,qBAAqB,sDAAQ;AAC7B,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,IAAI,GAAG;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,IAAI,GAAG,KAAK;AACxG;AACA;AACA,oIAAoI,OAAO;AAC3I;AACA;AACA;;;;;;;;;;;;;;;AC7JO,0BAA0B;AACjC;;;;;;UCDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;ACN4C;AACpB;AACH;;AAErB;AACA,MAAMgT,IAAI,GAAGC,QAAQ,CAACC,cAAc,CAAC,2BAA2B,CAAC;AACjE,IAAIF,IAAI,EAAE;EACND,0DAAM,CAAC5T,oDAAA,CAACD,4CAAG,MAAE,CAAC,EAAE8T,IAAI,CAAC;AACzB,C","sources":["webpack://medical-consultation/./node_modules/automation-events/build/es5/bundle.js","webpack://medical-consultation/./src/App.tsx","webpack://medical-consultation/./src/components/AudioRecorder.tsx","webpack://medical-consultation/./src/components/auth/LoginForm.tsx","webpack://medical-consultation/./src/components/consultation/ConsultationFlow.tsx","webpack://medical-consultation/./src/components/consultation/PatientForm.tsx","webpack://medical-consultation/./src/components/security/ProtectedRoute.tsx","webpack://medical-consultation/./src/config/env.ts","webpack://medical-consultation/./src/config/firebase.ts","webpack://medical-consultation/./src/config/specialties/cardiology.ts","webpack://medical-consultation/./src/config/specialties/index.ts","webpack://medical-consultation/./src/db/database.ts","webpack://medical-consultation/./src/services/ai/AIOrchestrator.ts","webpack://medical-consultation/./src/services/ai/TokenOptimizer.ts","webpack://medical-consultation/./src/services/audioService.ts","webpack://medical-consultation/./src/services/auditService.ts","webpack://medical-consultation/./src/services/openai.ts","webpack://medical-consultation/./src/stores/useAuthStore.ts","webpack://medical-consultation/./src/stores/usePatientStore.ts","webpack://medical-consultation/./node_modules/broker-factory/build/es2019/guards/message-port.js","webpack://medical-consultation/./node_modules/broker-factory/build/es2019/helpers/extend-broker-implementation.js","webpack://medical-consultation/./node_modules/broker-factory/build/es2019/helpers/port-map.js","webpack://medical-consultation/./node_modules/broker-factory/build/es2019/interfaces/broker-actions.js","webpack://medical-consultation/./node_modules/broker-factory/build/es2019/interfaces/broker-definition.js","webpack://medical-consultation/./node_modules/broker-factory/build/es2019/interfaces/default-broker-definition.js","webpack://medical-consultation/./node_modules/broker-factory/build/es2019/interfaces/index.js","webpack://medical-consultation/./node_modules/broker-factory/build/es2019/interfaces/worker-event.js","webpack://medical-consultation/./node_modules/broker-factory/build/es2019/module.js","webpack://medical-consultation/./node_modules/broker-factory/build/es2019/types/broker-implementation.js","webpack://medical-consultation/./node_modules/broker-factory/build/es2019/types/index.js","webpack://medical-consultation/./node_modules/compilerr/build/es5/bundle.js","webpack://medical-consultation/./node_modules/dashify/index.js","webpack://medical-consultation/./node_modules/extendable-media-recorder-wav-encoder-broker/build/es2019/interfaces/extendable-media-recorder-wav-encoder-broker-definition.js","webpack://medical-consultation/./node_modules/extendable-media-recorder-wav-encoder-broker/build/es2019/interfaces/index.js","webpack://medical-consultation/./node_modules/extendable-media-recorder-wav-encoder-broker/build/es2019/module.js","webpack://medical-consultation/./node_modules/extendable-media-recorder-wav-encoder-broker/build/es2019/types/extendable-media-recorder-wav-encoder-broker-loader.js","webpack://medical-consultation/./node_modules/extendable-media-recorder-wav-encoder-broker/build/es2019/types/extendable-media-recorder-wav-encoder-broker-wrapper.js","webpack://medical-consultation/./node_modules/extendable-media-recorder-wav-encoder-broker/build/es2019/types/index.js","webpack://medical-consultation/./node_modules/extendable-media-recorder-wav-encoder-broker/build/es2019/types/typed-array.js","webpack://medical-consultation/./node_modules/extendable-media-recorder-wav-encoder/build/es2019/module.js","webpack://medical-consultation/./node_modules/extendable-media-recorder-wav-encoder/build/es2019/worker/worker.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/factories/blob-event-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/factories/decode-web-m-chunk.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/factories/event-target-constructor.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/factories/event-target-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/factories/invalid-modification-error.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/factories/invalid-state-error.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/factories/is-supported-promise.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/factories/media-recorder-constructor.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/factories/native-blob-event-constructor.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/factories/native-media-recorder-constructor.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/factories/native-media-recorder.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/factories/not-supported-error.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/factories/read-element-content.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/factories/read-element-type.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/factories/read-variable-size-integer.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/factories/web-audio-media-recorder.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/factories/webm-pcm-media-recorder.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/factories/window.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/functions/read-variable-size-integer-length.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/functions/wrap-event-listener.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/interfaces/audio-nodes-and-encoder-id.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/interfaces/blob-event-init.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/interfaces/blob-event.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/interfaces/event-target.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/interfaces/index.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/interfaces/media-recorder-constructor.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/interfaces/media-recorder-event-map.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/interfaces/media-recorder-options.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/interfaces/media-recorder.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/module.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/blob-event-constructor.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/blob-event-factory-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/blob-event-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/blob-event-handler.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/decode-web-m-chunk-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/decode-web-m-chunk-function.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/element-type.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/error-event-handler.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/event-handler.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/event-target-constructor-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/event-target-constructor.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/event-target-factory-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/event-target-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/index.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/invalid-modification-error-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/invalid-state-error-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/is-supported-promise-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/media-recorder-constructor-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/native-blob-event-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/native-event-target.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/native-media-recorder-constructor-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/native-media-recorder-factory-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/native-media-recorder-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/not-supported-error-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/promised-data-view-element-type-encoder-id-and-port.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/read-element-content-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/read-element-content-function.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/read-element-type-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/read-element-type-function.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/read-variable-size-integer-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/read-variable-size-integer-function.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/read-variable-size-integer-length-function.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/recording-state.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/web-audio-media-recorder-factory-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/web-audio-media-recorder-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/webm-pcm-media-recorder-factory-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/webm-pcm-media-recorder-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/window-factory.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/window.js","webpack://medical-consultation/./node_modules/extendable-media-recorder/build/es2019/types/wrap-event-listener-function.js","webpack://medical-consultation/./node_modules/fast-unique-numbers/build/es5/bundle.js","webpack://medical-consultation/./node_modules/indefinite-article/indefinite-article.js","webpack://medical-consultation/./node_modules/lucide-react/dist/esm/createLucideIcon.js","webpack://medical-consultation/./node_modules/lucide-react/dist/esm/defaultAttributes.js","webpack://medical-consultation/./node_modules/lucide-react/dist/esm/icons/heart.js","webpack://medical-consultation/./node_modules/lucide-react/dist/esm/icons/loader.js","webpack://medical-consultation/./node_modules/lucide-react/dist/esm/icons/lock.js","webpack://medical-consultation/./node_modules/lucide-react/dist/esm/icons/mail.js","webpack://medical-consultation/./node_modules/lucide-react/dist/esm/icons/mic.js","webpack://medical-consultation/./node_modules/lucide-react/dist/esm/icons/square.js","webpack://medical-consultation/./node_modules/media-encoder-host-broker/build/es2019/interfaces/index.js","webpack://medical-consultation/./node_modules/media-encoder-host-broker/build/es2019/interfaces/media-encoder-host-broker-definition.js","webpack://medical-consultation/./node_modules/media-encoder-host-broker/build/es2019/module.js","webpack://medical-consultation/./node_modules/media-encoder-host-broker/build/es2019/types/index.js","webpack://medical-consultation/./node_modules/media-encoder-host-broker/build/es2019/types/media-encoder-host-broker-loader.js","webpack://medical-consultation/./node_modules/media-encoder-host-broker/build/es2019/types/media-encoder-host-broker-wrapper.js","webpack://medical-consultation/./node_modules/media-encoder-host/build/es2019/module.js","webpack://medical-consultation/./node_modules/media-encoder-host/build/es2019/worker/worker.js","webpack://medical-consultation/./node_modules/multi-buffer-data-view/build/es5/bundle.js","webpack://medical-consultation/./node_modules/react-media-recorder/index.js","webpack://medical-consultation/./node_modules/react-media-recorder/lib/index.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/build/es2019/factories/add-recorder-audio-worklet-module.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/build/es2019/factories/listener.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/build/es2019/factories/post-message-factory.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/build/es2019/factories/recorder-audio-worklet-node-factory.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/build/es2019/functions/validate-state.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/build/es2019/interfaces/index.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/build/es2019/interfaces/native-recorder-audio-worklet-node.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/build/es2019/interfaces/recorder-audio-worklet-node.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/build/es2019/module.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/build/es2019/types/any-recorder-audio-worklet-node-options.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/build/es2019/types/index.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/build/es2019/types/native-recorder-audio-worklet-node-options.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/build/es2019/types/recorder-audio-worklet-node-options.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/build/es2019/types/state.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/build/es2019/worklet/worklet.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/fast-unique-numbers/build/es5/bundle.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/helpers/create-message-handler.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/helpers/error-renderers.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/helpers/extend-worker-implementation.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/helpers/is-supporting-transferables.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/interfaces/broker-event.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/interfaces/broker-message.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/interfaces/default-worker-definition.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/interfaces/error-notification.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/interfaces/error-response.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/interfaces/error.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/interfaces/index.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/interfaces/notification.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/interfaces/receiver.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/interfaces/request.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/interfaces/value-array.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/interfaces/value-map.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/interfaces/worker-definition.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/interfaces/worker-error-message.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/interfaces/worker-result-message.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/module.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/types/destroy-worker-function.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/types/index.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/types/message-receiver-with-params.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/types/message-receiver-without-params.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/types/message-receiver.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/types/message.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/types/typed-array.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/types/value-map.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/types/value.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/types/worker-definition.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/types/worker-implementation.js","webpack://medical-consultation/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/types/worker-message.js","webpack://medical-consultation/./node_modules/rxjs-interop/dist/esm/patch.js","webpack://medical-consultation/./node_modules/rxjs-interop/dist/esm/symbols.js","webpack://medical-consultation/./node_modules/rxjs-interop/dist/esm/to-observer.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/constants.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/abort-error.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/add-active-input-connection-to-audio-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/add-connection-to-audio-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/add-passive-input-connection-to-audio-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/delete-active-input-connection-to-audio-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/get-active-audio-worklet-node-inputs.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-tail-time.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/get-backup-offline-audio-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/get-or-create-backup-offline-audio-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/is-supported-promise.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/minimal-offline-audio-context-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-delay-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-gain-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/render-automation.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/set-active-audio-worklet-node-inputs.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/set-audio-node-tail-time.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-copy-channel-methods-subarray-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-close-method-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-decode-audio-data-method-type-error-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-options-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-node-connect-method-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-no-outputs-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-post-message-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/test-channel-merger-node-channel-count-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/test-constant-source-node-accurate-scheduling-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-buffer-reassignability-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-channel-count-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/test-is-secure-context-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/test-stereo-panner-node-default-value-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/window.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/globals.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/guards/audio-buffer-source-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/guards/biquad-filter-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/guards/constant-source-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/guards/delay-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/guards/gain-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/guards/oscillator-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/guards/stereo-panner-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/add-active-input-connection-to-audio-param.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/add-passive-input-connection-to-audio-param.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-active-audio-node-input-connections.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection-to-audio-param.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-param.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/get-first-sample.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-audio-worklet-node-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-channel-splitter-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-periodic-wave-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/set-value-at-time-until-possible.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-worklet-node-options-clonability.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/test-dom-exception-constructor-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/test-transferables-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/analyser-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/analyser-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node-renderer.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-context-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-destination-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-listener.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-renderer.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-descriptor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-renderer.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node-event-map.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-event-map.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/automation.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/base-audio-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/channel-merger-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/channel-splitter-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/common-audio-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/common-offline-audio-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node-renderer.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/convolver-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/convolver-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/delay-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/delay-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/event-target.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/gain-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/gain-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/index.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-destination-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-audio-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context-event-map.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-offline-audio-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-node-faker.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-worklet-node-faker.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/native-constant-source-node-faker.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/native-convolver-node-faker.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/native-iir-filter-node-faker.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/native-panner-node-faker.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/native-stereo-panner-node-faker.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/native-wave-shaper-node-faker.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-completion-event.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node-renderer.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/panner-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/panner-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-constraints.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/read-only-map.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/interfaces/worklet-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/module.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/read-only-map.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/abort-error-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/active-audio-worklet-node-inputs-store.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/active-input-connection.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/add-active-input-connection-to-audio-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/add-active-input-connection-to-audio-node-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/add-connection-to-audio-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/add-connection-to-audio-node-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/add-passive-input-connection-to-audio-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/add-passive-input-connection-to-audio-node-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/any-audio-buffer.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/any-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-store.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-context-latency-category.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-context-state.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-node-connections-store.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-node-connections.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-node-output-connection.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-node-renderer.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-node-store.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-node-tail-time-store.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-param-audio-node-store.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-param-connections-store.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-param-connections.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-param-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-param-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-param-map.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-param-output-connection.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-param-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-param-store.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/backup-offline-audio-context-store.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-type.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/cache-test-result-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/cache-test-result-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/channel-count-mode.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/channel-interpretation.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/connect-native-audio-node-to-native-audio-node-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/context-store.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/cycle-counters.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/data-clone-error-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/decode-error-callback.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/decode-success-callback.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/delete-active-input-connection-to-audio-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/delete-active-input-connection-to-audio-node-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/detect-cycles-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/detect-cycles-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/disconnect-native-audio-node-from-native-audio-node-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/distance-model-type.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/encoding-error-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/error-event-handler.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/evaluate-audio-worklet-global-scope-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/evaluate-source-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/evaluate-source-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/event-handler.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/event-target-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/event-target-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/fetch-source-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/fetch-source-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-active-audio-worklet-node-inputs-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-active-audio-worklet-node-inputs-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-connections-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-tail-time-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-tail-time-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-connections-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-backup-offline-audio-context-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-backup-offline-audio-context-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-event-listeners-of-audio-node-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-first-sample-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-native-audio-node-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-native-audio-param-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-native-context-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-native-context-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-or-create-backup-offline-audio-context-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-or-create-backup-offline-audio-context-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/get-value-for-key-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/index-size-error-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/index.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/insert-element-in-set-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/internal-state-event-listener.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/invalid-access-error-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/invalid-state-error-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-active-audio-node-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-dc-curve-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-native-context-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-native-context-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-part-of-a-cycle-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-passive-audio-node-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-secure-context-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/is-supported-promise-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/monitor-connections-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/monitor-connections-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-listener.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-param-map.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-param.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-options.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-delay-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-delay-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-event-target.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-gain-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-gain-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-panner-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/not-supported-error-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/offline-audio-context-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/oscillator-type.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/output-connection.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/over-sample-type.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/overwrite-accessors-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/panning-model-type.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/passive-audio-node-input-connection.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/passive-audio-param-input-connection.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/pick-element-from-set-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/render-automation-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/render-automation-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/sanitize-audio-worklet-node-options-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/sanitize-channel-splitter-options-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/sanitize-periodic-wave-options-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/set-active-audio-worklet-node-inputs-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/set-active-audio-worklet-node-inputs-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/set-audio-node-tail-time-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/set-audio-node-tail-time-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/set-value-at-time-until-possible-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/start-rendering-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/start-rendering-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-constructor-support-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-copy-channel-methods-subarray-support-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-close-method-support-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-decode-audio-data-method-type-error-support-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-options-support-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/test-audio-node-connect-method-support-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/test-audio-worklet-node-options-clonability-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/test-audio-worklet-processor-no-outputs-support-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/test-audio-worklet-processor-post-message-support-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/test-channel-merger-node-channel-count-support-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/test-constant-source-node-accurate-scheduling-support-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/test-convolver-node-buffer-reassignability-support-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/test-convolver-node-channel-count-support-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/test-is-secure-context-support-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/test-offline-audio-context-current-time-support-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/test-stereo-panner-node-default-value-support-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/unknown-error-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-node-store.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-nodes.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/window-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/window.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-start-method-offset-clamping-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-factory.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-function.js","webpack://medical-consultation/./node_modules/standardized-audio-context/build/es2019/types/wrap-event-listener-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/animation-frame.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/attribute.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/geolocation.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/intersections.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/map-subscribable-thing.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/media-devices.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/media-query-match.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/metrics.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/midi-inputs.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/midi-outputs.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/mutations.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/on.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/online.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/permission-state.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/prepend-subscribable-thing.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/reports.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/resizes.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/unhandled-rejection.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/video-frame.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/wake-lock.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/window.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/factories/wrap-subscribe-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/functions/emit-not-supported-error.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/html-video-element.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/index.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/midi-access.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/midi-connection-event.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/midi-input-event-map.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/midi-input.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/midi-message-event.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/midi-output-event-map.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/midi-output.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/midi-port.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/report-body.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/report.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/reporting-observer-options.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/reporting-observer.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/resize-observer-entry.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/resize-observer-options.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/resize-observer-size.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/resize-observer.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/video-frame-metadata.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/wake-lock-sentinel-event-map.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/wake-lock-sentinel.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/interfaces/wake-lock.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/module.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/animation-frame-factory.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/animation-frame-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/emit-not-supported-error-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/event-handler.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/event-target-with-property-handler.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/event-type.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/flexible-subscribe-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/index.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/intersections-factory.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/intersections-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/media-devices-factory.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/media-devices-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/media-query-match-factory.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/media-query-match-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/metrics-factory.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/metrics-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/midi-connection-event-handler.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/midi-inputs-factory.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/midi-inputs-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/midi-message-event-handler.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/midi-outputs-factory.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/midi-outputs-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/midi-port-connection-state.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/midi-port-device-state.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/midi-port-type.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/mutations-factory.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/mutations-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/observer-parameters.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/on-factory.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/on-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/online-factory.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/online-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/optional-unsubscribe-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/permission-state-factory.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/permission-state-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/release-event-handler.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/reports-factory.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/reports-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/resize-observer-box-options.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/resizes-factory.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/resizes-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/subscribable-thing.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/subscribe-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/unhandled-rejection-factory.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/unhandled-rejection-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/unsubscribe-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/video-frame-factory.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/video-frame-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/video-frame-request-callback.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/wake-lock-factory.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/wake-lock-function.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/wake-lock-type.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/window-factory.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/window.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/wrap-subscribe-function-factory.js","webpack://medical-consultation/./node_modules/subscribable-things/build/es2019/types/wrap-subscribe-function-function.js","webpack://medical-consultation/external window \"React\"","webpack://medical-consultation/external window [\"wp\",\"element\"]","webpack://medical-consultation/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://medical-consultation/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://medical-consultation/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://medical-consultation/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://medical-consultation/./node_modules/@babel/runtime/helpers/createClass.js","webpack://medical-consultation/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://medical-consultation/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://medical-consultation/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://medical-consultation/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://medical-consultation/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://medical-consultation/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://medical-consultation/./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack://medical-consultation/./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack://medical-consultation/./node_modules/@babel/runtime/helpers/typeof.js","webpack://medical-consultation/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://medical-consultation/./node_modules/openai/_shims/MultipartBody.mjs","webpack://medical-consultation/./node_modules/openai/_shims/index.mjs","webpack://medical-consultation/./node_modules/openai/_shims/registry.mjs","webpack://medical-consultation/./node_modules/openai/_shims/web-runtime.mjs","webpack://medical-consultation/./node_modules/openai/_vendor/partial-json-parser/parser.mjs","webpack://medical-consultation/./node_modules/openai/core.mjs","webpack://medical-consultation/./node_modules/openai/error.mjs","webpack://medical-consultation/./node_modules/openai/index.mjs","webpack://medical-consultation/./node_modules/openai/internal/decoders/line.mjs","webpack://medical-consultation/./node_modules/openai/internal/qs/formats.mjs","webpack://medical-consultation/./node_modules/openai/internal/qs/stringify.mjs","webpack://medical-consultation/./node_modules/openai/internal/qs/utils.mjs","webpack://medical-consultation/./node_modules/openai/lib/AbstractChatCompletionRunner.mjs","webpack://medical-consultation/./node_modules/openai/lib/AssistantStream.mjs","webpack://medical-consultation/./node_modules/openai/lib/ChatCompletionRunner.mjs","webpack://medical-consultation/./node_modules/openai/lib/ChatCompletionStream.mjs","webpack://medical-consultation/./node_modules/openai/lib/ChatCompletionStreamingRunner.mjs","webpack://medical-consultation/./node_modules/openai/lib/EventStream.mjs","webpack://medical-consultation/./node_modules/openai/lib/RunnableFunction.mjs","webpack://medical-consultation/./node_modules/openai/lib/Util.mjs","webpack://medical-consultation/./node_modules/openai/lib/chatCompletionUtils.mjs","webpack://medical-consultation/./node_modules/openai/lib/parser.mjs","webpack://medical-consultation/./node_modules/openai/pagination.mjs","webpack://medical-consultation/./node_modules/openai/resource.mjs","webpack://medical-consultation/./node_modules/openai/resources/audio/audio.mjs","webpack://medical-consultation/./node_modules/openai/resources/audio/speech.mjs","webpack://medical-consultation/./node_modules/openai/resources/audio/transcriptions.mjs","webpack://medical-consultation/./node_modules/openai/resources/audio/translations.mjs","webpack://medical-consultation/./node_modules/openai/resources/batches.mjs","webpack://medical-consultation/./node_modules/openai/resources/beta/assistants.mjs","webpack://medical-consultation/./node_modules/openai/resources/beta/beta.mjs","webpack://medical-consultation/./node_modules/openai/resources/beta/chat/chat.mjs","webpack://medical-consultation/./node_modules/openai/resources/beta/chat/completions.mjs","webpack://medical-consultation/./node_modules/openai/resources/beta/threads/messages.mjs","webpack://medical-consultation/./node_modules/openai/resources/beta/threads/runs/runs.mjs","webpack://medical-consultation/./node_modules/openai/resources/beta/threads/runs/steps.mjs","webpack://medical-consultation/./node_modules/openai/resources/beta/threads/threads.mjs","webpack://medical-consultation/./node_modules/openai/resources/beta/vector-stores/file-batches.mjs","webpack://medical-consultation/./node_modules/openai/resources/beta/vector-stores/files.mjs","webpack://medical-consultation/./node_modules/openai/resources/beta/vector-stores/vector-stores.mjs","webpack://medical-consultation/./node_modules/openai/resources/chat/chat.mjs","webpack://medical-consultation/./node_modules/openai/resources/chat/completions.mjs","webpack://medical-consultation/./node_modules/openai/resources/completions.mjs","webpack://medical-consultation/./node_modules/openai/resources/embeddings.mjs","webpack://medical-consultation/./node_modules/openai/resources/files.mjs","webpack://medical-consultation/./node_modules/openai/resources/fine-tuning/fine-tuning.mjs","webpack://medical-consultation/./node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs","webpack://medical-consultation/./node_modules/openai/resources/fine-tuning/jobs/jobs.mjs","webpack://medical-consultation/./node_modules/openai/resources/images.mjs","webpack://medical-consultation/./node_modules/openai/resources/models.mjs","webpack://medical-consultation/./node_modules/openai/resources/moderations.mjs","webpack://medical-consultation/./node_modules/openai/resources/uploads/parts.mjs","webpack://medical-consultation/./node_modules/openai/resources/uploads/uploads.mjs","webpack://medical-consultation/./node_modules/openai/streaming.mjs","webpack://medical-consultation/./node_modules/openai/uploads.mjs","webpack://medical-consultation/./node_modules/openai/version.mjs","webpack://medical-consultation/webpack/bootstrap","webpack://medical-consultation/webpack/runtime/compat get default export","webpack://medical-consultation/webpack/runtime/define property getters","webpack://medical-consultation/webpack/runtime/hasOwnProperty shorthand","webpack://medical-consultation/webpack/runtime/make namespace object","webpack://medical-consultation/./src/index.js"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.automationEvents = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n})(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {\n      return {\n        startTime: startTime,\n        type: 'setValue',\n        value: value\n      };\n    };\n\n    var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {\n      return {\n        duration: duration,\n        startTime: startTime,\n        type: 'setValueCurve',\n        values: values\n      };\n    };\n\n    var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {\n      var startTime = _ref.startTime,\n        target = _ref.target,\n        timeConstant = _ref.timeConstant;\n      return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n    };\n\n    var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'exponentialRampToValue';\n    };\n\n    var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'linearRampToValue';\n    };\n\n    var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {\n      return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n    };\n\n    var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValue';\n    };\n\n    var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValueCurve';\n    };\n\n    var _getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {\n      var automationEvent = automationEvents[index];\n      return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, _getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n    };\n\n    var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {\n      return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, _getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];\n    };\n\n    var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelAndHold';\n    };\n\n    var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelScheduledValues';\n    };\n\n    var getEventTime = function getEventTime(automationEvent) {\n      if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n      }\n      if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n      }\n      return automationEvent.startTime;\n    };\n\n    var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n        value = _ref.value;\n      if (valueAtStartTime === value) {\n        return value;\n      }\n      if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {\n        return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));\n      }\n      return 0;\n    };\n\n    var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n        value = _ref.value;\n      return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);\n    };\n\n    var interpolateValue = function interpolateValue(values, theoreticIndex) {\n      var lowerIndex = Math.floor(theoreticIndex);\n      var upperIndex = Math.ceil(theoreticIndex);\n      if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n      }\n      return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n    };\n\n    var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {\n      var duration = _ref.duration,\n        startTime = _ref.startTime,\n        values = _ref.values;\n      var theoreticIndex = (time - startTime) / duration * (values.length - 1);\n      return interpolateValue(values, theoreticIndex);\n    };\n\n    var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setTarget';\n    };\n\n    var AutomationEventList = /*#__PURE__*/function () {\n      function AutomationEventList(defaultValue) {\n        _classCallCheck(this, AutomationEventList);\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n      }\n      return _createClass(AutomationEventList, [{\n        key: Symbol.iterator,\n        value: function value() {\n          return this._automationEvents[Symbol.iterator]();\n        }\n      }, {\n        key: \"add\",\n        value: function add(automationEvent) {\n          var eventTime = getEventTime(automationEvent);\n          if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {\n                return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;\n              }\n              return getEventTime(currentAutomationEvent) >= eventTime;\n            });\n            var removedAutomationEvent = this._automationEvents[index];\n            if (index !== -1) {\n              this._automationEvents = this._automationEvents.slice(0, index);\n            }\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n              var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n              if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                  throw new Error('The internal list is malformed.');\n                }\n                var startTime = lastAutomationEvent === undefined ? removedAutomationEvent.insertTime : isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);\n                var startValue = lastAutomationEvent === undefined ? this._defaultValue : isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;\n                var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n                this._automationEvents.push(truncatedAutomationEvent);\n              }\n              if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n              }\n              if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                var duration = eventTime - lastAutomationEvent.startTime;\n                var ratio = (lastAutomationEvent.values.length - 1) / lastAutomationEvent.duration;\n                var length = Math.max(2, 1 + Math.ceil(duration * ratio));\n                var fraction = duration / (length - 1) * ratio;\n                var values = lastAutomationEvent.values.slice(0, length);\n                if (fraction < 1) {\n                  for (var i = 1; i < length; i += 1) {\n                    var factor = fraction * i % 1;\n                    values[i] = lastAutomationEvent.values[i - 1] * (1 - factor) + lastAutomationEvent.values[i] * factor;\n                  }\n                }\n                this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(values, lastAutomationEvent.startTime, duration);\n              }\n            }\n          } else {\n            var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              return getEventTime(currentAutomationEvent) > eventTime;\n            });\n            var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];\n            if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n              return false;\n            }\n            var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;\n            if (_index === -1) {\n              this._automationEvents.push(persistentAutomationEvent);\n            } else {\n              if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {\n                return false;\n              }\n              this._automationEvents.splice(_index, 0, persistentAutomationEvent);\n            }\n          }\n          return true;\n        }\n      }, {\n        key: \"flush\",\n        value: function flush(time) {\n          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) > time;\n          });\n          if (index > 1) {\n            var remainingAutomationEvents = this._automationEvents.slice(index - 1);\n            var firstRemainingAutomationEvent = remainingAutomationEvents[0];\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n              remainingAutomationEvents.unshift(createSetValueAutomationEvent(_getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n            this._automationEvents = remainingAutomationEvents;\n          }\n        }\n      }, {\n        key: \"getValue\",\n        value: function getValue(time) {\n          if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n          }\n          var indexOfNextEvent = this._automationEvents.findIndex(function (automationEvent) {\n            return getEventTime(automationEvent) > time;\n          });\n          var nextAutomationEvent = this._automationEvents[indexOfNextEvent];\n          var indexOfCurrentEvent = (indexOfNextEvent === -1 ? this._automationEvents.length : indexOfNextEvent) - 1;\n          var currentAutomationEvent = this._automationEvents[indexOfCurrentEvent];\n          if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, _getValueOfAutomationEventAtIndexAtTime(this._automationEvents, indexOfCurrentEvent - 1, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n          }\n          if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n          if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n              return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n          }\n          if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n          if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n              _getEndTimeAndValueOf2 = _slicedToArray(_getEndTimeAndValueOf, 2),\n              startTime = _getEndTimeAndValueOf2[0],\n              value = _getEndTimeAndValueOf2[1];\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n          }\n          if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n              _getEndTimeAndValueOf4 = _slicedToArray(_getEndTimeAndValueOf3, 2),\n              _startTime = _getEndTimeAndValueOf4[0],\n              _value = _getEndTimeAndValueOf4[1];\n            return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);\n          }\n          return this._defaultValue;\n        }\n      }]);\n    }();\n\n    var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelAndHold'\n      };\n    };\n\n    var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelScheduledValues'\n      };\n    };\n\n    var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {\n      return {\n        startTime: startTime,\n        target: target,\n        timeConstant: timeConstant,\n        type: 'setTarget'\n      };\n    };\n\n    exports.AutomationEventList = AutomationEventList;\n    exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;\n    exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;\n    exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;\n    exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;\n    exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;\n    exports.createSetValueAutomationEvent = createSetValueAutomationEvent;\n    exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;\n\n}));\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport ConsultationFlow from './components/consultation/ConsultationFlow';\nimport LoginForm from './components/auth/LoginForm';\nimport ProtectedRoute from './components/security/ProtectedRoute';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/login\" element={<LoginForm />} />\n        <Route\n          path=\"/\"\n          element={\n            <ProtectedRoute>\n              <ConsultationFlow />\n            </ProtectedRoute>\n          }\n        />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","import React, { useState } from 'react';\nimport { useReactMediaRecorder } from 'react-media-recorder';\nimport { Mic, Square, Loader } from 'lucide-react';\nimport { processAudioRecording } from '../services/audioService';\nimport { usePatientStore } from '../stores/usePatientStore';\n\nexport default function AudioRecorder() {\n  const [isProcessing, setIsProcessing] = useState(false);\n  const currentPatient = usePatientStore(state => state.currentPatient);\n\n  const {\n    status,\n    startRecording,\n    stopRecording,\n    mediaBlobUrl\n  } = useReactMediaRecorder({\n    audio: true,\n    blobPropertyBag: { type: \"audio/wav\" },\n    onStop: async (blobUrl, blob) => {\n      if (!currentPatient?.id) {\n        console.error('No patient selected');\n        return;\n      }\n\n      setIsProcessing(true);\n      try {\n        await processAudioRecording(blob, currentPatient.id);\n      } catch (error) {\n        console.error('Error processing audio:', error);\n      } finally {\n        setIsProcessing(false);\n      }\n    }\n  });\n\n  if (!currentPatient) {\n    return null;\n  }\n\n  return (\n    <div className=\"flex items-center gap-4 p-4 border-t\">\n      {status !== 'recording' && !isProcessing && (\n        <button\n          onClick={startRecording}\n          className=\"flex items-center gap-2 bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-colors\"\n        >\n          <Mic size={20} />\n          Grabar Audio\n        </button>\n      )}\n      \n      {status === 'recording' && (\n        <button\n          onClick={stopRecording}\n          className=\"flex items-center gap-2 bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 transition-colors\"\n        >\n          <Square size={20} />\n          Detener\n        </button>\n      )}\n\n      {isProcessing && (\n        <div className=\"flex items-center gap-2 text-gray-600\">\n          <Loader className=\"animate-spin\" size={20} />\n          <span>Procesando audio...</span>\n        </div>\n      )}\n\n      {mediaBlobUrl && !isProcessing && (\n        <div className=\"flex items-center gap-2\">\n          <audio src={mediaBlobUrl} controls className=\"h-8\" />\n        </div>\n      )}\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { useAuthStore } from '../../stores/useAuthStore';\nimport { Lock, Mail } from 'lucide-react';\n\nexport default function LoginForm() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { signIn, loading, error } = useAuthStore();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    await signIn(email, password);\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Iniciar Sesión\n          </h2>\n        </div>\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div>\n              <label htmlFor=\"email\" className=\"sr-only\">Email</label>\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center\">\n                  <Mail className=\"h-5 w-5 text-gray-400\" />\n                </div>\n                <input\n                  id=\"email\"\n                  type=\"email\"\n                  required\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 pl-10 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n                  placeholder=\"Email\"\n                />\n              </div>\n            </div>\n            <div>\n              <label htmlFor=\"password\" className=\"sr-only\">Contraseña</label>\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center\">\n                  <Lock className=\"h-5 w-5 text-gray-400\" />\n                </div>\n                <input\n                  id=\"password\"\n                  type=\"password\"\n                  required\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 pl-10 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n                  placeholder=\"Contraseña\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"text-red-500 text-sm text-center\">\n              {error}\n            </div>\n          )}\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\n            >\n              {loading ? 'Iniciando sesión...' : 'Iniciar Sesión'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport AudioRecorder from '../AudioRecorder';\nimport PatientForm from './PatientForm';\nimport { usePatientStore } from '../../stores/usePatientStore';\n\nexport default function ConsultationFlow() {\n  const { currentPatient } = usePatientStore();\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8\">\n      <div className=\"max-w-4xl mx-auto px-4\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-8\">\n          Consulta Médica\n        </h1>\n\n        {!currentPatient ? (\n          <PatientForm />\n        ) : (\n          <div className=\"bg-white p-6 rounded-lg shadow-md\">\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">\n              Grabación de Síntomas\n            </h2>\n            <p className=\"text-gray-600 mb-4\">\n              Por favor, describa sus síntomas y motivo de consulta. \n              Tiene hasta 5 minutos para grabar su mensaje.\n            </p>\n            <AudioRecorder />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { usePatientStore } from '../../stores/usePatientStore';\n\ninterface PatientFormData {\n  name: string;\n  birthDate: string;\n  identification: string;\n  gender: string;\n  phone: string;\n  email: string;\n  address: string;\n  hasHistory: boolean;\n  firstVisit: boolean;\n  hasAllergies: boolean;\n  allergies: string;\n  onMedication: boolean;\n  currentMedication: string;\n  familyHistory: string;\n  chronicDiseases: string;\n  previousSurgeries: string;\n  habits: string;\n}\n\nexport default function PatientForm() {\n  const { register, handleSubmit, watch } = useForm<PatientFormData>();\n  const { savePatient, setCurrentPatient } = usePatientStore();\n\n  const hasAllergies = watch('hasAllergies');\n  const onMedication = watch('onMedication');\n\n  const onSubmit = async (data: PatientFormData) => {\n    const patientData = {\n      name: data.name,\n      age: calculateAge(data.birthDate),\n      gender: data.gender,\n      symptoms: [],\n      medication: data.onMedication ? data.currentMedication : '',\n      allergies: data.hasAllergies ? data.allergies.split(',').map(a => a.trim()) : [],\n      medicalHistory: formatMedicalHistory(data)\n    };\n\n    const id = await savePatient(patientData);\n    setCurrentPatient({ ...patientData, id });\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6 bg-white p-6 rounded-lg shadow-md\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700\">Nombre completo</label>\n          <input\n            type=\"text\"\n            {...register('name')}\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700\">Fecha de nacimiento</label>\n          <input\n            type=\"date\"\n            {...register('birthDate')}\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700\">DNI/Identificación</label>\n          <input\n            type=\"text\"\n            {...register('identification')}\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700\">Género</label>\n          <select\n            {...register('gender')}\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n          >\n            <option value=\"\">Seleccionar...</option>\n            <option value=\"masculino\">Masculino</option>\n            <option value=\"femenino\">Femenino</option>\n            <option value=\"otro\">Otro</option>\n          </select>\n        </div>\n\n        {/* Contact Information */}\n        <div className=\"col-span-2\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Información de contacto</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Teléfono</label>\n              <input\n                type=\"tel\"\n                {...register('phone')}\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Email</label>\n              <input\n                type=\"email\"\n                {...register('email')}\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Medical History */}\n        <div className=\"col-span-2\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Historia Clínica</h3>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  {...register('hasAllergies')}\n                  className=\"rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                />\n                <span className=\"ml-2\">¿Tiene alergias conocidas?</span>\n              </label>\n              {hasAllergies && (\n                <input\n                  type=\"text\"\n                  {...register('allergies')}\n                  placeholder=\"Describa sus alergias\"\n                  className=\"mt-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                />\n              )}\n            </div>\n\n            <div>\n              <label className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  {...register('onMedication')}\n                  className=\"rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                />\n                <span className=\"ml-2\">¿Toma medicación actualmente?</span>\n              </label>\n              {onMedication && (\n                <input\n                  type=\"text\"\n                  {...register('currentMedication')}\n                  placeholder=\"Describa su medicación actual\"\n                  className=\"mt-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                />\n              )}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Antecedentes familiares</label>\n              <textarea\n                {...register('familyHistory')}\n                rows={3}\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Enfermedades crónicas</label>\n              <textarea\n                {...register('chronicDiseases')}\n                rows={3}\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex justify-end\">\n        <button\n          type=\"submit\"\n          className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n        >\n          Continuar\n        </button>\n      </div>\n    </form>\n  );\n}\n\nfunction calculateAge(birthDate: string): number {\n  const today = new Date();\n  const birth = new Date(birthDate);\n  let age = today.getFullYear() - birth.getFullYear();\n  const monthDiff = today.getMonth() - birth.getMonth();\n  \n  if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {\n    age--;\n  }\n  \n  return age;\n}\n\nfunction formatMedicalHistory(data: PatientFormData): string {\n  return `\nAntecedentes familiares: ${data.familyHistory}\nEnfermedades crónicas: ${data.chronicDiseases}\nCirugías previas: ${data.previousSurgeries}\nHábitos: ${data.habits}\n  `.trim();\n}","import { Navigate } from 'react-router-dom';\nimport { useAuthStore } from '../../stores/useAuthStore';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  requiredRole?: 'admin' | 'doctor' | 'patient';\n}\n\nexport default function ProtectedRoute({ children, requiredRole }: ProtectedRouteProps) {\n  const { user, loading } = useAuthStore();\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  // Check user role if required\n  if (requiredRole && user.customClaims?.role !== requiredRole) {\n    return <Navigate to=\"/unauthorized\" replace />;\n  }\n\n  return <>{children}</>;\n}","export const config = {\n  openai: {\n    apiKey: import.meta.env.VITE_OPENAI_API_KEY,\n  },\n  anthropic: {\n    apiKey: import.meta.env.VITE_ANTHROPIC_API_KEY,\n  },\n  emailjs: {\n    serviceId: import.meta.env.VITE_EMAILJS_SERVICE_ID,\n    templateId: import.meta.env.VITE_EMAILJS_TEMPLATE_ID,\n    publicKey: import.meta.env.VITE_EMAILJS_PUBLIC_KEY,\n  },\n};\n\nexport function validateEnvVariables() {\n  const missingVars = [];\n  \n  if (!import.meta.env.VITE_OPENAI_API_KEY) {\n    missingVars.push('OpenAI API Key');\n  }\n  if (!import.meta.env.VITE_EMAILJS_SERVICE_ID) {\n    missingVars.push('EmailJS Service ID');\n  }\n  if (!import.meta.env.VITE_EMAILJS_TEMPLATE_ID) {\n    missingVars.push('EmailJS Template ID');\n  }\n  if (!import.meta.env.VITE_EMAILJS_PUBLIC_KEY) {\n    missingVars.push('EmailJS Public Key');\n  }\n\n  if (missingVars.length > 0) {\n    throw new Error(\n      `Missing required environment variables:\\n${missingVars.join('\\n')}\\n\\n` +\n      'Please add these to your .env file.'\n    );\n  }\n}\n\nvalidateEnvVariables();","import { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: import.meta.env.VITE_FIREBASE_API_KEY,\n  authDomain: import.meta.env.VITE_FIREBASE_AUTH_DOMAIN,\n  projectId: import.meta.env.VITE_FIREBASE_PROJECT_ID,\n  storageBucket: import.meta.env.VITE_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: import.meta.env.VITE_FIREBASE_MESSAGING_SENDER_ID,\n  appId: import.meta.env.VITE_FIREBASE_APP_ID\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\nexport const storage = getStorage(app);","import { SpecialtyConfig } from '../../types/specialty';\nimport { Heart } from 'lucide-react';\n\nexport const cardiologyConfig: SpecialtyConfig = {\n  name: 'Cardiología',\n  icon: Heart.name,\n  promptTemplate: `Eres un cardiólogo experto analizando síntomas cardiovasculares.\n    Por favor, analiza los siguientes datos del paciente y proporciona:\n    1. Evaluación de síntomas cardíacos\n    2. Posibles condiciones cardiovasculares\n    3. Nivel de urgencia\n    4. Recomendaciones preliminares`,\n  requiredFields: ['bloodPressure', 'heartRate', 'ecg'],\n  specialtyFields: {\n    bloodPressure: {\n      type: 'text',\n      label: 'Presión Arterial',\n      unit: 'mmHg'\n    },\n    heartRate: {\n      type: 'number',\n      label: 'Frecuencia Cardíaca',\n      unit: 'bpm'\n    },\n    ecg: {\n      type: 'select',\n      label: 'ECG',\n      options: ['Normal', 'Arritmia', 'Fibrilación auricular', 'Otro']\n    },\n    chestPain: {\n      type: 'checkbox',\n      label: 'Dolor en el pecho'\n    }\n  }\n};","import { SpecialtyConfig } from '../../types/specialty';\nimport { cardiologyConfig } from './cardiology';\nimport { neurologyConfig } from './neurology';\nimport { pediatricsConfig } from './pediatrics';\nimport { generalConfig } from './general';\n\nexport const specialtyConfigs: Record<string, SpecialtyConfig> = {\n  general: generalConfig,\n  cardiology: cardiologyConfig,\n  neurology: neurologyConfig,\n  pediatrics: pediatricsConfig,\n  // Add other specialties as needed\n};\n\nexport function getSpecialtyConfig(specialty: string): SpecialtyConfig {\n  return specialtyConfigs[specialty] || specialtyConfigs.general;\n}","import Dexie, { Table } from 'dexie';\nimport { PatientRecord, AudioRecord } from '../types/database';\n\nexport class MedicalDatabase extends Dexie {\n  patients!: Table<PatientRecord>;\n  audioRecords!: Table<AudioRecord>;\n\n  constructor() {\n    super('MedicalDB');\n    this.version(1).stores({\n      patients: '++id, name, createdAt',\n      audioRecords: '++id, patientId, audioBlob, transcription, createdAt'\n    });\n  }\n}\n\nexport const db = new MedicalDatabase();","import OpenAI from 'openai';\nimport Anthropic from 'anthropic';\nimport { logAuditEvent } from '../auditService';\nimport { config } from '../../config/env';\nimport { tokenOptimizer } from './TokenOptimizer';\n\ninterface AIModel {\n  priority: number;\n  healthCheck: () => Promise<boolean>;\n  process: (prompt: string) => Promise<string>;\n}\n\nexport class AIOrchestrator {\n  private models: Record<string, AIModel>;\n  private errorThreshold = 3;\n  private errorCounts = new Map<string, number>();\n  private openai: OpenAI;\n  private anthropic: Anthropic;\n\n  constructor() {\n    this.openai = new OpenAI({\n      apiKey: config.openai.apiKey,\n      dangerouslyAllowBrowser: true\n    });\n\n    this.anthropic = new Anthropic({\n      apiKey: config.anthropic?.apiKey\n    });\n\n    this.models = {\n      ollama: {\n        priority: 1,\n        healthCheck: async () => {\n          try {\n            const response = await fetch('http://localhost:11434/api/health');\n            return response.ok;\n          } catch {\n            return false;\n          }\n        },\n        process: this.processWithOllama.bind(this)\n      },\n      gpt4: {\n        priority: 2,\n        healthCheck: async () => {\n          return !!config.openai.apiKey;\n        },\n        process: this.processWithGPT4.bind(this)\n      },\n      claude: {\n        priority: 3,\n        healthCheck: async () => {\n          return !!config.anthropic?.apiKey;\n        },\n        process: this.processWithClaude.bind(this)\n      }\n    };\n  }\n\n  async processRequest(data: any, type: string): Promise<string> {\n    const currentModel = await this.selectBestModel();\n    if (!currentModel) {\n      throw new Error('No AI models available');\n    }\n\n    try {\n      // Check cache first\n      const optimizedPrompt = await tokenOptimizer.optimizePrompt(data, currentModel as any);\n      const cachedResponse = tokenOptimizer.getCachedResponse(optimizedPrompt);\n      \n      if (cachedResponse) {\n        return cachedResponse;\n      }\n\n      const result = await this.models[currentModel].process(optimizedPrompt);\n      \n      // Cache the response\n      tokenOptimizer.cacheResponse(optimizedPrompt, result, currentModel);\n      \n      // Reset error count on success\n      this.errorCounts.set(currentModel, 0);\n      \n      await logAuditEvent('system', 'ai_request', {\n        model: currentModel,\n        type,\n        tokenUsage: tokenOptimizer.getTokenUsage(),\n        timestamp: new Date()\n      });\n\n      return result;\n    } catch (error) {\n      console.error(`Error with ${currentModel}:`, error);\n      \n      const errorCount = (this.errorCounts.get(currentModel) || 0) + 1;\n      this.errorCounts.set(currentModel, errorCount);\n\n      if (errorCount >= this.errorThreshold) {\n        const nextModel = await this.selectBestModel(currentModel);\n        if (nextModel) {\n          return this.processRequest(data, type);\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  // ... rest of the AIOrchestrator class implementation remains the same\n}\n\nexport const aiOrchestrator = new AIOrchestrator();","import { SpecialtyConfig } from '../../types/specialty';\nimport { specialtyConfigs } from '../../config/specialties';\n\ninterface TokenLimits {\n  ollama: number;\n  gpt4: number;\n  claude: number;\n}\n\ninterface TokenCosts {\n  gpt4: number;\n  claude: number;\n  ollama: number;\n}\n\nexport class TokenOptimizer {\n  private maxTokens: TokenLimits = {\n    ollama: 4096,\n    gpt4: 8192,\n    claude: 200000\n  };\n\n  private costPerToken: TokenCosts = {\n    gpt4: 0.00003,\n    claude: 0.00001,\n    ollama: 0\n  };\n\n  private tokenCounters = new Map<string, number>();\n  private responseCache = new Map<string, {\n    response: string;\n    timestamp: number;\n    tokens: number;\n    model: string;\n  }>();\n\n  async optimizePrompt(data: any, modelType: keyof TokenLimits): Promise<string> {\n    const relevantData = this.extractRelevantData(data);\n    const compressedPrompt = this.compressPrompt(relevantData);\n    \n    if (this.estimateTokens(compressedPrompt) > this.maxTokens[modelType]) {\n      return this.truncatePrompt(compressedPrompt, modelType);\n    }\n\n    return compressedPrompt;\n  }\n\n  private extractRelevantData(data: any) {\n    const specialty = data.specialty || 'general';\n    const config = specialtyConfigs[specialty];\n    \n    return {\n      critical: this.extractCriticalInfo(data, config),\n      symptoms: this.summarizeSymptoms(data.symptoms || []),\n      vitals: this.filterRelevantVitals(data.vitals || {}, specialty),\n      history: this.summarizeHistory(data.medicalHistory || '')\n    };\n  }\n\n  private extractCriticalInfo(data: any, config: SpecialtyConfig) {\n    const criticalFields = config.requiredFields || [];\n    return criticalFields.reduce((acc: Record<string, any>, field: string) => {\n      if (data[field]) {\n        acc[field] = data[field];\n      }\n      return acc;\n    }, {});\n  }\n\n  private summarizeSymptoms(symptoms: string[]): string[] {\n    const uniqueSymptoms = new Set(symptoms.map(s => s.toLowerCase()));\n    return Array.from(uniqueSymptoms)\n      .sort((a, b) => this.getSymptomPriority(b) - this.getSymptomPriority(a))\n      .slice(0, 5);\n  }\n\n  private getSymptomPriority(symptom: string): number {\n    const urgentKeywords = ['dolor', 'dificultad', 'sangrado', 'fiebre'];\n    return urgentKeywords.some(keyword => symptom.includes(keyword)) ? 2 : 1;\n  }\n\n  private filterRelevantVitals(vitals: Record<string, any>, specialty: string) {\n    const config = specialtyConfigs[specialty];\n    const relevantFields = config.specialtyFields || {};\n    \n    return Object.entries(vitals)\n      .filter(([key]) => key in relevantFields)\n      .reduce((acc: Record<string, any>, [key, value]) => {\n        acc[key] = value;\n        return acc;\n      }, {});\n  }\n\n  private summarizeHistory(history: string): string {\n    const sentences = history.split(/[.!?]+/).filter(Boolean);\n    return sentences.slice(0, 3).join('. ') + (sentences.length > 3 ? '...' : '');\n  }\n\n  private compressPrompt(data: any): string {\n    return JSON.stringify(data, null, 0);\n  }\n\n  private truncatePrompt(prompt: string, modelType: keyof TokenLimits): string {\n    const maxLength = this.maxTokens[modelType] * 4; // Rough character estimation\n    return prompt.slice(0, maxLength);\n  }\n\n  private estimateTokens(text: string): number {\n    // Rough estimation: ~4 characters per token\n    return Math.ceil(text.length / 4);\n  }\n\n  async calculateCost(tokens: number, model: keyof TokenCosts): Promise<number> {\n    return tokens * this.costPerToken[model];\n  }\n\n  cacheResponse(prompt: string, response: string, model: string): void {\n    const hash = this.hashPrompt(prompt);\n    const cacheEntry = {\n      response,\n      timestamp: Date.now(),\n      tokens: this.estimateTokens(prompt + response),\n      model\n    };\n\n    this.responseCache.set(hash, cacheEntry);\n    this.updateTokenCount(model, cacheEntry.tokens);\n  }\n\n  getCachedResponse(prompt: string): string | null {\n    const hash = this.hashPrompt(prompt);\n    const cached = this.responseCache.get(hash);\n    \n    if (cached && Date.now() - cached.timestamp < 3600000) { // 1 hour cache\n      return cached.response;\n    }\n    \n    return null;\n  }\n\n  private hashPrompt(prompt: string): string {\n    let hash = 0;\n    for (let i = 0; i < prompt.length; i++) {\n      const char = prompt.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash;\n    }\n    return hash.toString();\n  }\n\n  private updateTokenCount(model: string, tokens: number): void {\n    const current = this.tokenCounters.get(model) || 0;\n    this.tokenCounters.set(model, current + tokens);\n  }\n\n  getTokenUsage(): Record<string, number> {\n    return Object.fromEntries(this.tokenCounters);\n  }\n}\n\nexport const tokenOptimizer = new TokenOptimizer();","import { db } from '../db/database';\nimport { transcribeAudio, analyzeTranscription } from './openai';\nimport { logAuditEvent } from './auditService';\n\nexport async function processAudioRecording(audioBlob: Blob, patientId: number) {\n  try {\n    // Save initial audio record\n    const audioRecord = {\n      patientId,\n      audioBlob,\n      createdAt: new Date()\n    };\n    \n    const audioId = await db.audioRecords.add(audioRecord);\n    \n    // Log audio recording start\n    await logAuditEvent('system', 'audio_processing_start', {\n      patientId,\n      audioId,\n      timestamp: new Date()\n    });\n\n    // Process with OpenAI\n    const transcription = await transcribeAudio(audioBlob);\n    const analysis = await analyzeTranscription(transcription);\n    \n    // Update record with results\n    await db.audioRecords.update(audioId, {\n      transcription,\n      analysis\n    });\n\n    // Log successful processing\n    await logAuditEvent('system', 'audio_processing_complete', {\n      patientId,\n      audioId,\n      timestamp: new Date()\n    });\n    \n    return { transcription, analysis };\n  } catch (error) {\n    // Log error\n    await logAuditEvent('system', 'audio_processing_error', {\n      patientId,\n      error: error instanceof Error ? error.message : 'Unknown error',\n      timestamp: new Date()\n    });\n\n    console.error('Error processing audio:', error);\n    throw new Error('Failed to process audio recording. Please try again or contact support.');\n  }\n}\n\nexport async function getPatientAudioRecords(patientId: number) {\n  try {\n    return await db.audioRecords\n      .where('patientId')\n      .equals(patientId)\n      .reverse()\n      .sortBy('createdAt');\n  } catch (error) {\n    console.error('Error fetching audio records:', error);\n    throw new Error('Failed to retrieve audio records');\n  }\n}","import { db } from '../config/firebase';\nimport { collection, addDoc } from 'firebase/firestore';\n\ninterface AuditLog {\n  userId: string;\n  action: string;\n  details: Record<string, unknown>;\n  timestamp: Date;\n}\n\nexport async function logAuditEvent(\n  userId: string,\n  action: string,\n  details: Record<string, unknown>\n) {\n  try {\n    const auditLog: AuditLog = {\n      userId,\n      action,\n      details,\n      timestamp: new Date(),\n    };\n\n    await addDoc(collection(db, 'audit_logs'), auditLog);\n  } catch (error) {\n    console.error('Error logging audit event:', error);\n    // Don't throw - audit logging should not break the main flow\n  }\n}","import { config } from '../config/env';\nimport { aiOrchestrator } from './ai/AIOrchestrator';\nimport { logAuditEvent } from './auditService';\n\nexport async function transcribeAudio(audioBlob: Blob): Promise<string> {\n  try {\n    const formData = new FormData();\n    formData.append('file', audioBlob);\n    formData.append('model', 'whisper-1');\n    formData.append('language', 'es');\n\n    const response = await fetch('https://api.openai.com/v1/audio/transcriptions', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${config.openai.apiKey}`\n      },\n      body: formData\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error?.message || 'Transcription failed');\n    }\n\n    const data = await response.json();\n    return data.text;\n  } catch (error) {\n    await logAuditEvent('system', 'transcription_error', {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      timestamp: new Date()\n    });\n\n    console.error('Error in transcribeAudio:', error);\n    throw new Error('Failed to transcribe audio. Please try again or speak more clearly.');\n  }\n}\n\nexport async function analyzeTranscription(transcription: string): Promise<string> {\n  try {\n    return await aiOrchestrator.processRequest(\n      { transcription },\n      'medical_analysis'\n    );\n  } catch (error) {\n    await logAuditEvent('system', 'analysis_error', {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      timestamp: new Date()\n    });\n\n    console.error('Error in analyzeTranscription:', error);\n    throw new Error('Failed to analyze transcription. Please try again.');\n  }\n}","import { create } from 'zustand';\nimport { auth } from '../config/firebase';\nimport { \n  signInWithEmailAndPassword,\n  signOut as firebaseSignOut,\n  onAuthStateChanged,\n  User\n} from 'firebase/auth';\n\ninterface AuthState {\n  user: User | null;\n  loading: boolean;\n  error: string | null;\n  signIn: (email: string, password: string) => Promise<void>;\n  signOut: () => Promise<void>;\n}\n\nexport const useAuthStore = create<AuthState>((set) => ({\n  user: null,\n  loading: true,\n  error: null,\n  signIn: async (email: string, password: string) => {\n    try {\n      set({ loading: true, error: null });\n      await signInWithEmailAndPassword(auth, email, password);\n    } catch (error) {\n      set({ error: (error as Error).message });\n    } finally {\n      set({ loading: false });\n    }\n  },\n  signOut: async () => {\n    try {\n      await firebaseSignOut(auth);\n      set({ user: null });\n    } catch (error) {\n      set({ error: (error as Error).message });\n    }\n  }\n}));\n\n// Initialize auth state listener\nonAuthStateChanged(auth, (user) => {\n  useAuthStore.setState({ user, loading: false });\n});","import { create } from 'zustand';\nimport { PatientRecord } from '../types/database';\nimport { db } from '../db/database';\n\ninterface PatientState {\n  currentPatient: PatientRecord | null;\n  setCurrentPatient: (patient: PatientRecord) => void;\n  savePatient: (patient: Omit<PatientRecord, 'id' | 'createdAt'>) => Promise<number>;\n  clearCurrentPatient: () => void;\n}\n\nexport const usePatientStore = create<PatientState>((set) => ({\n  currentPatient: null,\n  setCurrentPatient: (patient) => set({ currentPatient: patient }),\n  savePatient: async (patient) => {\n    const id = await db.patients.add({\n      ...patient,\n      createdAt: new Date()\n    });\n    return id;\n  },\n  clearCurrentPatient: () => set({ currentPatient: null })\n}));","export const isMessagePort = (sender) => {\n    return typeof sender.start === 'function';\n};\n//# sourceMappingURL=message-port.js.map","import { PORT_MAP } from './port-map';\nexport const extendBrokerImplementation = (partialBrokerImplementation) => ({\n    ...partialBrokerImplementation,\n    connect: ({ call }) => {\n        return async () => {\n            const { port1, port2 } = new MessageChannel();\n            const portId = await call('connect', { port: port1 }, [port1]);\n            PORT_MAP.set(port2, portId);\n            return port2;\n        };\n    },\n    disconnect: ({ call }) => {\n        return async (port) => {\n            const portId = PORT_MAP.get(port);\n            if (portId === undefined) {\n                throw new Error('The given port is not connected.');\n            }\n            await call('disconnect', { portId });\n        };\n    },\n    isSupported: ({ call }) => {\n        return () => call('isSupported');\n    }\n});\n//# sourceMappingURL=extend-broker-implementation.js.map","export const PORT_MAP = new WeakMap();\n//# sourceMappingURL=port-map.js.map","export {};\n//# sourceMappingURL=broker-actions.js.map","export {};\n//# sourceMappingURL=broker-definition.js.map","export {};\n//# sourceMappingURL=default-broker-definition.js.map","export * from './broker-actions';\nexport * from './broker-definition';\nexport * from './default-broker-definition';\nexport * from './worker-event';\n//# sourceMappingURL=index.js.map","export {};\n//# sourceMappingURL=worker-event.js.map","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { isMessagePort } from './guards/message-port';\nimport { extendBrokerImplementation } from './helpers/extend-broker-implementation';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst ONGOING_REQUESTS = new WeakMap();\nconst createOrGetOngoingRequests = (sender) => {\n    if (ONGOING_REQUESTS.has(sender)) {\n        // @todo TypeScript needs to be convinced that has() works as expected.\n        return ONGOING_REQUESTS.get(sender);\n    }\n    const ongoingRequests = new Map();\n    ONGOING_REQUESTS.set(sender, ongoingRequests);\n    return ongoingRequests;\n};\nexport const createBroker = (brokerImplementation) => {\n    const fullBrokerImplementation = extendBrokerImplementation(brokerImplementation);\n    return (sender) => {\n        const ongoingRequests = createOrGetOngoingRequests(sender);\n        sender.addEventListener('message', (({ data: message }) => {\n            const { id } = message;\n            if (id !== null && ongoingRequests.has(id)) {\n                const { reject, resolve } = ongoingRequests.get(id);\n                ongoingRequests.delete(id);\n                if (message.error === undefined) {\n                    resolve(message.result);\n                }\n                else {\n                    reject(new Error(message.error.message));\n                }\n            }\n        }));\n        if (isMessagePort(sender)) {\n            sender.start();\n        }\n        const call = (method, params = null, transferables = []) => {\n            return new Promise((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n                ongoingRequests.set(id, { reject, resolve });\n                if (params === null) {\n                    sender.postMessage({ id, method }, transferables);\n                }\n                else {\n                    sender.postMessage({ id, method, params }, transferables);\n                }\n            });\n        };\n        const notify = (method, params, transferables = []) => {\n            sender.postMessage({ id: null, method, params }, transferables);\n        };\n        let functions = {};\n        for (const [key, handler] of Object.entries(fullBrokerImplementation)) {\n            functions = { ...functions, [key]: handler({ call, notify }) };\n        }\n        return { ...functions };\n    };\n};\n//# sourceMappingURL=module.js.map","export {};\n//# sourceMappingURL=broker-implementation.js.map","export * from './broker-implementation';\n//# sourceMappingURL=index.js.map","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/toConsumableArray'), require('dashify'), require('indefinite-article')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/toConsumableArray', 'dashify', 'indefinite-article'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.compilerr = {}, global._toConsumableArray, global.dashify, global.indefiniteArticle));\n})(this, (function (exports, _toConsumableArray, dashify, indefiniteArticle) { 'use strict';\n\n    var applyModifiers = function applyModifiers(name, modifiers) {\n      if (modifiers === undefined) {\n        return name;\n      }\n      return modifiers.reduce(function (modifiedName, modifier) {\n        if (modifier === 'capitalize') {\n          var head = modifiedName.charAt(0).toUpperCase();\n          var tail = modifiedName.slice(1);\n          return \"\".concat(head).concat(tail);\n        }\n        if (modifier === 'dashify') {\n          return dashify(modifiedName);\n        }\n        if (modifier === 'prependIndefiniteArticle') {\n          return \"\".concat(indefiniteArticle(modifiedName), \" \").concat(modifiedName);\n        }\n        return modifiedName;\n      }, name);\n    };\n    var buildRegex = function buildRegex(variable) {\n      var expression = variable.name + variable.modifiers.map(function (modifier) {\n        return \"\\\\.\".concat(modifier, \"\\\\(\\\\)\");\n      }).join('');\n      return new RegExp(\"\\\\$\\\\{\".concat(expression, \"}\"), 'g');\n    };\n    var preRenderString = function preRenderString(string, parameters) {\n      var expressionRegex = /\\${([^.}]+)((\\.[^(]+\\(\\))*)}/g;\n      var variables = [];\n      var expressionResult = expressionRegex.exec(string);\n      while (expressionResult !== null) {\n        var variable = {\n          modifiers: [],\n          name: expressionResult[1]\n        };\n        if (expressionResult[3] !== undefined) {\n          var modifiersRegex = /\\.[^(]+\\(\\)/g;\n          var modifiersRegexResult = modifiersRegex.exec(expressionResult[2]);\n          while (modifiersRegexResult !== null) {\n            variable.modifiers.push(modifiersRegexResult[0].slice(1, -2));\n            modifiersRegexResult = modifiersRegex.exec(expressionResult[2]);\n          }\n        }\n        variables.push(variable);\n        expressionResult = expressionRegex.exec(string);\n      }\n      var preRenderedParts = variables.reduce(function (parts, variable) {\n        return parts.map(function (part) {\n          if (typeof part === 'string') {\n            return part.split(buildRegex(variable)).reduce(function (prts, prt, index) {\n              if (index === 0) {\n                return [prt];\n              }\n              if (variable.name in parameters) {\n                return [].concat(_toConsumableArray(prts), [applyModifiers(parameters[variable.name], variable.modifiers), prt]);\n              }\n              return [].concat(_toConsumableArray(prts), [function (prmtrs) {\n                return applyModifiers(prmtrs[variable.name], variable.modifiers);\n              }, prt]);\n            }, []);\n          }\n          return [part];\n        }).reduce(function (prts, part) {\n          return [].concat(_toConsumableArray(prts), _toConsumableArray(part));\n        }, []);\n      }, [string]);\n      return function (missingParameters) {\n        return preRenderedParts.reduce(function (renderedParts, preRenderedPart) {\n          if (typeof preRenderedPart === 'string') {\n            return [].concat(_toConsumableArray(renderedParts), [preRenderedPart]);\n          }\n          return [].concat(_toConsumableArray(renderedParts), [preRenderedPart(missingParameters)]);\n        }, []).join('');\n      };\n    };\n    var compile = function compile(template) {\n      var knownParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var renderCode = template.code === undefined ? undefined : preRenderString(template.code, knownParameters);\n      var renderMessage = template.message === undefined ? undefined : preRenderString(template.message, knownParameters);\n      function render() {\n        var causeOrMissingParameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var optionalCause = arguments.length > 1 ? arguments[1] : undefined;\n        var hasNoOptionalCause = optionalCause === undefined && (causeOrMissingParameters instanceof Error || causeOrMissingParameters.code !== undefined && causeOrMissingParameters.code.slice(-9) === 'Exception');\n        var _ref = hasNoOptionalCause ? {\n            cause: causeOrMissingParameters,\n            missingParameters: {}\n          } : {\n            cause: optionalCause,\n            missingParameters: causeOrMissingParameters\n          },\n          cause = _ref.cause,\n          missingParameters = _ref.missingParameters;\n        var err = renderMessage === undefined ? new Error() : new Error(renderMessage(missingParameters));\n        if (cause !== null) {\n          err.cause = cause;\n        }\n        if (renderCode !== undefined) {\n          err.code = renderCode(missingParameters);\n        }\n        if (template.status !== undefined) {\n          err.status = template.status;\n        }\n        return err;\n      }\n      return render;\n    };\n\n    exports.compile = compile;\n\n}));\n","/*!\n * dashify <https://github.com/jonschlinkert/dashify>\n *\n * Copyright (c) 2015-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = (str, options) => {\n  if (typeof str !== 'string') throw new TypeError('expected a string');\n  return str.trim()\n    .replace(/([a-z])([A-Z])/g, '$1-$2')\n    .replace(/\\W/g, m => /[À-ž]/.test(m) ? m : '-')\n    .replace(/^-+|-+$/g, '')\n    .replace(/-{2,}/g, m => options && options.condense ? '-' : m)\n    .toLowerCase();\n};\n","export {};\n//# sourceMappingURL=extendable-media-recorder-wav-encoder-broker-definition.js.map","export * from './extendable-media-recorder-wav-encoder-broker-definition';\n//# sourceMappingURL=index.js.map","import { createBroker } from 'broker-factory';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nexport const wrap = createBroker({\n    characterize: ({ call }) => {\n        return () => call('characterize');\n    },\n    encode: ({ call }) => {\n        return (recordingId, timeslice) => {\n            return call('encode', { recordingId, timeslice });\n        };\n    },\n    record: ({ call }) => {\n        return async (recordingId, sampleRate, typedArrays) => {\n            await call('record', { recordingId, sampleRate, typedArrays }, typedArrays.map(({ buffer }) => buffer));\n        };\n    }\n});\nexport const load = (url) => {\n    const worker = new Worker(url);\n    return wrap(worker);\n};\n//# sourceMappingURL=module.js.map","export {};\n//# sourceMappingURL=extendable-media-recorder-wav-encoder-broker-loader.js.map","export {};\n//# sourceMappingURL=extendable-media-recorder-wav-encoder-broker-wrapper.js.map","export * from './extendable-media-recorder-wav-encoder-broker-loader';\nexport * from './extendable-media-recorder-wav-encoder-broker-wrapper';\nexport * from './typed-array';\n//# sourceMappingURL=index.js.map","export {};\n//# sourceMappingURL=typed-array.js.map","import { load } from 'extendable-media-recorder-wav-encoder-broker';\nimport { worker } from './worker/worker';\nconst blob = new Blob([worker], { type: 'application/javascript; charset=utf-8' });\nconst url = URL.createObjectURL(blob);\nconst extendableMediaRecorderWavEncoder = load(url);\nexport const characterize = extendableMediaRecorderWavEncoder.characterize;\nexport const connect = extendableMediaRecorderWavEncoder.connect;\nexport const disconnect = extendableMediaRecorderWavEncoder.disconnect;\nexport const encode = extendableMediaRecorderWavEncoder.encode;\nexport const isSupported = extendableMediaRecorderWavEncoder.isSupported;\nexport const record = extendableMediaRecorderWavEncoder.record;\nURL.revokeObjectURL(url);\n//# sourceMappingURL=module.js.map","// This is the minified and stringified code of the extendable-media-recorder-wav-encoder-worker package.\nexport const worker = `(()=>{var e={455:function(e,t){!function(e){\"use strict\";var t=function(e){return function(t){var r=e(t);return t.add(r),r}},r=function(e){return function(t,r){return e.set(t,r),r}},n=void 0===Number.MAX_SAFE_INTEGER?9007199254740991:Number.MAX_SAFE_INTEGER,s=536870912,a=2*s,o=function(e,t){return function(r){var o=t.get(r),i=void 0===o?r.size:o<a?o+1:0;if(!r.has(i))return e(r,i);if(r.size<s){for(;r.has(i);)i=Math.floor(Math.random()*a);return e(r,i)}if(r.size>n)throw new Error(\"Congratulations, you created a collection of unique numbers which uses all available integers!\");for(;r.has(i);)i=Math.floor(Math.random()*n);return e(r,i)}},i=new WeakMap,c=r(i),l=o(c,i),u=t(l);e.addUniqueNumber=u,e.generateUniqueNumber=l}(t)}},t={};function r(n){var s=t[n];if(void 0!==s)return s.exports;var a=t[n]={exports:{}};return e[n].call(a.exports,a,a.exports,r),a.exports}(()=>{\"use strict\";const e=-32603,t=-32602,n=-32601,s=(e,t)=>Object.assign(new Error(e),{status:t}),a=t=>s('The handler of the method called \"'.concat(t,'\" returned an unexpected result.'),e),o=(t,r)=>async({data:{id:o,method:i,params:c}})=>{const l=r[i];try{if(void 0===l)throw(e=>s('The requested method called \"'.concat(e,'\" is not supported.'),n))(i);const r=void 0===c?l():l(c);if(void 0===r)throw(t=>s('The handler of the method called \"'.concat(t,'\" returned no required result.'),e))(i);const u=r instanceof Promise?await r:r;if(null===o){if(void 0!==u.result)throw a(i)}else{if(void 0===u.result)throw a(i);const{result:e,transferables:r=[]}=u;t.postMessage({id:o,result:e},r)}}catch(e){const{message:r,status:n=-32603}=e;t.postMessage({error:{code:n,message:r},id:o})}};var i=r(455);const c=new Map,l=(e,r,n)=>({...r,connect:({port:t})=>{t.start();const n=e(t,r),s=(0,i.generateUniqueNumber)(c);return c.set(s,(()=>{n(),t.close(),c.delete(s)})),{result:s}},disconnect:({portId:e})=>{const r=c.get(e);if(void 0===r)throw(e=>s('The specified parameter called \"portId\" with the given value \"'.concat(e,'\" does not identify a port connected to this worker.'),t))(e);return r(),{result:null}},isSupported:async()=>{if(await new Promise((e=>{const t=new ArrayBuffer(0),{port1:r,port2:n}=new MessageChannel;r.onmessage=({data:t})=>e(null!==t),n.postMessage(t,[t])}))){const e=n();return{result:e instanceof Promise?await e:e}}return{result:!1}}}),u=(e,t,r=()=>!0)=>{const n=l(u,t,r),s=o(e,n);return e.addEventListener(\"message\",s),()=>e.removeEventListener(\"message\",s)},d=e=>e.reduce(((e,t)=>e+t.length),0),h=(e,t)=>{const r=[];let n=0;e:for(;n<t;){const t=e.length;for(let s=0;s<t;s+=1){const t=e[s];void 0===r[s]&&(r[s]=[]);const a=t.shift();if(void 0===a)break e;r[s].push(a),0===s&&(n+=a.length)}}if(n>t){const s=n-t;r.forEach(((t,r)=>{const n=t.pop(),a=n.length-s;t.push(n.subarray(0,a)),e[r].unshift(n.subarray(a))}))}return r},f=new Map,m=(e=>(t,r,n)=>{const s=e.get(t);if(void 0===s){const s={channelDataArrays:n.map((e=>[e])),isComplete:!0,sampleRate:r};return e.set(t,s),s}return s.channelDataArrays.forEach(((e,t)=>e.push(n[t]))),s})(f),p=((e,t)=>(r,n,s,a)=>{const o=s>>3,i=\"subsequent\"===n?0:44,c=r.length,l=e(r[0]),u=new ArrayBuffer(l*c*o+i),d=new DataView(u);return\"subsequent\"!==n&&t(d,s,c,\"complete\"===n?l:Number.POSITIVE_INFINITY,a),r.forEach(((e,t)=>{let r=i+t*o;e.forEach((e=>{const t=e.length;for(let n=0;n<t;n+=1){const t=e[n];d.setInt16(r,t<0?32768*Math.max(-1,t):32767*Math.min(1,t),!0),r+=c*o}}))})),[u]})(d,((e,t,r,n,s)=>{const a=t>>3,o=Math.min(n*r*a,4294967251);e.setUint32(0,1380533830),e.setUint32(4,o+36,!0),e.setUint32(8,1463899717),e.setUint32(12,1718449184),e.setUint32(16,16,!0),e.setUint16(20,1,!0),e.setUint16(22,r,!0),e.setUint32(24,s,!0),e.setUint32(28,s*r*a,!0),e.setUint16(32,r*a,!0),e.setUint16(34,t,!0),e.setUint32(36,1684108385),e.setUint32(40,o,!0)})),v=new Map;u(self,{characterize:()=>({result:/^audio\\\\/wav$/}),encode:({recordingId:e,timeslice:t})=>{const r=v.get(e);void 0!==r&&(v.delete(e),r.reject(new Error(\"Another request was made to initiate an encoding.\")));const n=f.get(e);if(null!==t){if(void 0===n||d(n.channelDataArrays[0])*(1e3/n.sampleRate)<t)return new Promise(((r,n)=>{v.set(e,{reject:n,resolve:r,timeslice:t})}));const r=h(n.channelDataArrays,Math.ceil(t*(n.sampleRate/1e3))),s=p(r,n.isComplete?\"initial\":\"subsequent\",16,n.sampleRate);return n.isComplete=!1,{result:s,transferables:s}}if(void 0!==n){const t=p(n.channelDataArrays,n.isComplete?\"complete\":\"subsequent\",16,n.sampleRate);return f.delete(e),{result:t,transferables:t}}return{result:[],transferables:[]}},record:({recordingId:e,sampleRate:t,typedArrays:r})=>{const n=m(e,t,r),s=v.get(e);if(void 0!==s&&d(n.channelDataArrays[0])*(1e3/t)>=s.timeslice){const r=h(n.channelDataArrays,Math.ceil(s.timeslice*(t/1e3))),a=p(r,n.isComplete?\"initial\":\"subsequent\",16,t);n.isComplete=!1,v.delete(e),s.resolve({result:a,transferables:a})}return{result:null}}})})()})();`; // tslint:disable-line:max-line-length\n//# sourceMappingURL=worker.js.map","export const createBlobEventFactory = (nativeBlobEventConstructor) => {\n    return (type, blobEventInit) => {\n        // Bug #14: Safari does not yet support the BlobEvent.\n        if (nativeBlobEventConstructor === null) {\n            const { data, ...eventInit } = blobEventInit;\n            const fakeBlobEvent = new Event(type, eventInit);\n            fakeBlobEvent.data = data;\n            return fakeBlobEvent;\n        }\n        return new nativeBlobEventConstructor(type, blobEventInit);\n    };\n};\n//# sourceMappingURL=blob-event-factory.js.map","export const createDecodeWebMChunk = (readElementContent, readElementType) => {\n    return (dataView, elementType, channelCount) => {\n        const contents = [];\n        let currentElementType = elementType;\n        let offset = 0;\n        while (offset < dataView.byteLength) {\n            if (currentElementType === null) {\n                const lengthAndType = readElementType(dataView, offset);\n                if (lengthAndType === null) {\n                    break;\n                }\n                const { length, type } = lengthAndType;\n                currentElementType = type;\n                offset += length;\n            }\n            else {\n                const contentAndLength = readElementContent(dataView, offset, currentElementType, channelCount);\n                if (contentAndLength === null) {\n                    break;\n                }\n                const { content, length } = contentAndLength;\n                currentElementType = null;\n                offset += length;\n                if (content !== null) {\n                    contents.push(content);\n                }\n            }\n        }\n        return { contents, currentElementType, offset };\n    };\n};\n//# sourceMappingURL=decode-web-m-chunk.js.map","export const createEventTargetConstructor = (createEventTarget, wrapEventListener) => {\n    return class EventTarget {\n        constructor(nativeEventTarget = null) {\n            this._listeners = new WeakMap();\n            this._nativeEventTarget = nativeEventTarget === null ? createEventTarget() : nativeEventTarget;\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=event-target-constructor.js.map","export const createEventTargetFactory = (window) => {\n    return () => {\n        if (window === null) {\n            throw new Error('A native EventTarget could not be created.');\n        }\n        return window.document.createElement('p');\n    };\n};\n//# sourceMappingURL=event-target-factory.js.map","export const createInvalidModificationError = (message = '') => {\n    try {\n        return new DOMException(message, 'InvalidModificationError');\n    }\n    catch (err) {\n        // @todo Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 13;\n        err.message = message;\n        err.name = 'InvalidModificationError';\n        return err;\n    }\n};\n//# sourceMappingURL=invalid-modification-error.js.map","export const createInvalidStateError = () => {\n    try {\n        return new DOMException('', 'InvalidStateError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 11;\n        err.name = 'InvalidStateError';\n        return err;\n    }\n};\n//# sourceMappingURL=invalid-state-error.js.map","export const createIsSupportedPromise = (window) => {\n    if (window !== null &&\n        window.MediaStream !== undefined &&\n        /*\n         * Bug #10: An early experimental implemenation in Safari did not provide the isTypeSupported() function.\n         */\n        (window.MediaRecorder === undefined || window.MediaRecorder.isTypeSupported !== undefined)) {\n        /*\n         * Bug #5: Up until v70 Firefox did emit a blob of type video/webm when asked to encode a MediaStream with a video track into an\n         * audio codec.\n         */\n        return new Promise((resolve) => {\n            // Bug #11 Safari does not yet support the MediaRecorder but that isn't tested here.\n            if (window.MediaRecorder === undefined) {\n                return resolve(true);\n            }\n            // @todo captureStream() is not defined yet.\n            const canvasElement = document.createElement('canvas');\n            // @todo https://bugzilla.mozilla.org/show_bug.cgi?id=1388974\n            canvasElement.getContext('2d');\n            if (typeof canvasElement.captureStream !== 'function') {\n                return resolve(false);\n            }\n            const mediaStream = canvasElement.captureStream();\n            const mimeType = 'audio/webm';\n            try {\n                const mediaRecorder = new window.MediaRecorder(mediaStream, { mimeType });\n                mediaRecorder.addEventListener('dataavailable', ({ data }) => resolve(data.type === mimeType));\n                mediaRecorder.start();\n                setTimeout(() => mediaRecorder.stop(), 10);\n            }\n            catch (err) {\n                resolve(err.name === 'NotSupportedError');\n            }\n        });\n    }\n    return Promise.resolve(false);\n};\n//# sourceMappingURL=is-supported-promise.js.map","export const createMediaRecorderConstructor = (createNativeMediaRecorder, createNotSupportedError, createWebAudioMediaRecorder, createWebmPcmMediaRecorder, encoderRegexes, eventTargetConstructor, nativeMediaRecorderConstructor) => {\n    return class MediaRecorder extends eventTargetConstructor {\n        constructor(stream, options = {}) {\n            const { mimeType } = options;\n            if (nativeMediaRecorderConstructor !== null &&\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                (mimeType === undefined ||\n                    (nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                        nativeMediaRecorderConstructor.isTypeSupported(mimeType)))) {\n                const internalMediaRecorder = createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n                super(internalMediaRecorder);\n                this._internalMediaRecorder = internalMediaRecorder;\n            }\n            else if (mimeType !== undefined && encoderRegexes.some((regex) => regex.test(mimeType))) {\n                super();\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                if (nativeMediaRecorderConstructor !== null &&\n                    nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                    nativeMediaRecorderConstructor.isTypeSupported('audio/webm;codecs=pcm')) {\n                    this._internalMediaRecorder = createWebmPcmMediaRecorder(this, nativeMediaRecorderConstructor, stream, mimeType);\n                }\n                else {\n                    this._internalMediaRecorder = createWebAudioMediaRecorder(this, stream, mimeType);\n                }\n            }\n            else {\n                // This is creating a native MediaRecorder just to provoke it to throw an error.\n                if (nativeMediaRecorderConstructor !== null) {\n                    createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n                }\n                throw createNotSupportedError();\n            }\n            this._ondataavailable = null;\n            this._onerror = null;\n            this._onpause = null;\n            this._onresume = null;\n            this._onstart = null;\n            this._onstop = null;\n        }\n        get mimeType() {\n            return this._internalMediaRecorder.mimeType;\n        }\n        get ondataavailable() {\n            return this._ondataavailable === null ? this._ondataavailable : this._ondataavailable[0];\n        }\n        set ondataavailable(value) {\n            if (this._ondataavailable !== null) {\n                this.removeEventListener('dataavailable', this._ondataavailable[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('dataavailable', boundListener);\n                this._ondataavailable = [value, boundListener];\n            }\n            else {\n                this._ondataavailable = null;\n            }\n        }\n        get onerror() {\n            return this._onerror === null ? this._onerror : this._onerror[0];\n        }\n        set onerror(value) {\n            if (this._onerror !== null) {\n                this.removeEventListener('error', this._onerror[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('error', boundListener);\n                this._onerror = [value, boundListener];\n            }\n            else {\n                this._onerror = null;\n            }\n        }\n        get onpause() {\n            return this._onpause === null ? this._onpause : this._onpause[0];\n        }\n        set onpause(value) {\n            if (this._onpause !== null) {\n                this.removeEventListener('pause', this._onpause[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('pause', boundListener);\n                this._onpause = [value, boundListener];\n            }\n            else {\n                this._onpause = null;\n            }\n        }\n        get onresume() {\n            return this._onresume === null ? this._onresume : this._onresume[0];\n        }\n        set onresume(value) {\n            if (this._onresume !== null) {\n                this.removeEventListener('resume', this._onresume[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('resume', boundListener);\n                this._onresume = [value, boundListener];\n            }\n            else {\n                this._onresume = null;\n            }\n        }\n        get onstart() {\n            return this._onstart === null ? this._onstart : this._onstart[0];\n        }\n        set onstart(value) {\n            if (this._onstart !== null) {\n                this.removeEventListener('start', this._onstart[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('start', boundListener);\n                this._onstart = [value, boundListener];\n            }\n            else {\n                this._onstart = null;\n            }\n        }\n        get onstop() {\n            return this._onstop === null ? this._onstop : this._onstop[0];\n        }\n        set onstop(value) {\n            if (this._onstop !== null) {\n                this.removeEventListener('stop', this._onstop[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('stop', boundListener);\n                this._onstop = [value, boundListener];\n            }\n            else {\n                this._onstop = null;\n            }\n        }\n        get state() {\n            return this._internalMediaRecorder.state;\n        }\n        pause() {\n            return this._internalMediaRecorder.pause();\n        }\n        resume() {\n            return this._internalMediaRecorder.resume();\n        }\n        start(timeslice) {\n            return this._internalMediaRecorder.start(timeslice);\n        }\n        stop() {\n            return this._internalMediaRecorder.stop();\n        }\n        static isTypeSupported(mimeType) {\n            return ((nativeMediaRecorderConstructor !== null &&\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                nativeMediaRecorderConstructor.isTypeSupported(mimeType)) ||\n                encoderRegexes.some((regex) => regex.test(mimeType)));\n        }\n    };\n};\n//# sourceMappingURL=media-recorder-constructor.js.map","export const createNativeBlobEventConstructor = (window) => {\n    if (window !== null && window.BlobEvent !== undefined) {\n        return window.BlobEvent;\n    }\n    return null;\n};\n//# sourceMappingURL=native-blob-event-constructor.js.map","export const createNativeMediaRecorderConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return window.MediaRecorder === undefined ? null : window.MediaRecorder;\n};\n//# sourceMappingURL=native-media-recorder-constructor.js.map","export const createNativeMediaRecorderFactory = (createInvalidModificationError, createNotSupportedError) => {\n    return (nativeMediaRecorderConstructor, stream, mediaRecorderOptions) => {\n        const bufferedBlobs = [];\n        const dataAvailableListeners = new WeakMap();\n        const errorListeners = new WeakMap();\n        const nativeMediaRecorder = new nativeMediaRecorderConstructor(stream, mediaRecorderOptions);\n        const stopListeners = new WeakMap();\n        let isActive = true;\n        nativeMediaRecorder.addEventListener = ((addEventListener) => {\n            return (type, listener, options) => {\n                let patchedEventListener = listener;\n                if (typeof listener === 'function') {\n                    if (type === 'dataavailable') {\n                        // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.\n                        patchedEventListener = (event) => {\n                            setTimeout(() => {\n                                if (isActive && nativeMediaRecorder.state === 'inactive') {\n                                    bufferedBlobs.push(event.data);\n                                }\n                                else {\n                                    if (bufferedBlobs.length > 0) {\n                                        const blob = event.data;\n                                        Object.defineProperty(event, 'data', {\n                                            value: new Blob([...bufferedBlobs, blob], { type: blob.type })\n                                        });\n                                        bufferedBlobs.length = 0;\n                                    }\n                                    listener.call(nativeMediaRecorder, event);\n                                }\n                            });\n                        };\n                        dataAvailableListeners.set(listener, patchedEventListener);\n                    }\n                    else if (type === 'error') {\n                        // Bug #12 & #13: Firefox fires a regular event with an error property.\n                        patchedEventListener = (event) => {\n                            // Bug #3 & #4: Chrome throws an error event without any error.\n                            if (event.error === undefined) {\n                                listener.call(nativeMediaRecorder, new ErrorEvent('error', { error: createInvalidModificationError() }));\n                                // Bug #1 & #2: Firefox throws an error event with an UnknownError.\n                            }\n                            else if (event.error.name === 'UnknownError') {\n                                const message = event.error.message;\n                                listener.call(nativeMediaRecorder, new ErrorEvent('error', { error: createInvalidModificationError(message) }));\n                            }\n                            else if (event instanceof ErrorEvent) {\n                                listener.call(nativeMediaRecorder, event);\n                            }\n                            else {\n                                listener.call(nativeMediaRecorder, new ErrorEvent('error', { error: event.error }));\n                            }\n                        };\n                        errorListeners.set(listener, patchedEventListener);\n                    }\n                    else if (type === 'stop') {\n                        // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.\n                        patchedEventListener = (event) => {\n                            isActive = false;\n                            setTimeout(() => listener.call(nativeMediaRecorder, event));\n                        };\n                        stopListeners.set(listener, patchedEventListener);\n                    }\n                }\n                return addEventListener.call(nativeMediaRecorder, type, patchedEventListener, options);\n            };\n        })(nativeMediaRecorder.addEventListener);\n        nativeMediaRecorder.dispatchEvent = ((dispatchEvent) => {\n            // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.\n            return (event) => {\n                let wasActive;\n                setTimeout(() => {\n                    wasActive = isActive;\n                    isActive = false;\n                });\n                const returnValue = dispatchEvent.call(nativeMediaRecorder, event);\n                setTimeout(() => (isActive = wasActive));\n                return returnValue;\n            };\n        })(nativeMediaRecorder.dispatchEvent);\n        nativeMediaRecorder.removeEventListener = ((removeEventListener) => {\n            return (type, listener, options) => {\n                let patchedEventListener = listener;\n                if (typeof listener === 'function') {\n                    if (type === 'dataavailable') {\n                        const dataAvailableListener = dataAvailableListeners.get(listener);\n                        if (dataAvailableListener !== undefined) {\n                            patchedEventListener = dataAvailableListener;\n                        }\n                    }\n                    else if (type === 'error') {\n                        const errorListener = errorListeners.get(listener);\n                        if (errorListener !== undefined) {\n                            patchedEventListener = errorListener;\n                        }\n                    }\n                    else if (type === 'stop') {\n                        const stopListener = stopListeners.get(listener);\n                        if (stopListener !== undefined) {\n                            patchedEventListener = stopListener;\n                        }\n                    }\n                }\n                return removeEventListener.call(nativeMediaRecorder, type, patchedEventListener, options);\n            };\n        })(nativeMediaRecorder.removeEventListener);\n        nativeMediaRecorder.start = ((start) => {\n            return (timeslice) => {\n                /*\n                 * Bug #6: Chrome will emit a blob without any data when asked to encode a MediaStream with a video track into an audio\n                 * codec.\n                 */\n                if (mediaRecorderOptions.mimeType !== undefined &&\n                    mediaRecorderOptions.mimeType.startsWith('audio/') &&\n                    stream.getVideoTracks().length > 0) {\n                    throw createNotSupportedError();\n                }\n                isActive = timeslice !== undefined;\n                return timeslice === undefined ? start.call(nativeMediaRecorder) : start.call(nativeMediaRecorder, timeslice);\n            };\n        })(nativeMediaRecorder.start);\n        return nativeMediaRecorder;\n    };\n};\n//# sourceMappingURL=native-media-recorder.js.map","export const createNotSupportedError = () => {\n    try {\n        return new DOMException('', 'NotSupportedError');\n    }\n    catch (err) {\n        // @todo Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 9;\n        err.name = 'NotSupportedError';\n        return err;\n    }\n};\n//# sourceMappingURL=not-supported-error.js.map","export const createReadElementContent = (readVariableSizeInteger) => {\n    return (dataView, offset, type, channelCount = 2) => {\n        const lengthAndValue = readVariableSizeInteger(dataView, offset);\n        if (lengthAndValue === null) {\n            return lengthAndValue;\n        }\n        const { length, value } = lengthAndValue;\n        if (type === 'master') {\n            return { content: null, length };\n        }\n        if (offset + length + value > dataView.byteLength) {\n            return null;\n        }\n        if (type === 'binary') {\n            const numberOfSamples = (value / Float32Array.BYTES_PER_ELEMENT - 1) / channelCount;\n            const content = Array.from({ length: channelCount }, () => new Float32Array(numberOfSamples));\n            for (let i = 0; i < numberOfSamples; i += 1) {\n                const elementOffset = i * channelCount + 1;\n                for (let j = 0; j < channelCount; j += 1) {\n                    content[j][i] = dataView.getFloat32(offset + length + (elementOffset + j) * Float32Array.BYTES_PER_ELEMENT, true);\n                }\n            }\n            return { content, length: length + value };\n        }\n        return { content: null, length: length + value };\n    };\n};\n//# sourceMappingURL=read-element-content.js.map","export const createReadElementType = (readVariableSizeInteger) => {\n    return (dataView, offset) => {\n        const lengthAndValue = readVariableSizeInteger(dataView, offset);\n        if (lengthAndValue === null) {\n            return lengthAndValue;\n        }\n        const { length, value } = lengthAndValue;\n        if (value === 35) {\n            return { length, type: 'binary' };\n        }\n        if (value === 46 ||\n            value === 97 ||\n            value === 88713574 ||\n            value === 106212971 ||\n            value === 139690087 ||\n            value === 172351395 ||\n            value === 256095861) {\n            return { length, type: 'master' };\n        }\n        return { length, type: 'unknown' };\n    };\n};\n//# sourceMappingURL=read-element-type.js.map","export const createReadVariableSizeInteger = (readVariableSizeIntegerLength) => {\n    return (dataView, offset) => {\n        const length = readVariableSizeIntegerLength(dataView, offset);\n        if (length === null) {\n            return length;\n        }\n        const firstDataByteOffset = offset + Math.floor((length - 1) / 8);\n        if (firstDataByteOffset + length > dataView.byteLength) {\n            return null;\n        }\n        const firstDataByte = dataView.getUint8(firstDataByteOffset);\n        let value = firstDataByte & ((1 << (8 - (length % 8))) - 1); // tslint:disable-line:no-bitwise\n        for (let i = 1; i < length; i += 1) {\n            value = (value << 8) + dataView.getUint8(firstDataByteOffset + i); // tslint:disable-line:no-bitwise\n        }\n        return { length, value };\n    };\n};\n//# sourceMappingURL=read-variable-size-integer.js.map","import { encode, instantiate } from 'media-encoder-host';\nimport { addRecorderAudioWorkletModule, createRecorderAudioWorkletNode } from 'recorder-audio-worklet';\nimport { AudioBuffer, AudioBufferSourceNode, AudioWorkletNode, ConstantSourceNode, MediaStreamAudioSourceNode, MinimalAudioContext, addAudioWorkletModule } from 'standardized-audio-context';\nconst ERROR_MESSAGE = 'Missing AudioWorklet support. Maybe this is not running in a secure context.';\n// @todo This should live in a separate file.\nconst createPromisedAudioNodesEncoderIdAndPort = async (audioBuffer, audioContext, channelCount, mediaStream, mimeType) => {\n    const { encoderId, port } = await instantiate(mimeType, audioContext.sampleRate);\n    if (AudioWorkletNode === undefined) {\n        throw new Error(ERROR_MESSAGE);\n    }\n    const audioBufferSourceNode = new AudioBufferSourceNode(audioContext, { buffer: audioBuffer });\n    const mediaStreamAudioSourceNode = new MediaStreamAudioSourceNode(audioContext, { mediaStream });\n    const recorderAudioWorkletNode = createRecorderAudioWorkletNode(AudioWorkletNode, audioContext, { channelCount });\n    return { audioBufferSourceNode, encoderId, mediaStreamAudioSourceNode, port, recorderAudioWorkletNode };\n};\nexport const createWebAudioMediaRecorderFactory = (createBlobEvent, createInvalidModificationError, createInvalidStateError, createNotSupportedError) => {\n    return (eventTarget, mediaStream, mimeType) => {\n        var _a;\n        const sampleRate = (_a = mediaStream.getAudioTracks()[0]) === null || _a === void 0 ? void 0 : _a.getSettings().sampleRate;\n        const audioContext = new MinimalAudioContext({ latencyHint: 'playback', sampleRate });\n        const length = Math.max(1024, Math.ceil(audioContext.baseLatency * audioContext.sampleRate));\n        const audioBuffer = new AudioBuffer({ length, sampleRate: audioContext.sampleRate });\n        const bufferedArrayBuffers = [];\n        const promisedAudioWorkletModule = addRecorderAudioWorkletModule((url) => {\n            if (addAudioWorkletModule === undefined) {\n                throw new Error(ERROR_MESSAGE);\n            }\n            return addAudioWorkletModule(audioContext, url);\n        });\n        let abortRecording = null;\n        let intervalId = null;\n        let promisedAudioNodesAndEncoderId = null;\n        let promisedPartialRecording = null;\n        let isAudioContextRunning = true;\n        const dispatchDataAvailableEvent = (arrayBuffers) => {\n            eventTarget.dispatchEvent(createBlobEvent('dataavailable', { data: new Blob(arrayBuffers, { type: mimeType }) }));\n        };\n        const requestNextPartialRecording = async (encoderId, timeslice) => {\n            const arrayBuffers = await encode(encoderId, timeslice);\n            if (promisedAudioNodesAndEncoderId === null) {\n                bufferedArrayBuffers.push(...arrayBuffers);\n            }\n            else {\n                dispatchDataAvailableEvent(arrayBuffers);\n                promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n            }\n        };\n        const resume = () => {\n            isAudioContextRunning = true;\n            return audioContext.resume();\n        };\n        const stop = () => {\n            if (promisedAudioNodesAndEncoderId === null) {\n                return;\n            }\n            if (abortRecording !== null) {\n                mediaStream.removeEventListener('addtrack', abortRecording);\n                mediaStream.removeEventListener('removetrack', abortRecording);\n            }\n            if (intervalId !== null) {\n                clearTimeout(intervalId);\n            }\n            promisedAudioNodesAndEncoderId.then(async ({ constantSourceNode, encoderId, mediaStreamAudioSourceNode, recorderAudioWorkletNode }) => {\n                if (promisedPartialRecording !== null) {\n                    promisedPartialRecording.catch(() => {\n                        /* @todo Only catch the errors caused by a duplicate call to encode. */\n                    });\n                    promisedPartialRecording = null;\n                }\n                await recorderAudioWorkletNode.stop();\n                mediaStreamAudioSourceNode.disconnect(recorderAudioWorkletNode);\n                constantSourceNode.stop();\n                const arrayBuffers = await encode(encoderId, null);\n                if (promisedAudioNodesAndEncoderId === null) {\n                    await suspend();\n                }\n                dispatchDataAvailableEvent([...bufferedArrayBuffers, ...arrayBuffers]);\n                bufferedArrayBuffers.length = 0;\n                eventTarget.dispatchEvent(new Event('stop'));\n            });\n            promisedAudioNodesAndEncoderId = null;\n        };\n        const suspend = () => {\n            isAudioContextRunning = false;\n            return audioContext.suspend();\n        };\n        suspend();\n        return {\n            get mimeType() {\n                return mimeType;\n            },\n            get state() {\n                return promisedAudioNodesAndEncoderId === null ? 'inactive' : isAudioContextRunning ? 'recording' : 'paused';\n            },\n            pause() {\n                if (promisedAudioNodesAndEncoderId === null) {\n                    throw createInvalidStateError();\n                }\n                if (isAudioContextRunning) {\n                    suspend();\n                    eventTarget.dispatchEvent(new Event('pause'));\n                }\n            },\n            resume() {\n                if (promisedAudioNodesAndEncoderId === null) {\n                    throw createInvalidStateError();\n                }\n                if (!isAudioContextRunning) {\n                    resume();\n                    eventTarget.dispatchEvent(new Event('resume'));\n                }\n            },\n            start(timeslice) {\n                var _a;\n                if (promisedAudioNodesAndEncoderId !== null) {\n                    throw createInvalidStateError();\n                }\n                if (mediaStream.getVideoTracks().length > 0) {\n                    throw createNotSupportedError();\n                }\n                eventTarget.dispatchEvent(new Event('start'));\n                const audioTracks = mediaStream.getAudioTracks();\n                // @todo TypeScript v4.4.2 removed the channelCount property from the MediaTrackSettings interface.\n                const channelCount = audioTracks.length === 0\n                    ? 2\n                    : (_a = audioTracks[0].getSettings().channelCount) !== null && _a !== void 0 ? _a : 2;\n                promisedAudioNodesAndEncoderId = Promise.all([\n                    resume(),\n                    promisedAudioWorkletModule.then(() => createPromisedAudioNodesEncoderIdAndPort(audioBuffer, audioContext, channelCount, mediaStream, mimeType))\n                ]).then(async ([, { audioBufferSourceNode, encoderId, mediaStreamAudioSourceNode, port, recorderAudioWorkletNode }]) => {\n                    mediaStreamAudioSourceNode.connect(recorderAudioWorkletNode);\n                    await new Promise((resolve) => {\n                        audioBufferSourceNode.onended = resolve;\n                        audioBufferSourceNode.connect(recorderAudioWorkletNode);\n                        audioBufferSourceNode.start(audioContext.currentTime + length / audioContext.sampleRate);\n                    });\n                    audioBufferSourceNode.disconnect(recorderAudioWorkletNode);\n                    // Bug #17: Safari does throttle the processing on hidden tabs if there is no active audio output.\n                    const constantSourceNode = new ConstantSourceNode(audioContext, { offset: 0 });\n                    constantSourceNode.onended = () => constantSourceNode.disconnect();\n                    constantSourceNode.connect(audioContext.destination);\n                    constantSourceNode.start();\n                    await recorderAudioWorkletNode.record(port);\n                    if (timeslice !== undefined) {\n                        promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n                    }\n                    return { constantSourceNode, encoderId, mediaStreamAudioSourceNode, recorderAudioWorkletNode };\n                });\n                const tracks = mediaStream.getTracks();\n                abortRecording = () => {\n                    stop();\n                    eventTarget.dispatchEvent(new ErrorEvent('error', { error: createInvalidModificationError() }));\n                };\n                mediaStream.addEventListener('addtrack', abortRecording);\n                mediaStream.addEventListener('removetrack', abortRecording);\n                intervalId = setInterval(() => {\n                    const currentTracks = mediaStream.getTracks();\n                    if ((currentTracks.length !== tracks.length || currentTracks.some((track, index) => track !== tracks[index])) &&\n                        abortRecording !== null) {\n                        abortRecording();\n                    }\n                }, 1000);\n            },\n            stop\n        };\n    };\n};\n//# sourceMappingURL=web-audio-media-recorder.js.map","import { encode, instantiate } from 'media-encoder-host';\nimport { MultiBufferDataView } from 'multi-buffer-data-view';\nimport { on } from 'subscribable-things';\nexport const createWebmPcmMediaRecorderFactory = (createBlobEvent, createInvalidModificationError, createNotSupportedError, decodeWebMChunk, readVariableSizeInteger) => {\n    return (eventTarget, nativeMediaRecorderConstructor, mediaStream, mimeType) => {\n        const audioTracks = mediaStream.getAudioTracks();\n        const bufferedArrayBuffers = [];\n        // @todo TypeScript v4.4.2 removed the channelCount property from the MediaTrackSettings interface.\n        const channelCount = audioTracks.length === 0\n            ? undefined\n            : audioTracks[0].getSettings().channelCount;\n        const nativeMediaRecorder = new nativeMediaRecorderConstructor(mediaStream, { mimeType: 'audio/webm;codecs=pcm' });\n        const sampleRate = audioTracks.length === 0 ? undefined : audioTracks[0].getSettings().sampleRate;\n        let promisedPartialRecording = null;\n        let stopRecording = () => { }; // tslint:disable-line:no-empty\n        const dispatchDataAvailableEvent = (arrayBuffers) => {\n            eventTarget.dispatchEvent(createBlobEvent('dataavailable', { data: new Blob(arrayBuffers, { type: mimeType }) }));\n        };\n        const requestNextPartialRecording = async (encoderId, timeslice) => {\n            const arrayBuffers = await encode(encoderId, timeslice);\n            if (nativeMediaRecorder.state === 'inactive') {\n                bufferedArrayBuffers.push(...arrayBuffers);\n            }\n            else {\n                dispatchDataAvailableEvent(arrayBuffers);\n                promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n            }\n        };\n        const stop = () => {\n            if (nativeMediaRecorder.state === 'inactive') {\n                return;\n            }\n            if (promisedPartialRecording !== null) {\n                promisedPartialRecording.catch(() => {\n                    /* @todo Only catch the errors caused by a duplicate call to encode. */\n                });\n                promisedPartialRecording = null;\n            }\n            stopRecording();\n            stopRecording = () => { }; // tslint:disable-line:no-empty\n            nativeMediaRecorder.stop();\n        };\n        nativeMediaRecorder.addEventListener('error', () => {\n            stop();\n            // Bug #3 & #4: Chrome throws an error event without any error.\n            eventTarget.dispatchEvent(new ErrorEvent('error', { error: createInvalidModificationError() }));\n        });\n        nativeMediaRecorder.addEventListener('start', () => eventTarget.dispatchEvent(new Event('start')));\n        return {\n            get mimeType() {\n                return mimeType;\n            },\n            get state() {\n                return nativeMediaRecorder.state;\n            },\n            pause() {\n                return nativeMediaRecorder.pause();\n            },\n            resume() {\n                return nativeMediaRecorder.resume();\n            },\n            start(timeslice) {\n                /*\n                 * Bug #6: Chrome will emit a blob without any data when asked to encode a MediaStream with a video track into an audio\n                 * codec.\n                 */\n                if (mediaStream.getVideoTracks().length > 0) {\n                    throw createNotSupportedError();\n                }\n                if (nativeMediaRecorder.state === 'inactive') {\n                    if (sampleRate === undefined) {\n                        throw new Error('The sampleRate is not defined.');\n                    }\n                    let isRecording = false;\n                    let isStopped = false;\n                    // Bug #9: Chrome sometimes fires more than one dataavailable event while being inactive.\n                    let pendingInvocations = 0;\n                    let promisedDataViewElementTypeEncoderIdAndPort = instantiate(mimeType, sampleRate);\n                    stopRecording = () => {\n                        isStopped = true;\n                    };\n                    const removeEventListener = on(nativeMediaRecorder, 'dataavailable')(({ data }) => {\n                        pendingInvocations += 1;\n                        promisedDataViewElementTypeEncoderIdAndPort = promisedDataViewElementTypeEncoderIdAndPort.then(async ({ dataView = null, elementType = null, encoderId, port }) => {\n                            const arrayBuffer = await data.arrayBuffer();\n                            pendingInvocations -= 1;\n                            const currentDataView = dataView === null\n                                ? new MultiBufferDataView([arrayBuffer])\n                                : new MultiBufferDataView([...dataView.buffers, arrayBuffer], dataView.byteOffset);\n                            if (!isRecording && nativeMediaRecorder.state === 'recording' && !isStopped) {\n                                const lengthAndValue = readVariableSizeInteger(currentDataView, 0);\n                                if (lengthAndValue === null) {\n                                    return { dataView: currentDataView, elementType, encoderId, port };\n                                }\n                                const { value } = lengthAndValue;\n                                if (value !== 172351395) {\n                                    return { dataView, elementType, encoderId, port };\n                                }\n                                isRecording = true;\n                            }\n                            const { currentElementType, offset, contents } = decodeWebMChunk(currentDataView, elementType, channelCount);\n                            const remainingDataView = offset < currentDataView.byteLength\n                                ? new MultiBufferDataView(currentDataView.buffers, currentDataView.byteOffset + offset)\n                                : null;\n                            contents.forEach((content) => port.postMessage(content, content.map(({ buffer }) => buffer)));\n                            if (pendingInvocations === 0 && (nativeMediaRecorder.state === 'inactive' || isStopped)) {\n                                encode(encoderId, null).then((arrayBuffers) => {\n                                    dispatchDataAvailableEvent([...bufferedArrayBuffers, ...arrayBuffers]);\n                                    bufferedArrayBuffers.length = 0;\n                                    eventTarget.dispatchEvent(new Event('stop'));\n                                });\n                                port.postMessage([]);\n                                port.close();\n                                removeEventListener();\n                            }\n                            return { dataView: remainingDataView, elementType: currentElementType, encoderId, port };\n                        });\n                    });\n                    if (timeslice !== undefined) {\n                        promisedDataViewElementTypeEncoderIdAndPort.then(({ encoderId }) => (promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice)));\n                    }\n                }\n                nativeMediaRecorder.start(100);\n            },\n            stop\n        };\n    };\n};\n//# sourceMappingURL=webm-pcm-media-recorder.js.map","export const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","export const readVariableSizeIntegerLength = (dataView, offset) => {\n    if (offset >= dataView.byteLength) {\n        return null;\n    }\n    const byte = dataView.getUint8(offset);\n    if (byte > 127) {\n        return 1;\n    }\n    if (byte > 63) {\n        return 2;\n    }\n    if (byte > 31) {\n        return 3;\n    }\n    if (byte > 15) {\n        return 4;\n    }\n    if (byte > 7) {\n        return 5;\n    }\n    if (byte > 3) {\n        return 6;\n    }\n    if (byte > 1) {\n        return 7;\n    }\n    if (byte > 0) {\n        return 8;\n    }\n    const length = readVariableSizeIntegerLength(dataView, offset + 1);\n    return length === null ? null : length + 8;\n};\n//# sourceMappingURL=read-variable-size-integer-length.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=wrap-event-listener.js.map","export {};\n//# sourceMappingURL=audio-nodes-and-encoder-id.js.map","export {};\n//# sourceMappingURL=blob-event-init.js.map","export {};\n//# sourceMappingURL=blob-event.js.map","export {};\n//# sourceMappingURL=event-target.js.map","export * from './audio-nodes-and-encoder-id';\nexport * from './blob-event';\nexport * from './blob-event-init';\nexport * from './event-target';\nexport * from './media-recorder';\nexport * from './media-recorder-constructor';\nexport * from './media-recorder-event-map';\nexport * from './media-recorder-options';\n//# sourceMappingURL=index.js.map","export {};\n//# sourceMappingURL=media-recorder-constructor.js.map","export {};\n//# sourceMappingURL=media-recorder-event-map.js.map","export {};\n//# sourceMappingURL=media-recorder-options.js.map","export {};\n//# sourceMappingURL=media-recorder.js.map","import { register as rgstr } from 'media-encoder-host';\nimport { createBlobEventFactory } from './factories/blob-event-factory';\nimport { createDecodeWebMChunk } from './factories/decode-web-m-chunk';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createEventTargetFactory } from './factories/event-target-factory';\nimport { createInvalidModificationError } from './factories/invalid-modification-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaRecorderConstructor } from './factories/media-recorder-constructor';\nimport { createNativeBlobEventConstructor } from './factories/native-blob-event-constructor';\nimport { createNativeMediaRecorderFactory } from './factories/native-media-recorder';\nimport { createNativeMediaRecorderConstructor } from './factories/native-media-recorder-constructor';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createReadElementContent } from './factories/read-element-content';\nimport { createReadElementType } from './factories/read-element-type';\nimport { createReadVariableSizeInteger } from './factories/read-variable-size-integer';\nimport { createWebAudioMediaRecorderFactory } from './factories/web-audio-media-recorder';\nimport { createWebmPcmMediaRecorderFactory } from './factories/webm-pcm-media-recorder';\nimport { createWindow } from './factories/window';\nimport { readVariableSizeIntegerLength } from './functions/read-variable-size-integer-length';\nimport { wrapEventListener } from './functions/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst encoderRegexes = [];\nconst window = createWindow();\nconst nativeBlobEventConstructor = createNativeBlobEventConstructor(window);\nconst createBlobEvent = createBlobEventFactory(nativeBlobEventConstructor);\nconst createWebAudioMediaRecorder = createWebAudioMediaRecorderFactory(createBlobEvent, createInvalidModificationError, createInvalidStateError, createNotSupportedError);\nconst readVariableSizeInteger = createReadVariableSizeInteger(readVariableSizeIntegerLength);\nconst readElementContent = createReadElementContent(readVariableSizeInteger);\nconst readElementType = createReadElementType(readVariableSizeInteger);\nconst decodeWebMChunk = createDecodeWebMChunk(readElementContent, readElementType);\nconst createWebmPcmMediaRecorder = createWebmPcmMediaRecorderFactory(createBlobEvent, createInvalidModificationError, createNotSupportedError, decodeWebMChunk, readVariableSizeInteger);\nconst createEventTarget = createEventTargetFactory(window);\nconst nativeMediaRecorderConstructor = createNativeMediaRecorderConstructor(window);\nconst createNativeMediaRecorder = createNativeMediaRecorderFactory(createInvalidModificationError, createNotSupportedError);\nconst mediaRecorderConstructor = createMediaRecorderConstructor(createNativeMediaRecorder, createNotSupportedError, createWebAudioMediaRecorder, createWebmPcmMediaRecorder, encoderRegexes, createEventTargetConstructor(createEventTarget, wrapEventListener), nativeMediaRecorderConstructor);\nexport { mediaRecorderConstructor as MediaRecorder };\nexport const isSupported = () => createIsSupportedPromise(window);\nexport const register = async (port) => {\n    encoderRegexes.push(await rgstr(port));\n};\n//# sourceMappingURL=module.js.map","export {};\n//# sourceMappingURL=blob-event-constructor.js.map","export {};\n//# sourceMappingURL=blob-event-factory-factory.js.map","export {};\n//# sourceMappingURL=blob-event-factory.js.map","export {};\n//# sourceMappingURL=blob-event-handler.js.map","export {};\n//# sourceMappingURL=decode-web-m-chunk-factory.js.map","export {};\n//# sourceMappingURL=decode-web-m-chunk-function.js.map","export {};\n//# sourceMappingURL=element-type.js.map","export {};\n//# sourceMappingURL=error-event-handler.js.map","export {};\n//# sourceMappingURL=event-handler.js.map","export {};\n//# sourceMappingURL=event-target-constructor-factory.js.map","export {};\n//# sourceMappingURL=event-target-constructor.js.map","export {};\n//# sourceMappingURL=event-target-factory-factory.js.map","export {};\n//# sourceMappingURL=event-target-factory.js.map","export * from './blob-event-constructor';\nexport * from './blob-event-handler';\nexport * from './blob-event-factory';\nexport * from './blob-event-factory-factory';\nexport * from './decode-web-m-chunk-factory';\nexport * from './decode-web-m-chunk-function';\nexport * from './element-type';\nexport * from './error-event-handler';\nexport * from './event-handler';\nexport * from './event-target-constructor';\nexport * from './event-target-constructor-factory';\nexport * from './event-target-factory';\nexport * from './event-target-factory-factory';\nexport * from './invalid-modification-error-factory';\nexport * from './invalid-state-error-factory';\nexport * from './is-supported-promise-factory';\nexport * from './media-recorder-constructor-factory';\nexport * from './native-blob-event-factory';\nexport * from './native-event-target';\nexport * from './native-media-recorder-constructor-factory';\nexport * from './native-media-recorder-factory';\nexport * from './native-media-recorder-factory-factory';\nexport * from './not-supported-error-factory';\nexport * from './promised-data-view-element-type-encoder-id-and-port';\nexport * from './read-element-content-factory';\nexport * from './read-element-content-function';\nexport * from './read-element-type-factory';\nexport * from './read-element-type-function';\nexport * from './read-variable-size-integer-factory';\nexport * from './read-variable-size-integer-function';\nexport * from './read-variable-size-integer-length-function';\nexport * from './recording-state';\nexport * from './web-audio-media-recorder-factory';\nexport * from './web-audio-media-recorder-factory-factory';\nexport * from './webm-pcm-media-recorder-factory';\nexport * from './webm-pcm-media-recorder-factory-factory';\nexport * from './window';\nexport * from './window-factory';\nexport * from './wrap-event-listener-function';\n//# sourceMappingURL=index.js.map","export {};\n//# sourceMappingURL=invalid-modification-error-factory.js.map","export {};\n//# sourceMappingURL=invalid-state-error-factory.js.map","export {};\n//# sourceMappingURL=is-supported-promise-factory.js.map","export {};\n//# sourceMappingURL=media-recorder-constructor-factory.js.map","export {};\n//# sourceMappingURL=native-blob-event-factory.js.map","export {};\n//# sourceMappingURL=native-event-target.js.map","export {};\n//# sourceMappingURL=native-media-recorder-constructor-factory.js.map","export {};\n//# sourceMappingURL=native-media-recorder-factory-factory.js.map","export {};\n//# sourceMappingURL=native-media-recorder-factory.js.map","export {};\n//# sourceMappingURL=not-supported-error-factory.js.map","export {};\n//# sourceMappingURL=promised-data-view-element-type-encoder-id-and-port.js.map","export {};\n//# sourceMappingURL=read-element-content-factory.js.map","export {};\n//# sourceMappingURL=read-element-content-function.js.map","export {};\n//# sourceMappingURL=read-element-type-factory.js.map","export {};\n//# sourceMappingURL=read-element-type-function.js.map","export {};\n//# sourceMappingURL=read-variable-size-integer-factory.js.map","export {};\n//# sourceMappingURL=read-variable-size-integer-function.js.map","export {};\n//# sourceMappingURL=read-variable-size-integer-length-function.js.map","export {};\n//# sourceMappingURL=recording-state.js.map","export {};\n//# sourceMappingURL=web-audio-media-recorder-factory-factory.js.map","export {};\n//# sourceMappingURL=web-audio-media-recorder-factory.js.map","export {};\n//# sourceMappingURL=webm-pcm-media-recorder-factory-factory.js.map","export {};\n//# sourceMappingURL=webm-pcm-media-recorder-factory.js.map","export {};\n//# sourceMappingURL=window-factory.js.map","export {};\n//# sourceMappingURL=window.js.map","export {};\n//# sourceMappingURL=wrap-event-listener-function.js.map","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.fastUniqueNumbers = {}));\n})(this, (function (exports) { 'use strict';\n\n    var createAddUniqueNumber = function createAddUniqueNumber(generateUniqueNumber) {\n      return function (set) {\n        var number = generateUniqueNumber(set);\n        set.add(number);\n        return number;\n      };\n    };\n\n    var createCache = function createCache(lastNumberWeakMap) {\n      return function (collection, nextNumber) {\n        lastNumberWeakMap.set(collection, nextNumber);\n        return nextNumber;\n      };\n    };\n\n    /*\n     * The value of the constant Number.MAX_SAFE_INTEGER equals (2 ** 53 - 1) but it\n     * is fairly new.\n     */\n    var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER === undefined ? 9007199254740991 : Number.MAX_SAFE_INTEGER;\n    var TWO_TO_THE_POWER_OF_TWENTY_NINE = 536870912;\n    var TWO_TO_THE_POWER_OF_THIRTY = TWO_TO_THE_POWER_OF_TWENTY_NINE * 2;\n    var createGenerateUniqueNumber = function createGenerateUniqueNumber(cache, lastNumberWeakMap) {\n      return function (collection) {\n        var lastNumber = lastNumberWeakMap.get(collection);\n        /*\n         * Let's try the cheapest algorithm first. It might fail to produce a new\n         * number, but it is so cheap that it is okay to take the risk. Just\n         * increase the last number by one or reset it to 0 if we reached the upper\n         * bound of SMIs (which stands for small integers). When the last number is\n         * unknown it is assumed that the collection contains zero based consecutive\n         * numbers.\n         */\n        var nextNumber = lastNumber === undefined ? collection.size : lastNumber < TWO_TO_THE_POWER_OF_THIRTY ? lastNumber + 1 : 0;\n        if (!collection.has(nextNumber)) {\n          return cache(collection, nextNumber);\n        }\n        /*\n         * If there are less than half of 2 ** 30 numbers stored in the collection,\n         * the chance to generate a new random number in the range from 0 to 2 ** 30\n         * is at least 50%. It's benifitial to use only SMIs because they perform\n         * much better in any environment based on V8.\n         */\n        if (collection.size < TWO_TO_THE_POWER_OF_TWENTY_NINE) {\n          while (collection.has(nextNumber)) {\n            nextNumber = Math.floor(Math.random() * TWO_TO_THE_POWER_OF_THIRTY);\n          }\n          return cache(collection, nextNumber);\n        }\n        // Quickly check if there is a theoretical chance to generate a new number.\n        if (collection.size > MAX_SAFE_INTEGER) {\n          throw new Error('Congratulations, you created a collection of unique numbers which uses all available integers!');\n        }\n        // Otherwise use the full scale of safely usable integers.\n        while (collection.has(nextNumber)) {\n          nextNumber = Math.floor(Math.random() * MAX_SAFE_INTEGER);\n        }\n        return cache(collection, nextNumber);\n      };\n    };\n\n    var LAST_NUMBER_WEAK_MAP = new WeakMap();\n    var cache = createCache(LAST_NUMBER_WEAK_MAP);\n    var generateUniqueNumber = createGenerateUniqueNumber(cache, LAST_NUMBER_WEAK_MAP);\n    var addUniqueNumber = createAddUniqueNumber(generateUniqueNumber);\n\n    exports.addUniqueNumber = addUniqueNumber;\n    exports.generateUniqueNumber = generateUniqueNumber;\n\n}));\n","/*\n * indefinite-article.js v1.0.0, 12-18-2011\n *\n * @author: Rodrigo Neri (@rigoneri)\n *\n * (The MIT License)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar indefiniteArticle = function(phrase) {\n    var i, word;\n\n    // Getting the first word\n    var match = /\\w+/.exec(phrase);\n    if (match)\n        word = match[0];\n    else\n        return \"an\";\n\n    var l_word = word.toLowerCase();\n    // Specific start of words that should be preceeded by 'an'\n    var alt_cases = [\"honest\", \"hour\", \"hono\"];\n    for (i in alt_cases) {\n        if (l_word.indexOf(alt_cases[i]) == 0)\n            return \"an\";\n    }\n\n    // Single letter word which should be preceeded by 'an'\n    if (l_word.length == 1) {\n        if (\"aedhilmnorsx\".indexOf(l_word) >= 0)\n            return \"an\";\n        else\n            return \"a\";\n    }\n\n    // Capital words which should likely be preceeded by 'an'\n    if (word.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/)) {\n        return \"an\";\n    }\n\n    // Special cases where a word that begins with a vowel should be preceeded by 'a'\n    var regexes = [/^e[uw]/, /^onc?e\\b/, /^uni([^nmd]|mo)/, /^u[bcfhjkqrst][aeiou]/];\n    for (i = 0; i < regexes.length; i++) {\n        if (l_word.match(regexes[i]))\n            return \"a\"\n    }\n\n    // Special capital words (UK, UN)\n    if (word.match(/^U[NK][AIEO]/)) {\n        return \"a\";\n    }\n    else if (word == word.toUpperCase()) {\n        if (\"aedhilmnorsx\".indexOf(l_word[0]) >= 0)\n            return \"an\";\n        else\n            return \"a\";\n    }\n\n    // Basic method of words that begin with a vowel being preceeded by 'an'\n    if (\"aeiou\".indexOf(l_word[0]) >= 0)\n        return \"an\";\n\n    // Instances where y follwed by specific letters is preceeded by 'an'\n    if (l_word.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/))\n        return \"an\";\n\n    return \"a\";\n};\n\nif ((typeof module !== 'undefined') && (typeof module.exports !== 'undefined')) {\n    module.exports = indefiniteArticle;\n} else {\n    window.indefiniteArticle = indefiniteArticle;\n}\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase().trim();\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({\n      color = \"currentColor\",\n      size = 24,\n      strokeWidth = 2,\n      absoluteStrokeWidth,\n      className = \"\",\n      children,\n      ...rest\n    }, ref) => {\n      return createElement(\n        \"svg\",\n        {\n          ref,\n          ...defaultAttributes,\n          width: size,\n          height: size,\n          stroke: color,\n          strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n          className: [\"lucide\", `lucide-${toKebabCase(iconName)}`, className].join(\" \"),\n          ...rest\n        },\n        [\n          ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n          ...Array.isArray(children) ? children : [children]\n        ]\n      );\n    }\n  );\n  Component.displayName = `${iconName}`;\n  return Component;\n};\n\nexport { createLucideIcon as default, toKebabCase };\n//# sourceMappingURL=createLucideIcon.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Heart = createLucideIcon(\"Heart\", [\n  [\n    \"path\",\n    {\n      d: \"M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z\",\n      key: \"c3ymky\"\n    }\n  ]\n]);\n\nexport { Heart as default };\n//# sourceMappingURL=heart.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Loader = createLucideIcon(\"Loader\", [\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"2\", y2: \"6\", key: \"gza1u7\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"18\", y2: \"22\", key: \"1qhbu9\" }],\n  [\"line\", { x1: \"4.93\", x2: \"7.76\", y1: \"4.93\", y2: \"7.76\", key: \"xae44r\" }],\n  [\"line\", { x1: \"16.24\", x2: \"19.07\", y1: \"16.24\", y2: \"19.07\", key: \"bxnmvf\" }],\n  [\"line\", { x1: \"2\", x2: \"6\", y1: \"12\", y2: \"12\", key: \"89khin\" }],\n  [\"line\", { x1: \"18\", x2: \"22\", y1: \"12\", y2: \"12\", key: \"pb8tfm\" }],\n  [\"line\", { x1: \"4.93\", x2: \"7.76\", y1: \"19.07\", y2: \"16.24\", key: \"1uxjnu\" }],\n  [\"line\", { x1: \"16.24\", x2: \"19.07\", y1: \"7.76\", y2: \"4.93\", key: \"6duxfx\" }]\n]);\n\nexport { Loader as default };\n//# sourceMappingURL=loader.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Lock = createLucideIcon(\"Lock\", [\n  [\"rect\", { width: \"18\", height: \"11\", x: \"3\", y: \"11\", rx: \"2\", ry: \"2\", key: \"1w4ew1\" }],\n  [\"path\", { d: \"M7 11V7a5 5 0 0 1 10 0v4\", key: \"fwvmzm\" }]\n]);\n\nexport { Lock as default };\n//# sourceMappingURL=lock.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Mail = createLucideIcon(\"Mail\", [\n  [\"rect\", { width: \"20\", height: \"16\", x: \"2\", y: \"4\", rx: \"2\", key: \"18n3k1\" }],\n  [\"path\", { d: \"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\", key: \"1ocrg3\" }]\n]);\n\nexport { Mail as default };\n//# sourceMappingURL=mail.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Mic = createLucideIcon(\"Mic\", [\n  [\"path\", { d: \"M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z\", key: \"131961\" }],\n  [\"path\", { d: \"M19 10v2a7 7 0 0 1-14 0v-2\", key: \"1vc78b\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"19\", y2: \"22\", key: \"x3vr5v\" }]\n]);\n\nexport { Mic as default };\n//# sourceMappingURL=mic.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Square = createLucideIcon(\"Square\", [\n  [\"rect\", { width: \"18\", height: \"18\", x: \"3\", y: \"3\", rx: \"2\", key: \"afitv7\" }]\n]);\n\nexport { Square as default };\n//# sourceMappingURL=square.js.map\n","export * from './media-encoder-host-broker-definition';\n//# sourceMappingURL=index.js.map","export {};\n//# sourceMappingURL=media-encoder-host-broker-definition.js.map","import { createBroker } from 'broker-factory';\nimport { addUniqueNumber } from 'fast-unique-numbers';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst encoderIds = new Set();\nexport const wrap = createBroker({\n    deregister: ({ call }) => {\n        return (port) => {\n            return call('deregister', { port }, [port]);\n        };\n    },\n    encode: ({ call }) => {\n        return async (encoderId, timeslice) => {\n            const arrayBuffers = await call('encode', { encoderId, timeslice });\n            encoderIds.delete(encoderId);\n            return arrayBuffers;\n        };\n    },\n    instantiate: ({ call }) => {\n        return async (mimeType, sampleRate) => {\n            const encoderId = addUniqueNumber(encoderIds);\n            const port = await call('instantiate', { encoderId, mimeType, sampleRate });\n            return { encoderId, port };\n        };\n    },\n    register: ({ call }) => {\n        return (port) => {\n            return call('register', { port }, [port]);\n        };\n    }\n});\nexport const load = (url) => {\n    const worker = new Worker(url);\n    return wrap(worker);\n};\n//# sourceMappingURL=module.js.map","export * from './media-encoder-host-broker-loader';\nexport * from './media-encoder-host-broker-wrapper';\n//# sourceMappingURL=index.js.map","export {};\n//# sourceMappingURL=media-encoder-host-broker-loader.js.map","export {};\n//# sourceMappingURL=media-encoder-host-broker-wrapper.js.map","import { load as loadWorker } from 'media-encoder-host-broker';\nimport { worker } from './worker/worker';\nconst blob = new Blob([worker], { type: 'application/javascript; charset=utf-8' });\nconst url = URL.createObjectURL(blob);\nconst mediaEncoderHost = loadWorker(url);\nexport const connect = mediaEncoderHost.connect;\nexport const deregister = mediaEncoderHost.deregister;\nexport const disconnect = mediaEncoderHost.disconnect;\nexport const encode = mediaEncoderHost.encode;\nexport const instantiate = mediaEncoderHost.instantiate;\nexport const isSupported = mediaEncoderHost.isSupported;\nexport const register = mediaEncoderHost.register;\nURL.revokeObjectURL(url);\n//# sourceMappingURL=module.js.map","// This is the minified and stringified code of the media-encoder-host-worker package.\nexport const worker = `(()=>{var e={455:function(e,t){!function(e){\"use strict\";var t=function(e){return function(t){var r=e(t);return t.add(r),r}},r=function(e){return function(t,r){return e.set(t,r),r}},n=void 0===Number.MAX_SAFE_INTEGER?9007199254740991:Number.MAX_SAFE_INTEGER,o=536870912,s=2*o,a=function(e,t){return function(r){var a=t.get(r),i=void 0===a?r.size:a<s?a+1:0;if(!r.has(i))return e(r,i);if(r.size<o){for(;r.has(i);)i=Math.floor(Math.random()*s);return e(r,i)}if(r.size>n)throw new Error(\"Congratulations, you created a collection of unique numbers which uses all available integers!\");for(;r.has(i);)i=Math.floor(Math.random()*n);return e(r,i)}},i=new WeakMap,c=r(i),l=a(c,i),d=t(l);e.addUniqueNumber=d,e.generateUniqueNumber=l}(t)}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var s=t[n]={exports:{}};return e[n].call(s.exports,s,s.exports,r),s.exports}(()=>{\"use strict\";var e=r(455);const t=new WeakMap,n=new WeakMap,o=(r=>{const o=(s=r,{...s,connect:e=>{let{call:r}=e;return async()=>{const{port1:e,port2:n}=new MessageChannel,o=await r(\"connect\",{port:e},[e]);return t.set(n,o),n}},disconnect:e=>{let{call:r}=e;return async e=>{const n=t.get(e);if(void 0===n)throw new Error(\"The given port is not connected.\");await r(\"disconnect\",{portId:n})}},isSupported:e=>{let{call:t}=e;return()=>t(\"isSupported\")}});var s;return t=>{const r=(e=>{if(n.has(e))return n.get(e);const t=new Map;return n.set(e,t),t})(t);t.addEventListener(\"message\",(e=>{let{data:t}=e;const{id:n}=t;if(null!==n&&r.has(n)){const{reject:e,resolve:o}=r.get(n);r.delete(n),void 0===t.error?o(t.result):e(new Error(t.error.message))}})),(e=>\"function\"==typeof e.start)(t)&&t.start();const s=function(n){let o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return new Promise(((a,i)=>{const c=(0,e.generateUniqueNumber)(r);r.set(c,{reject:i,resolve:a}),null===o?t.postMessage({id:c,method:n},s):t.postMessage({id:c,method:n,params:o},s)}))},a=function(e,r){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];t.postMessage({id:null,method:e,params:r},n)};let i={};for(const[e,t]of Object.entries(o))i={...i,[e]:t({call:s,notify:a})};return{...i}}})({characterize:e=>{let{call:t}=e;return()=>t(\"characterize\")},encode:e=>{let{call:t}=e;return(e,r)=>t(\"encode\",{recordingId:e,timeslice:r})},record:e=>{let{call:t}=e;return async(e,r,n)=>{await t(\"record\",{recordingId:e,sampleRate:r,typedArrays:n},n.map((e=>{let{buffer:t}=e;return t})))}}}),s=-32603,a=-32602,i=-32601,c=(e,t)=>Object.assign(new Error(e),{status:t}),l=e=>c('The handler of the method called \"'.concat(e,'\" returned an unexpected result.'),s),d=(e,t)=>async r=>{let{data:{id:n,method:o,params:a}}=r;const d=t[o];try{if(void 0===d)throw(e=>c('The requested method called \"'.concat(e,'\" is not supported.'),i))(o);const t=void 0===a?d():d(a);if(void 0===t)throw(e=>c('The handler of the method called \"'.concat(e,'\" returned no required result.'),s))(o);const r=t instanceof Promise?await t:t;if(null===n){if(void 0!==r.result)throw l(o)}else{if(void 0===r.result)throw l(o);const{result:t,transferables:s=[]}=r;e.postMessage({id:n,result:t},s)}}catch(t){const{message:r,status:o=-32603}=t;e.postMessage({error:{code:o,message:r},id:n})}},u=new Map,h=(t,r,n)=>({...r,connect:n=>{let{port:o}=n;o.start();const s=t(o,r),a=(0,e.generateUniqueNumber)(u);return u.set(a,(()=>{s(),o.close(),u.delete(a)})),{result:a}},disconnect:e=>{let{portId:t}=e;const r=u.get(t);if(void 0===r)throw(e=>c('The specified parameter called \"portId\" with the given value \"'.concat(e,'\" does not identify a port connected to this worker.'),a))(t);return r(),{result:null}},isSupported:async()=>{if(await new Promise((e=>{const t=new ArrayBuffer(0),{port1:r,port2:n}=new MessageChannel;r.onmessage=t=>{let{data:r}=t;return e(null!==r)},n.postMessage(t,[t])}))){const e=n();return{result:e instanceof Promise?await e:e}}return{result:!1}}}),f=function(e,t){const r=h(f,t,arguments.length>2&&void 0!==arguments[2]?arguments[2]:()=>!0),n=d(e,r);return e.addEventListener(\"message\",n),()=>e.removeEventListener(\"message\",n)},p=e=>{e.onmessage=null,e.close()},w=new Map,m=new WeakMap,g=((e,t)=>r=>{const n=t.get(r);if(void 0===n)throw new Error(\"There is no encoder stored which wraps this port.\");e.delete(n),t.delete(r)})(w,m),v=new Map,y=(e=>t=>{const r=e.get(t);if(void 0===r)throw new Error(\"There was no instance of an encoder stored with the given id.\");return r})(v),M=((e,t)=>r=>{const n=t(r);return e.delete(r),n})(v,y),E=((e,t)=>r=>{const[n,o,s,a]=t(r);return s?new Promise((t=>{o.onmessage=s=>{let{data:i}=s;0===i.length?(e(o),t(n.encode(r,null))):n.record(r,a,i)}})):n.encode(r,null)})(p,M),b=(e=>t=>{for(const[r,n]of Array.from(e.values()))if(r.test(t))return n;throw new Error(\"There is no encoder registered which could handle the given mimeType.\")})(w),T=((e,t,r)=>(n,o,s)=>{if(t.has(n))throw new Error('There is already an encoder registered with an id called \"'.concat(n,'\".'));const a=r(o),{port1:i,port2:c}=new MessageChannel,l=[a,i,!0,s];return t.set(n,l),i.onmessage=t=>{let{data:r}=t;0===r.length?(e(i),l[2]=!1):a.record(n,s,r.map((e=>\"number\"==typeof e?new Float32Array(e):e)))},c})(p,v,b),I=((e,t,r)=>async n=>{const o=r(n),s=await o.characterize(),a=s.toString();if(e.has(a)||t.has(n))throw new Error(\"There is already an encoder stored which handles exactly the same mime types.\");return e.set(a,[s,o]),t.set(n,a),s})(w,m,o),A=(e=>(t,r)=>{const[n]=e(t);return n.encode(t,r)})(y);f(self,{deregister:async e=>{let{port:t}=e;return{result:g(t)}},encode:async e=>{let{encoderId:t,timeslice:r}=e;const n=null===r?await E(t):await A(t,r);return{result:n,transferables:n}},instantiate:e=>{let{encoderId:t,mimeType:r,sampleRate:n}=e;const o=T(t,r,n);return{result:o,transferables:[o]}},register:async e=>{let{port:t}=e;return{result:await I(t)}}})})()})();`; // tslint:disable-line:max-line-length\n//# sourceMappingURL=worker.js.map","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.multiBufferDataView = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n})(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);\n    var _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);\n    var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);\n\n    function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n    function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n    function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n    var MultiBufferDataView = /*#__PURE__*/function () {\n      function MultiBufferDataView(buffers) {\n        var byteOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var byteLength = arguments.length > 2 ? arguments[2] : undefined;\n        _classCallCheck__default[\"default\"](this, MultiBufferDataView);\n        if (byteOffset < 0 || byteLength !== undefined && byteLength < 0) {\n          throw new RangeError();\n        }\n        var availableBytes = buffers.reduce(function (length, buffer) {\n          return length + buffer.byteLength;\n        }, 0);\n        if (byteOffset > availableBytes || byteLength !== undefined && byteOffset + byteLength > availableBytes) {\n          throw new RangeError();\n        }\n        var dataViews = [];\n        var effectiveByteLength = byteLength === undefined ? availableBytes - byteOffset : byteLength;\n        var truncatedBuffers = [];\n        var consumedByteLength = 0;\n        var truncatedByteOffset = byteOffset;\n        var _iterator = _createForOfIteratorHelper(buffers),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var buffer = _step.value;\n            if (truncatedBuffers.length === 0) {\n              if (buffer.byteLength > truncatedByteOffset) {\n                consumedByteLength = buffer.byteLength - truncatedByteOffset;\n                var byteLengthOfDataView = consumedByteLength > effectiveByteLength ? effectiveByteLength : consumedByteLength;\n                dataViews.push(new DataView(buffer, truncatedByteOffset, byteLengthOfDataView));\n                truncatedBuffers.push(buffer);\n              } else {\n                truncatedByteOffset -= buffer.byteLength;\n              }\n            } else if (consumedByteLength < effectiveByteLength) {\n              consumedByteLength += buffer.byteLength;\n              var _byteLengthOfDataView = consumedByteLength > effectiveByteLength ? buffer.byteLength - consumedByteLength + effectiveByteLength : buffer.byteLength;\n              dataViews.push(new DataView(buffer, 0, _byteLengthOfDataView));\n              truncatedBuffers.push(buffer);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        this._buffers = truncatedBuffers;\n        this._byteLength = effectiveByteLength;\n        this._byteOffset = truncatedByteOffset;\n        this._dataViews = dataViews;\n        this._internalBuffer = new DataView(new ArrayBuffer(8));\n      }\n      _createClass__default[\"default\"](MultiBufferDataView, [{\n        key: \"buffers\",\n        get: function get() {\n          return this._buffers;\n        }\n      }, {\n        key: \"byteLength\",\n        get: function get() {\n          return this._byteLength;\n        }\n      }, {\n        key: \"byteOffset\",\n        get: function get() {\n          return this._byteOffset;\n        }\n      }, {\n        key: \"getFloat32\",\n        value: function getFloat32(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n          return this._internalBuffer.getFloat32(0, littleEndian);\n        }\n      }, {\n        key: \"getFloat64\",\n        value: function getFloat64(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n          this._internalBuffer.setUint8(4, this.getUint8(byteOffset + 4));\n          this._internalBuffer.setUint8(5, this.getUint8(byteOffset + 5));\n          this._internalBuffer.setUint8(6, this.getUint8(byteOffset + 6));\n          this._internalBuffer.setUint8(7, this.getUint8(byteOffset + 7));\n          return this._internalBuffer.getFloat64(0, littleEndian);\n        }\n      }, {\n        key: \"getInt16\",\n        value: function getInt16(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          return this._internalBuffer.getInt16(0, littleEndian);\n        }\n      }, {\n        key: \"getInt32\",\n        value: function getInt32(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n          return this._internalBuffer.getInt32(0, littleEndian);\n        }\n      }, {\n        key: \"getInt8\",\n        value: function getInt8(byteOffset) {\n          var _this$_findDataViewWi = this._findDataViewWithOffset(byteOffset),\n            _this$_findDataViewWi2 = _slicedToArray__default[\"default\"](_this$_findDataViewWi, 2),\n            dataView = _this$_findDataViewWi2[0],\n            byteOffsetOfDataView = _this$_findDataViewWi2[1];\n          return dataView.getInt8(byteOffset - byteOffsetOfDataView);\n        }\n      }, {\n        key: \"getUint16\",\n        value: function getUint16(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          return this._internalBuffer.getUint16(0, littleEndian);\n        }\n      }, {\n        key: \"getUint32\",\n        value: function getUint32(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n          return this._internalBuffer.getUint32(0, littleEndian);\n        }\n      }, {\n        key: \"getUint8\",\n        value: function getUint8(byteOffset) {\n          var _this$_findDataViewWi3 = this._findDataViewWithOffset(byteOffset),\n            _this$_findDataViewWi4 = _slicedToArray__default[\"default\"](_this$_findDataViewWi3, 2),\n            dataView = _this$_findDataViewWi4[0],\n            byteOffsetOfDataView = _this$_findDataViewWi4[1];\n          return dataView.getUint8(byteOffset - byteOffsetOfDataView);\n        }\n      }, {\n        key: \"setFloat32\",\n        value: function setFloat32(byteOffset, value, littleEndian) {\n          this._internalBuffer.setFloat32(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        }\n      }, {\n        key: \"setFloat64\",\n        value: function setFloat64(byteOffset, value, littleEndian) {\n          this._internalBuffer.setFloat64(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n          this.setUint8(byteOffset + 4, this._internalBuffer.getUint8(4));\n          this.setUint8(byteOffset + 5, this._internalBuffer.getUint8(5));\n          this.setUint8(byteOffset + 6, this._internalBuffer.getUint8(6));\n          this.setUint8(byteOffset + 7, this._internalBuffer.getUint8(7));\n        }\n      }, {\n        key: \"setInt16\",\n        value: function setInt16(byteOffset, value, littleEndian) {\n          this._internalBuffer.setInt16(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        }\n      }, {\n        key: \"setInt32\",\n        value: function setInt32(byteOffset, value, littleEndian) {\n          this._internalBuffer.setInt32(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        }\n      }, {\n        key: \"setInt8\",\n        value: function setInt8(byteOffset, value) {\n          var _this$_findDataViewWi5 = this._findDataViewWithOffset(byteOffset),\n            _this$_findDataViewWi6 = _slicedToArray__default[\"default\"](_this$_findDataViewWi5, 2),\n            dataView = _this$_findDataViewWi6[0],\n            byteOffsetOfDataView = _this$_findDataViewWi6[1];\n          dataView.setInt8(byteOffset - byteOffsetOfDataView, value);\n        }\n      }, {\n        key: \"setUint16\",\n        value: function setUint16(byteOffset, value, littleEndian) {\n          this._internalBuffer.setUint16(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        }\n      }, {\n        key: \"setUint32\",\n        value: function setUint32(byteOffset, value, littleEndian) {\n          this._internalBuffer.setUint32(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        }\n      }, {\n        key: \"setUint8\",\n        value: function setUint8(byteOffset, value) {\n          var _this$_findDataViewWi7 = this._findDataViewWithOffset(byteOffset),\n            _this$_findDataViewWi8 = _slicedToArray__default[\"default\"](_this$_findDataViewWi7, 2),\n            dataView = _this$_findDataViewWi8[0],\n            byteOffsetOfDataView = _this$_findDataViewWi8[1];\n          dataView.setUint8(byteOffset - byteOffsetOfDataView, value);\n        }\n      }, {\n        key: \"_findDataViewWithOffset\",\n        value: function _findDataViewWithOffset(byteOffset) {\n          var byteOffsetOfDataView = 0;\n          var _iterator2 = _createForOfIteratorHelper(this._dataViews),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var dataView = _step2.value;\n              var byteOffsetOfNextDataView = byteOffsetOfDataView + dataView.byteLength;\n              if (byteOffset >= byteOffsetOfDataView && byteOffset < byteOffsetOfNextDataView) {\n                return [dataView, byteOffsetOfDataView];\n              }\n              byteOffsetOfDataView = byteOffsetOfNextDataView;\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n          throw new RangeError();\n        }\n      }]);\n      return MultiBufferDataView;\n    }();\n\n    exports.MultiBufferDataView = MultiBufferDataView;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","module.exports = require(\"./lib\");\n","\"use strict\";var __awaiter=(this&&this.__awaiter)||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}\nreturn new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}\nfunction rejected(value){try{step(generator[\"throw\"](value));}catch(e){reject(e);}}\nfunction step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}\nstep((generator=generator.apply(thisArg,_arguments||[])).next());});};var __generator=(this&&this.__generator)||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1];},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),\"throw\":verb(1),\"return\":verb(2)},typeof Symbol===\"function\"&&(g[Symbol.iterator]=function(){return this;}),g;function verb(n){return function(v){return step([n,v]);};}\nfunction step(op){if(f)throw new TypeError(\"Generator is already executing.\");while(_)try{if(f=1,y&&(t=op[0]&2?y[\"return\"]:op[0]?y[\"throw\"]||((t=y[\"return\"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue;}\nif(op[0]===3&&(!t||(op[1]>t[0]&&op[1]<t[3]))){_.label=op[1];break;}\nif(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break;}\nif(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break;}\nif(t[2])_.ops.pop();_.trys.pop();continue;}\nop=body.call(thisArg,_);}catch(e){op=[6,e];y=0;}finally{f=t=0;}\nif(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true};}};Object.defineProperty(exports,\"__esModule\",{value:true});exports.ReactMediaRecorder=exports.useReactMediaRecorder=exports.RecorderErrors=void 0;var extendable_media_recorder_1=require(\"extendable-media-recorder\");var react_1=require(\"react\");var extendable_media_recorder_wav_encoder_1=require(\"extendable-media-recorder-wav-encoder\");var RecorderErrors;(function(RecorderErrors){RecorderErrors[\"AbortError\"]=\"media_aborted\";RecorderErrors[\"NotAllowedError\"]=\"permission_denied\";RecorderErrors[\"NotFoundError\"]=\"no_specified_media_found\";RecorderErrors[\"NotReadableError\"]=\"media_in_use\";RecorderErrors[\"OverconstrainedError\"]=\"invalid_media_constraints\";RecorderErrors[\"TypeError\"]=\"no_constraints\";RecorderErrors[\"NONE\"]=\"\";RecorderErrors[\"NO_RECORDER\"]=\"recorder_error\";})(RecorderErrors=exports.RecorderErrors||(exports.RecorderErrors={}));function useReactMediaRecorder(_a){var _this=this;var _b=_a.audio,audio=_b===void 0?true:_b,_c=_a.video,video=_c===void 0?false:_c,_d=_a.selfBrowserSurface,selfBrowserSurface=_d===void 0?undefined:_d,_e=_a.onStop,onStop=_e===void 0?function(){return null;}:_e,_f=_a.onStart,onStart=_f===void 0?function(){return null;}:_f,blobPropertyBag=_a.blobPropertyBag,_g=_a.screen,screen=_g===void 0?false:_g,_h=_a.mediaRecorderOptions,mediaRecorderOptions=_h===void 0?undefined:_h,_j=_a.customMediaStream,customMediaStream=_j===void 0?null:_j,_k=_a.stopStreamsOnStop,stopStreamsOnStop=_k===void 0?true:_k,_l=_a.askPermissionOnMount,askPermissionOnMount=_l===void 0?false:_l;var mediaRecorder=(0,react_1.useRef)(null);var mediaChunks=(0,react_1.useRef)([]);var mediaStream=(0,react_1.useRef)(null);var _m=(0,react_1.useState)(\"idle\"),status=_m[0],setStatus=_m[1];var _o=(0,react_1.useState)(false),isAudioMuted=_o[0],setIsAudioMuted=_o[1];var _p=(0,react_1.useState)(undefined),mediaBlobUrl=_p[0],setMediaBlobUrl=_p[1];var _q=(0,react_1.useState)(\"NONE\"),error=_q[0],setError=_q[1];var _r=(0,react_1.useState)(false),init=_r[0],setInit=_r[1];(0,react_1.useEffect)(function(){if(init){return;}\nvar setup=function(){return __awaiter(_this,void 0,void 0,function(){var _a,e_1;return __generator(this,function(_b){switch(_b.label){case 0:_b.trys.push([0,3,,4]);_a=extendable_media_recorder_1.register;return[4,(0,extendable_media_recorder_wav_encoder_1.connect)()];case 1:return[4,_a.apply(void 0,[_b.sent()])];case 2:_b.sent();return[3,4];case 3:e_1=_b.sent();return[3,4];case 4:return[2];}});});};setup();setInit(true);},[]);var getMediaStream=(0,react_1.useCallback)(function(){return __awaiter(_this,void 0,void 0,function(){var requiredMedia,stream_1,audioStream,stream,error_1;return __generator(this,function(_a){switch(_a.label){case 0:setStatus(\"acquiring_media\");requiredMedia={audio:typeof audio===\"boolean\"?!!audio:audio,video:typeof video===\"boolean\"?!!video:video,};_a.label=1;case 1:_a.trys.push([1,9,,10]);if(!customMediaStream)return[3,2];mediaStream.current=customMediaStream;return[3,8];case 2:if(!screen)return[3,6];return[4,window.navigator.mediaDevices.getDisplayMedia({video:video||true,selfBrowserSurface:selfBrowserSurface,})];case 3:stream_1=(_a.sent());stream_1.getVideoTracks()[0].addEventListener(\"ended\",function(){stopRecording();});if(!audio)return[3,5];return[4,window.navigator.mediaDevices.getUserMedia({audio:audio,})];case 4:audioStream=_a.sent();audioStream.getAudioTracks().forEach(function(audioTrack){return stream_1.addTrack(audioTrack);});_a.label=5;case 5:mediaStream.current=stream_1;return[3,8];case 6:return[4,window.navigator.mediaDevices.getUserMedia(requiredMedia)];case 7:stream=_a.sent();mediaStream.current=stream;_a.label=8;case 8:setStatus(\"idle\");return[3,10];case 9:error_1=_a.sent();setError(error_1.name);setStatus(\"idle\");return[3,10];case 10:return[2];}});});},[audio,video,screen]);(0,react_1.useEffect)(function(){if(!window.MediaRecorder){throw new Error(\"Unsupported Browser\");}\nif(screen){if(!window.navigator.mediaDevices.getDisplayMedia){throw new Error(\"This browser doesn't support screen capturing\");}}\nvar checkConstraints=function(mediaType){var supportedMediaConstraints=navigator.mediaDevices.getSupportedConstraints();var unSupportedConstraints=Object.keys(mediaType).filter(function(constraint){return!supportedMediaConstraints[constraint];});if(unSupportedConstraints.length>0){console.error(\"The constraints \"+unSupportedConstraints.join(\",\")+\" doesn't support on this browser. Please check your ReactMediaRecorder component.\");}};if(typeof audio===\"object\"){checkConstraints(audio);}\nif(typeof video===\"object\"){checkConstraints(video);}\nif(mediaRecorderOptions&&mediaRecorderOptions.mimeType){if(!MediaRecorder.isTypeSupported(mediaRecorderOptions.mimeType)){console.error(\"The specified MIME type you supplied for MediaRecorder doesn't support this browser\");}}\nif(!mediaStream.current&&askPermissionOnMount){getMediaStream();}\nreturn function(){if(mediaStream.current){var tracks=mediaStream.current.getTracks();tracks.forEach(function(track){return track.clone().stop();});}};},[audio,screen,video,getMediaStream,mediaRecorderOptions,askPermissionOnMount,]);var startRecording=function(){return __awaiter(_this,void 0,void 0,function(){var isStreamEnded;return __generator(this,function(_a){switch(_a.label){case 0:setError(\"NONE\");if(!!mediaStream.current)return[3,2];return[4,getMediaStream()];case 1:_a.sent();_a.label=2;case 2:if(!mediaStream.current)return[3,5];isStreamEnded=mediaStream.current.getTracks().some(function(track){return track.readyState===\"ended\";});if(!isStreamEnded)return[3,4];return[4,getMediaStream()];case 3:_a.sent();_a.label=4;case 4:if(!mediaStream.current.active){return[2];}\nmediaRecorder.current=new extendable_media_recorder_1.MediaRecorder(mediaStream.current,mediaRecorderOptions||undefined);mediaRecorder.current.ondataavailable=onRecordingActive;mediaRecorder.current.onstop=onRecordingStop;mediaRecorder.current.onstart=onRecordingStart;mediaRecorder.current.onerror=function(){setError(\"NO_RECORDER\");setStatus(\"idle\");};mediaRecorder.current.start();setStatus(\"recording\");_a.label=5;case 5:return[2];}});});};var onRecordingActive=function(_a){var data=_a.data;mediaChunks.current.push(data);};var onRecordingStart=function(){onStart();};var onRecordingStop=function(){var chunk=mediaChunks.current[0];var blobProperty=Object.assign({type:chunk.type},blobPropertyBag||(video?{type:\"video/mp4\"}:{type:\"audio/wav\"}));var blob=new Blob(mediaChunks.current,blobProperty);var url=URL.createObjectURL(blob);setStatus(\"stopped\");setMediaBlobUrl(url);onStop(url,blob);};var muteAudio=function(mute){setIsAudioMuted(mute);if(mediaStream.current){mediaStream.current.getAudioTracks().forEach(function(audioTrack){return(audioTrack.enabled=!mute);});}};var pauseRecording=function(){if(mediaRecorder.current&&mediaRecorder.current.state===\"recording\"){setStatus(\"paused\");mediaRecorder.current.pause();}};var resumeRecording=function(){if(mediaRecorder.current&&mediaRecorder.current.state===\"paused\"){setStatus(\"recording\");mediaRecorder.current.resume();}};var stopRecording=function(){if(mediaRecorder.current){if(mediaRecorder.current.state!==\"inactive\"){setStatus(\"stopping\");mediaRecorder.current.stop();if(stopStreamsOnStop){mediaStream.current&&mediaStream.current.getTracks().forEach(function(track){return track.stop();});}\nmediaChunks.current=[];}}};return{error:RecorderErrors[error],muteAudio:function(){return muteAudio(true);},unMuteAudio:function(){return muteAudio(false);},startRecording:startRecording,pauseRecording:pauseRecording,resumeRecording:resumeRecording,stopRecording:stopRecording,mediaBlobUrl:mediaBlobUrl,status:status,isAudioMuted:isAudioMuted,previewStream:mediaStream.current?new MediaStream(mediaStream.current.getVideoTracks()):null,previewAudioStream:mediaStream.current?new MediaStream(mediaStream.current.getAudioTracks()):null,clearBlobUrl:function(){if(mediaBlobUrl){URL.revokeObjectURL(mediaBlobUrl);}\nsetMediaBlobUrl(undefined);setStatus(\"idle\");},};}\nexports.useReactMediaRecorder=useReactMediaRecorder;var ReactMediaRecorder=function(props){return props.render(useReactMediaRecorder(props));};exports.ReactMediaRecorder=ReactMediaRecorder;","export const createAddRecorderAudioWorkletModule = (blobConstructor, urlConstructor, worklet) => {\n    return async (addAudioWorkletModule) => {\n        const blob = new blobConstructor([worklet], { type: 'application/javascript; charset=utf-8' });\n        const url = urlConstructor.createObjectURL(blob);\n        try {\n            await addAudioWorkletModule(url);\n        }\n        finally {\n            urlConstructor.revokeObjectURL(url);\n        }\n    };\n};\n//# sourceMappingURL=add-recorder-audio-worklet-module.js.map","export const createListener = (ongoingRequests) => {\n    return ({ data: message }) => {\n        const { id } = message;\n        if (id !== null) {\n            const ongoingRequest = ongoingRequests.get(id);\n            if (ongoingRequest !== undefined) {\n                const { reject, resolve } = ongoingRequest;\n                ongoingRequests.delete(id);\n                if (message.error === undefined) {\n                    resolve(message.result);\n                }\n                else {\n                    reject(new Error(message.error.message));\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=listener.js.map","export const createPostMessageFactory = (generateUniqueNumber) => {\n    return (ongoingRequests, port) => {\n        return (message, transferables = []) => {\n            return new Promise((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n                ongoingRequests.set(id, { reject, resolve });\n                port.postMessage({ id, ...message }, transferables);\n            });\n        };\n    };\n};\n//# sourceMappingURL=post-message-factory.js.map","export const createRecorderAudioWorkletNodeFactory = (createListener, createPostMessage, on, validateState) => {\n    return (audioWorkletNodeConstructor, context, options = {}) => {\n        const audioWorkletNode = new audioWorkletNodeConstructor(context, 'recorder-audio-worklet-processor', {\n            ...options,\n            channelCountMode: 'explicit',\n            numberOfInputs: 1,\n            numberOfOutputs: 0\n        });\n        const ongoingRequests = new Map();\n        const postMessage = createPostMessage(ongoingRequests, audioWorkletNode.port);\n        const unsubscribe = on(audioWorkletNode.port, 'message')(createListener(ongoingRequests));\n        audioWorkletNode.port.start();\n        let state = 'inactive';\n        Object.defineProperties(audioWorkletNode, {\n            pause: {\n                get() {\n                    return async () => {\n                        validateState(['recording'], state);\n                        state = 'paused';\n                        return postMessage({\n                            method: 'pause'\n                        });\n                    };\n                }\n            },\n            port: {\n                get() {\n                    throw new Error(\"The port of a RecorderAudioWorkletNode can't be accessed.\");\n                }\n            },\n            record: {\n                get() {\n                    return async (encoderPort) => {\n                        validateState(['inactive'], state);\n                        state = 'recording';\n                        return postMessage({\n                            method: 'record',\n                            params: { encoderPort }\n                        }, [encoderPort]);\n                    };\n                }\n            },\n            resume: {\n                get() {\n                    return async () => {\n                        validateState(['paused'], state);\n                        state = 'recording';\n                        return postMessage({\n                            method: 'resume'\n                        });\n                    };\n                }\n            },\n            stop: {\n                get() {\n                    return async () => {\n                        validateState(['paused', 'recording'], state);\n                        state = 'stopped';\n                        try {\n                            await postMessage({ method: 'stop' });\n                        }\n                        finally {\n                            unsubscribe();\n                        }\n                    };\n                }\n            }\n        });\n        return audioWorkletNode;\n    };\n};\n//# sourceMappingURL=recorder-audio-worklet-node-factory.js.map","export const validateState = (expectedStates, currentState) => {\n    if (!expectedStates.includes(currentState)) {\n        throw new Error(`Expected the state to be ${expectedStates\n            .map((expectedState) => `\"${expectedState}\"`)\n            .join(' or ')} but it was \"${currentState}\".`);\n    }\n};\n//# sourceMappingURL=validate-state.js.map","export * from './native-recorder-audio-worklet-node';\nexport * from './recorder-audio-worklet-node';\n//# sourceMappingURL=index.js.map","export {};\n//# sourceMappingURL=native-recorder-audio-worklet-node.js.map","export {};\n//# sourceMappingURL=recorder-audio-worklet-node.js.map","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { on } from 'subscribable-things';\nimport { isSupported } from 'worker-factory';\nimport { createAddRecorderAudioWorkletModule } from './factories/add-recorder-audio-worklet-module';\nimport { createListener } from './factories/listener';\nimport { createPostMessageFactory } from './factories/post-message-factory';\nimport { createRecorderAudioWorkletNodeFactory } from './factories/recorder-audio-worklet-node-factory';\nimport { validateState } from './functions/validate-state';\nimport { worklet } from './worklet/worklet';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nexport const addRecorderAudioWorkletModule = createAddRecorderAudioWorkletModule(Blob, URL, worklet);\nexport const createRecorderAudioWorkletNode = createRecorderAudioWorkletNodeFactory(createListener, createPostMessageFactory(generateUniqueNumber), on, validateState);\nexport { isSupported };\n//# sourceMappingURL=module.js.map","export {};\n//# sourceMappingURL=any-recorder-audio-worklet-node-options.js.map","export * from './any-recorder-audio-worklet-node-options';\nexport * from './native-recorder-audio-worklet-node-options';\nexport * from './recorder-audio-worklet-node-options';\nexport * from './state';\n//# sourceMappingURL=index.js.map","export {};\n//# sourceMappingURL=native-recorder-audio-worklet-node-options.js.map","export {};\n//# sourceMappingURL=recorder-audio-worklet-node-options.js.map","export {};\n//# sourceMappingURL=state.js.map","// This is the minified and stringified code of the recorder-audio-worklet-processor package.\nexport const worklet = `(()=>{\"use strict\";class e extends AudioWorkletProcessor{constructor(){super(),this._encoderPort=null,this._state=\"inactive\",this.port.onmessage=e=>{let{data:t}=e;\"pause\"===t.method?\"active\"===this._state||\"recording\"===this._state?(this._state=\"paused\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"record\"===t.method?\"inactive\"===this._state?(this._encoderPort=t.params.encoderPort,this._state=\"active\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"resume\"===t.method?\"paused\"===this._state?(this._state=\"active\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"stop\"===t.method?\"active\"!==this._state&&\"paused\"!==this._state&&\"recording\"!==this._state||null===this._encoderPort?this._sendUnexpectedStateError(t.id):(this._stop(this._encoderPort),this._sendAcknowledgement(t.id)):\"number\"==typeof t.id&&this.port.postMessage({error:{code:-32601,message:\"The requested method is not supported.\"},id:t.id})}}process(e){let[t]=e;if(\"inactive\"===this._state||\"paused\"===this._state)return!0;if(\"active\"===this._state){if(void 0===t)throw new Error(\"No channelData was received for the first input.\");if(0===t.length)return!0;this._state=\"recording\"}if(\"recording\"===this._state&&null!==this._encoderPort){if(void 0===t)throw new Error(\"No channelData was received for the first input.\");if(0!==t.length)return this._encoderPort.postMessage(t,t.map((e=>{let{buffer:t}=e;return t}))),!0;this._stop(this._encoderPort)}return!1}_sendAcknowledgement(e){this.port.postMessage({id:e,result:null})}_sendUnexpectedStateError(e){this.port.postMessage({error:{code:-32603,message:\"The internal state does not allow to process the given message.\"},id:e})}_stop(e){e.postMessage([]),e.close(),this._encoderPort=null,this._state=\"stopped\"}}e.parameterDescriptors=[],registerProcessor(\"recorder-audio-worklet-processor\",e)})();`; // tslint:disable-line:max-line-length\n//# sourceMappingURL=worklet.js.map","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.fastUniqueNumbers = {}));\n})(this, (function (exports) { 'use strict';\n\n    var createAddUniqueNumber = function createAddUniqueNumber(generateUniqueNumber) {\n      return function (set) {\n        var number = generateUniqueNumber(set);\n        set.add(number);\n        return number;\n      };\n    };\n\n    var createCache = function createCache(lastNumberWeakMap) {\n      return function (collection, nextNumber) {\n        lastNumberWeakMap.set(collection, nextNumber);\n        return nextNumber;\n      };\n    };\n\n    /*\n     * The value of the constant Number.MAX_SAFE_INTEGER equals (2 ** 53 - 1) but it\n     * is fairly new.\n     */\n    var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER === undefined ? 9007199254740991 : Number.MAX_SAFE_INTEGER;\n    var TWO_TO_THE_POWER_OF_TWENTY_NINE = 536870912;\n    var TWO_TO_THE_POWER_OF_THIRTY = TWO_TO_THE_POWER_OF_TWENTY_NINE * 2;\n    var createGenerateUniqueNumber = function createGenerateUniqueNumber(cache, lastNumberWeakMap) {\n      return function (collection) {\n        var lastNumber = lastNumberWeakMap.get(collection);\n        /*\n         * Let's try the cheapest algorithm first. It might fail to produce a new\n         * number, but it is so cheap that it is okay to take the risk. Just\n         * increase the last number by one or reset it to 0 if we reached the upper\n         * bound of SMIs (which stands for small integers). When the last number is\n         * unknown it is assumed that the collection contains zero based consecutive\n         * numbers.\n         */\n        var nextNumber = lastNumber === undefined ? collection.size : lastNumber < TWO_TO_THE_POWER_OF_THIRTY ? lastNumber + 1 : 0;\n        if (!collection.has(nextNumber)) {\n          return cache(collection, nextNumber);\n        }\n        /*\n         * If there are less than half of 2 ** 30 numbers stored in the collection,\n         * the chance to generate a new random number in the range from 0 to 2 ** 30\n         * is at least 50%. It's benifitial to use only SMIs because they perform\n         * much better in any environment based on V8.\n         */\n        if (collection.size < TWO_TO_THE_POWER_OF_TWENTY_NINE) {\n          while (collection.has(nextNumber)) {\n            nextNumber = Math.floor(Math.random() * TWO_TO_THE_POWER_OF_THIRTY);\n          }\n          return cache(collection, nextNumber);\n        }\n        // Quickly check if there is a theoretical chance to generate a new number.\n        if (collection.size > MAX_SAFE_INTEGER) {\n          throw new Error('Congratulations, you created a collection of unique numbers which uses all available integers!');\n        }\n        // Otherwise use the full scale of safely usable integers.\n        while (collection.has(nextNumber)) {\n          nextNumber = Math.floor(Math.random() * MAX_SAFE_INTEGER);\n        }\n        return cache(collection, nextNumber);\n      };\n    };\n\n    var LAST_NUMBER_WEAK_MAP = new WeakMap();\n    var cache = createCache(LAST_NUMBER_WEAK_MAP);\n    var generateUniqueNumber = createGenerateUniqueNumber(cache, LAST_NUMBER_WEAK_MAP);\n    var addUniqueNumber = createAddUniqueNumber(generateUniqueNumber);\n\n    exports.addUniqueNumber = addUniqueNumber;\n    exports.generateUniqueNumber = generateUniqueNumber;\n\n}));\n","import { renderMethodNotFoundError, renderMissingResponseError, renderUnexpectedResultError } from './error-renderers';\nexport const createMessageHandler = (receiver, workerImplementation) => {\n    return async ({ data: { id, method, params } }) => {\n        const messageHandler = workerImplementation[method];\n        try {\n            if (messageHandler === undefined) {\n                throw renderMethodNotFoundError({ method });\n            }\n            const response = params === undefined\n                ? messageHandler()\n                : messageHandler(params);\n            if (response === undefined) {\n                throw renderMissingResponseError({ method });\n            }\n            const synchronousResponse = response instanceof Promise ? await response : response;\n            if (id === null) {\n                if (synchronousResponse.result !== undefined) {\n                    throw renderUnexpectedResultError({ method });\n                }\n            }\n            else {\n                if (synchronousResponse.result === undefined) {\n                    throw renderUnexpectedResultError({ method });\n                }\n                const { result, transferables = [] } = synchronousResponse;\n                receiver.postMessage({ id, result }, transferables);\n            }\n        }\n        catch (err) {\n            const { message, status = -32603 } = err;\n            receiver.postMessage({ error: { code: status, message }, id });\n        }\n    };\n};\n//# sourceMappingURL=create-message-handler.js.map","import { compile } from 'compilerr';\nconst JSON_RPC_ERROR_CODES = { INTERNAL_ERROR: -32603, INVALID_PARAMS: -32602, METHOD_NOT_FOUND: -32601 };\nexport const renderMethodNotFoundError = compile({\n    message: 'The requested method called \"${method}\" is not supported.',\n    status: JSON_RPC_ERROR_CODES.METHOD_NOT_FOUND\n});\nexport const renderMissingResponseError = compile({\n    message: 'The handler of the method called \"${method}\" returned no required result.',\n    status: JSON_RPC_ERROR_CODES.INTERNAL_ERROR\n});\nexport const renderUnexpectedResultError = compile({\n    message: 'The handler of the method called \"${method}\" returned an unexpected result.',\n    status: JSON_RPC_ERROR_CODES.INTERNAL_ERROR\n});\nexport const renderUnknownPortIdError = compile({\n    message: 'The specified parameter called \"portId\" with the given value \"${portId}\" does not identify a port connected to this worker.',\n    status: JSON_RPC_ERROR_CODES.INVALID_PARAMS\n});\n//# sourceMappingURL=error-renderers.js.map","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { renderUnknownPortIdError } from './error-renderers';\nimport { isSupportingTransferables } from './is-supporting-transferables';\nconst DESTROY_WORKER_FUNCTIONS = new Map();\nexport const extendWorkerImplementation = (createWorker, partialWorkerImplementation, isSupportedFunction) => ({\n    ...partialWorkerImplementation,\n    connect: ({ port }) => {\n        port.start();\n        const destroyWorker = createWorker(port, partialWorkerImplementation);\n        const portId = generateUniqueNumber(DESTROY_WORKER_FUNCTIONS);\n        DESTROY_WORKER_FUNCTIONS.set(portId, () => {\n            destroyWorker();\n            port.close();\n            DESTROY_WORKER_FUNCTIONS.delete(portId);\n        });\n        return { result: portId };\n    },\n    disconnect: ({ portId }) => {\n        const destroyWorker = DESTROY_WORKER_FUNCTIONS.get(portId);\n        if (destroyWorker === undefined) {\n            throw renderUnknownPortIdError({ portId: portId.toString() });\n        }\n        destroyWorker();\n        return { result: null };\n    },\n    isSupported: async () => {\n        const isSelfSupported = await isSupportingTransferables();\n        if (isSelfSupported) {\n            const result = isSupportedFunction();\n            const synchronousResult = result instanceof Promise ? await result : result;\n            return { result: synchronousResult };\n        }\n        return { result: false };\n    }\n});\n//# sourceMappingURL=extend-worker-implementation.js.map","// Bug #1: Safari does currently not support to use transferables.\nexport const isSupportingTransferables = () => new Promise((resolve) => {\n    const arrayBuffer = new ArrayBuffer(0);\n    const { port1, port2 } = new MessageChannel();\n    port1.onmessage = ({ data }) => resolve(data !== null);\n    port2.postMessage(arrayBuffer, [arrayBuffer]);\n});\n//# sourceMappingURL=is-supporting-transferables.js.map","export {};\n//# sourceMappingURL=broker-event.js.map","export {};\n//# sourceMappingURL=broker-message.js.map","export {};\n//# sourceMappingURL=default-worker-definition.js.map","export {};\n//# sourceMappingURL=error-notification.js.map","export {};\n//# sourceMappingURL=error-response.js.map","export {};\n//# sourceMappingURL=error.js.map","export * from './broker-event';\nexport * from './broker-message';\nexport * from './default-worker-definition';\nexport * from './error';\nexport * from './error-notification';\nexport * from './error-response';\nexport * from './notification';\nexport * from './receiver';\nexport * from './request';\nexport * from './value-array';\nexport * from './value-map';\nexport * from './worker-definition';\nexport * from './worker-error-message';\nexport * from './worker-result-message';\n//# sourceMappingURL=index.js.map","export {};\n//# sourceMappingURL=notification.js.map","export {};\n//# sourceMappingURL=receiver.js.map","export {};\n//# sourceMappingURL=request.js.map","export {};\n//# sourceMappingURL=value-array.js.map","export {};\n//# sourceMappingURL=value-map.js.map","export {};\n//# sourceMappingURL=worker-definition.js.map","export {};\n//# sourceMappingURL=worker-error-message.js.map","export {};\n//# sourceMappingURL=worker-result-message.js.map","import { createMessageHandler } from './helpers/create-message-handler';\nimport { extendWorkerImplementation } from './helpers/extend-worker-implementation';\nimport { isSupportingTransferables } from './helpers/is-supporting-transferables';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nexport const createWorker = (receiver, workerImplementation, isSupportedFunction = () => true) => {\n    const fullWorkerImplementation = extendWorkerImplementation(createWorker, workerImplementation, isSupportedFunction);\n    const messageHandler = createMessageHandler(receiver, fullWorkerImplementation);\n    receiver.addEventListener('message', messageHandler);\n    return () => receiver.removeEventListener('message', messageHandler);\n};\nexport { isSupportingTransferables as isSupported };\n//# sourceMappingURL=module.js.map","export {};\n//# sourceMappingURL=destroy-worker-function.js.map","export * from './destroy-worker-function';\nexport * from './message';\nexport * from './message-receiver';\nexport * from './message-receiver-with-params';\nexport * from './message-receiver-without-params';\nexport * from './typed-array';\nexport * from './value';\nexport * from './value-map';\nexport * from './worker-definition';\nexport * from './worker-implementation';\nexport * from './worker-message';\n//# sourceMappingURL=index.js.map","export {};\n//# sourceMappingURL=message-receiver-with-params.js.map","export {};\n//# sourceMappingURL=message-receiver-without-params.js.map","export {};\n//# sourceMappingURL=message-receiver.js.map","export {};\n//# sourceMappingURL=message.js.map","export {};\n//# sourceMappingURL=typed-array.js.map","export {};\n//# sourceMappingURL=value-map.js.map","export {};\n//# sourceMappingURL=value.js.map","export {};\n//# sourceMappingURL=worker-definition.js.map","export {};\n//# sourceMappingURL=worker-implementation.js.map","export {};\n//# sourceMappingURL=worker-message.js.map","import { observable } from \"./symbols\";\r\nexport function patch(arg) {\r\n    if (!Symbol.observable) {\r\n        if (typeof arg === \"function\" &&\r\n            arg.prototype &&\r\n            arg.prototype[Symbol.observable]) {\r\n            arg.prototype[observable] = arg.prototype[Symbol.observable];\r\n            delete arg.prototype[Symbol.observable];\r\n        }\r\n        else {\r\n            arg[observable] = arg[Symbol.observable];\r\n            delete arg[Symbol.observable];\r\n        }\r\n    }\r\n    return arg;\r\n}\r\n//# sourceMappingURL=patch.js.map","export const observable = Symbol.observable || \"@@observable\";\r\n//# sourceMappingURL=symbols.js.map","const noop = () => { };\r\nconst rethrow = (error) => {\r\n    throw error;\r\n};\r\nexport function toObserver(observer) {\r\n    if (observer) {\r\n        if (observer.next && observer.error && observer.complete) {\r\n            return observer;\r\n        }\r\n        return {\r\n            complete: (observer.complete ?? noop).bind(observer),\r\n            error: (observer.error ?? rethrow).bind(observer),\r\n            next: (observer.next ?? noop).bind(observer),\r\n        };\r\n    }\r\n    return {\r\n        complete: noop,\r\n        error: rethrow,\r\n        next: noop,\r\n    };\r\n}\r\n//# sourceMappingURL=to-observer.js.map","export const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\nexport const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;\n//# sourceMappingURL=constants.js.map","export const createAbortError = () => new DOMException('', 'AbortError');\n//# sourceMappingURL=abort-error.js.map","export const createAddActiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n        insertElementInSet(activeInputs[input], [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n    };\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-node.js.map","export const createAddAudioNodeConnections = (audioNodeConnectionsStore) => {\n    return (audioNode, audioNodeRenderer, nativeAudioNode) => {\n        const activeInputs = [];\n        for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n            activeInputs.push(new Set());\n        }\n        audioNodeConnectionsStore.set(audioNode, {\n            activeInputs,\n            outputs: new Set(),\n            passiveInputs: new WeakMap(),\n            renderer: audioNodeRenderer\n        });\n    };\n};\n//# sourceMappingURL=add-audio-node-connections.js.map","export const createAddAudioParamConnections = (audioParamConnectionsStore) => {\n    return (audioParam, audioParamRenderer) => {\n        audioParamConnectionsStore.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });\n    };\n};\n//# sourceMappingURL=add-audio-param-connections.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\nconst verifyParameterDescriptors = (parameterDescriptors) => {\n    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n    }\n};\nconst verifyProcessorCtor = (processorCtor) => {\n    if (!isConstructible(processorCtor)) {\n        throw new TypeError('The given value for processorCtor should be a constructor.');\n    }\n    if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n        throw new TypeError('The given value for processorCtor should have a prototype.');\n    }\n};\nexport const createAddAudioWorkletModule = (cacheTestResult, createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, ongoingRequests, resolvedRequests, testAudioWorkletProcessorPostMessageSupport, window) => {\n    let index = 0;\n    return (context, moduleURL, options = { credentials: 'omit' }) => {\n        const resolvedRequestsOfContext = resolvedRequests.get(context);\n        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n            return Promise.resolve();\n        }\n        const ongoingRequestsOfContext = ongoingRequests.get(context);\n        if (ongoingRequestsOfContext !== undefined) {\n            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n            if (promiseOfOngoingRequest !== undefined) {\n                return promiseOfOngoingRequest;\n            }\n        }\n        const nativeContext = getNativeContext(context);\n        // Bug #59: Safari does not implement the audioWorklet property.\n        const promise = nativeContext.audioWorklet === undefined\n            ? fetchSource(moduleURL)\n                .then(([source, absoluteUrl]) => {\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * ${ importStatements };\n                 * ((a, b) => {\n                 *     (a[b] = a[b] || [ ]).push(\n                 *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n                 *             ${ sourceWithoutImportStatements }\n                 *         }\n                 *     );\n                 * })(window, '_AWGS');\n                 * ```\n                 */\n                // tslint:disable-next-line:max-line-length\n                const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`;\n                // @todo Evaluating the given source code is a possible security problem.\n                return evaluateSource(wrappedSource);\n            })\n                .then(() => {\n                const evaluateAudioWorkletGlobalScope = window._AWGS.pop();\n                if (evaluateAudioWorkletGlobalScope === undefined) {\n                    // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                    throw new SyntaxError();\n                }\n                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {\n                }, undefined, (name, processorCtor) => {\n                    if (name.trim() === '') {\n                        throw createNotSupportedError();\n                    }\n                    const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n                    if (nodeNameToProcessorConstructorMap !== undefined) {\n                        if (nodeNameToProcessorConstructorMap.has(name)) {\n                            throw createNotSupportedError();\n                        }\n                        verifyProcessorCtor(processorCtor);\n                        verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                        nodeNameToProcessorConstructorMap.set(name, processorCtor);\n                    }\n                    else {\n                        verifyProcessorCtor(processorCtor);\n                        verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                        NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n                    }\n                }, nativeContext.sampleRate, undefined, undefined));\n            })\n            : Promise.all([\n                fetchSource(moduleURL),\n                Promise.resolve(cacheTestResult(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport))\n            ]).then(([[source, absoluteUrl], isSupportingPostMessage]) => {\n                const currentIndex = index + 1;\n                index = currentIndex;\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * This is the unminified version of the code used below.\n                 *\n                 * ```js\n                 * class extends AudioWorkletProcessor {\n                 *\n                 *     __buffers = new WeakSet();\n                 *\n                 *     constructor () {\n                 *         super();\n                 *\n                 *         this.port.postMessage = ((postMessage) => {\n                 *             return (message, transferables) => {\n                 *                 const filteredTransferables = (transferables)\n                 *                     ? transferables.filter((transferable) => !this.__buffers.has(transferable))\n                 *                     : transferables;\n                 *\n                 *                 return postMessage.call(this.port, message, filteredTransferables);\n                 *              };\n                 *         })(this.port.postMessage);\n                 *     }\n                 * }\n                 * ```\n                 */\n                const patchedAudioWorkletProcessor = isSupportingPostMessage\n                    ? 'AudioWorkletProcessor'\n                    : 'class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}';\n                /*\n                 * Bug #170: Chrome and Edge do call process() with an array with empty channelData for each input if no input is connected.\n                 *\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                 *\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * `${ importStatements };\n                 * ((AudioWorkletProcessor, registerProcessor) => {${ sourceWithoutImportStatements }\n                 * })(\n                 *     ${ patchedAudioWorkletProcessor },\n                 *     (name, processorCtor) => registerProcessor(name, class extends processorCtor {\n                 *\n                 *         __collectBuffers = (array) => {\n                 *             array.forEach((element) => this.__buffers.add(element.buffer));\n                 *         };\n                 *\n                 *         process (inputs, outputs, parameters) {\n                 *             inputs.forEach(this.__collectBuffers);\n                 *             outputs.forEach(this.__collectBuffers);\n                 *             this.__collectBuffers(Object.values(parameters));\n                 *\n                 *             return super.process(\n                 *                 (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n                 *                 outputs,\n                 *                 parameters\n                 *             );\n                 *         }\n                 *\n                 *     })\n                 * );\n                 *\n                 * registerProcessor(`__sac${currentIndex}`, class extends AudioWorkletProcessor{\n                 *\n                 *     process () {\n                 *         return false;\n                 *     }\n                 *\n                 * })`\n                 * ```\n                 */\n                const memberDefinition = isSupportingPostMessage ? '' : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));';\n                const bufferRegistration = isSupportingPostMessage\n                    ? ''\n                    : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));';\n                const wrappedSource = `${importStatements};((AudioWorkletProcessor,registerProcessor)=>{${sourceWithoutImportStatements}\n})(${patchedAudioWorkletProcessor},(n,p)=>registerProcessor(n,class extends p{${memberDefinition}process(i,o,p){${bufferRegistration}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${currentIndex}',class extends AudioWorkletProcessor{process(){return !1}})`;\n                const blob = new Blob([wrappedSource], { type: 'application/javascript; charset=utf-8' });\n                const url = URL.createObjectURL(blob);\n                return nativeContext.audioWorklet\n                    .addModule(url, options)\n                    .then(() => {\n                    if (isNativeOfflineAudioContext(nativeContext)) {\n                        return nativeContext;\n                    }\n                    // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n                    const backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext(nativeContext);\n                    return backupOfflineAudioContext.audioWorklet.addModule(url, options).then(() => backupOfflineAudioContext);\n                })\n                    .then((nativeContextOrBackupOfflineAudioContext) => {\n                    if (nativeAudioWorkletNodeConstructor === null) {\n                        throw new SyntaxError();\n                    }\n                    try {\n                        // Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                        new nativeAudioWorkletNodeConstructor(nativeContextOrBackupOfflineAudioContext, `__sac${currentIndex}`); // tslint:disable-line:no-unused-expression\n                    }\n                    catch {\n                        throw new SyntaxError();\n                    }\n                })\n                    .finally(() => URL.revokeObjectURL(url));\n            });\n        if (ongoingRequestsOfContext === undefined) {\n            ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n        }\n        else {\n            ongoingRequestsOfContext.set(moduleURL, promise);\n        }\n        promise\n            .then(() => {\n            const updatedResolvedRequestsOfContext = resolvedRequests.get(context);\n            if (updatedResolvedRequestsOfContext === undefined) {\n                resolvedRequests.set(context, new Set([moduleURL]));\n            }\n            else {\n                updatedResolvedRequestsOfContext.add(moduleURL);\n            }\n        })\n            .finally(() => {\n            const updatedOngoingRequestsOfContext = ongoingRequests.get(context);\n            if (updatedOngoingRequestsOfContext !== undefined) {\n                updatedOngoingRequestsOfContext.delete(moduleURL);\n            }\n        });\n        return promise;\n    };\n};\n//# sourceMappingURL=add-audio-worklet-module.js.map","import { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nexport const createAddConnectionToAudioNode = (addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode) => {\n    const tailTimeTimeoutIds = new WeakMap();\n    return (source, destination, output, input, isOffline) => {\n        const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n        const { outputs } = getAudioNodeConnections(source);\n        const eventListeners = getEventListenersOfAudioNode(source);\n        const eventListener = (isActive) => {\n            const nativeDestinationAudioNode = getNativeAudioNode(destination);\n            const nativeSourceAudioNode = getNativeAudioNode(source);\n            if (isActive) {\n                const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n                addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                if (isPassiveAudioNode(destination)) {\n                    setInternalStateToActive(destination);\n                }\n            }\n            else {\n                const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                const tailTime = getAudioNodeTailTime(destination);\n                if (tailTime === 0) {\n                    if (isActiveAudioNode(destination)) {\n                        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                    }\n                }\n                else {\n                    const tailTimeTimeoutId = tailTimeTimeoutIds.get(destination);\n                    if (tailTimeTimeoutId !== undefined) {\n                        clearTimeout(tailTimeTimeoutId);\n                    }\n                    tailTimeTimeoutIds.set(destination, setTimeout(() => {\n                        if (isActiveAudioNode(destination)) {\n                            setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                        }\n                    }, tailTime * 1000));\n                }\n            }\n        };\n        if (insertElementInSet(outputs, [destination, output, input], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {\n            eventListeners.add(eventListener);\n            if (isActiveAudioNode(source)) {\n                addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n            }\n            else {\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n            }\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=add-connection-to-audio-node.js.map","export const createAddPassiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n        const passiveInputConnections = passiveInputs.get(source);\n        if (passiveInputConnections === undefined) {\n            passiveInputs.set(source, new Set([[output, input, eventListener]]));\n        }\n        else {\n            insertElementInSet(passiveInputConnections, [output, input, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input, ignoreDuplicates);\n        }\n    };\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-node.js.map","export const createAddSilentConnection = (createNativeGainNode) => {\n    return (nativeContext, nativeAudioScheduledSourceNode) => {\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnect = () => {\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n    };\n};\n//# sourceMappingURL=add-silent-connection.js.map","export const createAddUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=add-unrendered-audio-worklet-node.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    fftSize: 2048,\n    maxDecibels: -30,\n    minDecibels: -100,\n    smoothingTimeConstant: 0.8\n};\nexport const createAnalyserNodeConstructor = (audionNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class AnalyserNode extends audionNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);\n            const analyserNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null));\n            super(context, false, nativeAnalyserNode, analyserNodeRenderer);\n            this._nativeAnalyserNode = nativeAnalyserNode;\n        }\n        get fftSize() {\n            return this._nativeAnalyserNode.fftSize;\n        }\n        set fftSize(value) {\n            this._nativeAnalyserNode.fftSize = value;\n        }\n        get frequencyBinCount() {\n            return this._nativeAnalyserNode.frequencyBinCount;\n        }\n        get maxDecibels() {\n            return this._nativeAnalyserNode.maxDecibels;\n        }\n        set maxDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const maxDecibels = this._nativeAnalyserNode.maxDecibels;\n            this._nativeAnalyserNode.maxDecibels = value;\n            if (!(value > this._nativeAnalyserNode.minDecibels)) {\n                this._nativeAnalyserNode.maxDecibels = maxDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get minDecibels() {\n            return this._nativeAnalyserNode.minDecibels;\n        }\n        set minDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const minDecibels = this._nativeAnalyserNode.minDecibels;\n            this._nativeAnalyserNode.minDecibels = value;\n            if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n                this._nativeAnalyserNode.minDecibels = minDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get smoothingTimeConstant() {\n            return this._nativeAnalyserNode.smoothingTimeConstant;\n        }\n        set smoothingTimeConstant(value) {\n            this._nativeAnalyserNode.smoothingTimeConstant = value;\n        }\n        getByteFrequencyData(array) {\n            this._nativeAnalyserNode.getByteFrequencyData(array);\n        }\n        getByteTimeDomainData(array) {\n            this._nativeAnalyserNode.getByteTimeDomainData(array);\n        }\n        getFloatFrequencyData(array) {\n            this._nativeAnalyserNode.getFloatFrequencyData(array);\n        }\n        getFloatTimeDomainData(array) {\n            this._nativeAnalyserNode.getFloatTimeDomainData(array);\n        }\n    };\n};\n//# sourceMappingURL=analyser-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAnalyserNodeRendererFactory = (createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAnalyserNodes = new WeakMap();\n        const createAnalyserNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAnalyserNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAnalyserNodeIsOwnedByContext = isOwnedByContext(nativeAnalyserNode, nativeOfflineAudioContext);\n            if (!nativeAnalyserNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAnalyserNode.channelCount,\n                    channelCountMode: nativeAnalyserNode.channelCountMode,\n                    channelInterpretation: nativeAnalyserNode.channelInterpretation,\n                    fftSize: nativeAnalyserNode.fftSize,\n                    maxDecibels: nativeAnalyserNode.maxDecibels,\n                    minDecibels: nativeAnalyserNode.minDecibels,\n                    smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant\n                };\n                nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode);\n            return nativeAnalyserNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAnalyserNode !== undefined) {\n                    return Promise.resolve(renderedNativeAnalyserNode);\n                }\n                return createAnalyserNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=analyser-node-renderer-factory.js.map","import { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from '../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createAudioBufferConstructor = (audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    let nativeOfflineAudioContext = null;\n    return class AudioBuffer {\n        constructor(options) {\n            if (nativeOfflineAudioContextConstructor === null) {\n                throw new Error('Missing the native OfflineAudioContext constructor.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            if (nativeOfflineAudioContext === null) {\n                nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n            }\n            /*\n             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n             * factory function. But since Firefox also supports the constructor everything should be fine.\n             */\n            const audioBuffer = nativeAudioBufferConstructor !== null &&\n                cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport)\n                ? new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate })\n                : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);\n            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n            if (audioBuffer.numberOfChannels === 0) {\n                throw createNotSupportedError();\n            }\n            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n            if (typeof audioBuffer.copyFromChannel !== 'function') {\n                wrapAudioBufferCopyChannelMethods(audioBuffer);\n                wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n            }\n            else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n            }\n            audioBufferStore.add(audioBuffer);\n            /*\n             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n             * (Offline)AudioContexts.\n             */\n            return audioBuffer;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype) ||\n                audioBufferStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    // Bug #149: Safari does not yet support the detune AudioParam.\n    loop: false,\n    loopEnd: 0,\n    loopStart: 0,\n    playbackRate: 1\n};\nexport const createAudioBufferSourceNodeConstructor = (audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class AudioBufferSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const audioBufferSourceNodeRenderer = ((isOffline ? createAudioBufferSourceNodeRenderer() : null));\n            super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n            this._isBufferNullified = false;\n            this._isBufferSet = mergedOptions.buffer !== null;\n            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n            this._onended = null;\n            // Bug #73: Safari does not export the correct values for maxValue and minValue.\n            this._playbackRate = createAudioParam(this, isOffline, nativeAudioBufferSourceNode.playbackRate, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeAudioBufferSourceNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeAudioBufferSourceNode.buffer = value;\n            // Bug #72: Only Chrome & Edge do not allow to reassign the buffer yet.\n            if (value !== null) {\n                if (this._isBufferSet) {\n                    throw createInvalidStateError();\n                }\n                this._isBufferSet = true;\n            }\n        }\n        get loop() {\n            return this._nativeAudioBufferSourceNode.loop;\n        }\n        set loop(value) {\n            this._nativeAudioBufferSourceNode.loop = value;\n        }\n        get loopEnd() {\n            return this._nativeAudioBufferSourceNode.loopEnd;\n        }\n        set loopEnd(value) {\n            this._nativeAudioBufferSourceNode.loopEnd = value;\n        }\n        get loopStart() {\n            return this._nativeAudioBufferSourceNode.loopStart;\n        }\n        set loopStart(value) {\n            this._nativeAudioBufferSourceNode.loopStart = value;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioBufferSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get playbackRate() {\n            return this._playbackRate;\n        }\n        start(when = 0, offset = 0, duration) {\n            this._nativeAudioBufferSourceNode.start(when, offset, duration);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeAudioBufferSourceNode.stop(when);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAudioBufferSourceNodeRendererFactory = (connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioBufferSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioBufferSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeAudioBufferSourceNode.buffer,\n                    channelCount: nativeAudioBufferSourceNode.channelCount,\n                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n                    // Bug #149: Safari does not yet support the detune AudioParam.\n                    loop: nativeAudioBufferSourceNode.loop,\n                    loopEnd: nativeAudioBufferSourceNode.loopEnd,\n                    loopStart: nativeAudioBufferSourceNode.loopStart,\n                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n                };\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeAudioBufferSourceNode.start(...start);\n                }\n                if (stop !== null) {\n                    nativeAudioBufferSourceNode.stop(stop);\n                }\n            }\n            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n            else {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            return nativeAudioBufferSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioBufferSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioBufferSourceNode);\n                }\n                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-renderer-factory.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createAudioContextConstructor = (baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor) => {\n    return class AudioContext extends baseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            let nativeAudioContext;\n            try {\n                nativeAudioContext = new nativeAudioContextConstructor(options);\n            }\n            catch (err) {\n                // Bug #192 Safari does throw a SyntaxError if the sampleRate is not supported.\n                if (err.code === 12 && err.message === 'sampleRate is not in range') {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome and Edge throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                        ? 512 / sampleRate\n                        : latencyHint === 'interactive' || latencyHint === undefined\n                            ? 256 / sampleRate\n                            : latencyHint === 'playback'\n                                ? 1024 / sampleRate\n                                : /*\n                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                                   * ScriptProcessorNode.\n                                   */\n                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n                this._nativeGainNode.gain.value = 1e-37;\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            }\n            else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n            this._state = null;\n            /*\n             * Bug #34: Chrome and Edge pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n                deactivateAudioGraph(this);\n            });\n        }\n        createMediaElementSource(mediaElement) {\n            return new mediaElementAudioSourceNodeConstructor(this, { mediaElement });\n        }\n        createMediaStreamDestination() {\n            return new mediaStreamAudioDestinationNodeConstructor(this);\n        }\n        createMediaStreamSource(mediaStream) {\n            return new mediaStreamAudioSourceNodeConstructor(this, { mediaStream });\n        }\n        createMediaStreamTrackSource(mediaStreamTrack) {\n            return new mediaStreamTrackAudioSourceNodeConstructor(this, { mediaStreamTrack });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome and Edge do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=audio-context-constructor.js.map","export const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {\n    return class AudioDestinationNode extends audioNodeConstructor {\n        constructor(context, channelCount) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = ((isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null));\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n        get channelCount() {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n        get maxChannelCount() {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-constructor.js.map","export const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {\n    const renderedNativeAudioDestinationNodes = new WeakMap();\n    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n        renderedNativeAudioDestinationNodes.set(nativeOfflineAudioContext, nativeAudioDestinationNode);\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode);\n        return nativeAudioDestinationNode;\n    };\n    return {\n        render(proxy, nativeOfflineAudioContext) {\n            const renderedNativeAudioDestinationNode = renderedNativeAudioDestinationNodes.get(nativeOfflineAudioContext);\n            if (renderedNativeAudioDestinationNode !== undefined) {\n                return Promise.resolve(renderedNativeAudioDestinationNode);\n            }\n            return createAudioDestinationNode(proxy, nativeOfflineAudioContext);\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-renderer-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nexport const createAudioListenerFactory = (createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors) => {\n    return (context, nativeContext) => {\n        const nativeListener = nativeContext.listener;\n        // Bug #117: Only Chrome & Edge support the new interface already.\n        const createFakeAudioParams = () => {\n            const buffer = new Float32Array(1);\n            const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: 9\n            });\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            let isScriptProcessorNodeCreated = false;\n            let lastOrientation = [0, 0, -1, 0, 1, 0];\n            let lastPosition = [0, 0, 0];\n            const createScriptProcessorNode = () => {\n                if (isScriptProcessorNodeCreated) {\n                    return;\n                }\n                isScriptProcessorNodeCreated = true;\n                const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n                // tslint:disable-next-line:deprecation\n                scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n                    const orientation = [\n                        getFirstSample(inputBuffer, buffer, 0),\n                        getFirstSample(inputBuffer, buffer, 1),\n                        getFirstSample(inputBuffer, buffer, 2),\n                        getFirstSample(inputBuffer, buffer, 3),\n                        getFirstSample(inputBuffer, buffer, 4),\n                        getFirstSample(inputBuffer, buffer, 5)\n                    ];\n                    if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                        nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n                        lastOrientation = orientation;\n                    }\n                    const positon = [\n                        getFirstSample(inputBuffer, buffer, 6),\n                        getFirstSample(inputBuffer, buffer, 7),\n                        getFirstSample(inputBuffer, buffer, 8)\n                    ];\n                    if (positon.some((value, index) => value !== lastPosition[index])) {\n                        nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n                        lastPosition = positon;\n                    }\n                };\n                channelMergerNode.connect(scriptProcessorNode);\n            };\n            const createSetOrientation = (index) => (value) => {\n                if (value !== lastOrientation[index]) {\n                    lastOrientation[index] = value;\n                    nativeListener.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n                }\n            };\n            const createSetPosition = (index) => (value) => {\n                if (value !== lastPosition[index]) {\n                    lastPosition[index] = value;\n                    nativeListener.setPosition(...lastPosition); // tslint:disable-line:deprecation\n                }\n            };\n            const createFakeAudioParam = (input, initialValue, setValue) => {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: initialValue\n                });\n                constantSourceNode.connect(channelMergerNode, 0, input);\n                // @todo This should be stopped when the context is closed.\n                constantSourceNode.start();\n                Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n                    get() {\n                        return initialValue;\n                    }\n                });\n                /*\n                 * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and\n                 * minValue for GainNodes.\n                 */\n                const audioParam = createAudioParam({ context }, isOffline, constantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n                overwriteAccessors(audioParam, 'value', (get) => () => get.call(audioParam), (set) => (value) => {\n                    try {\n                        set.call(audioParam, value);\n                    }\n                    catch (err) {\n                        if (err.code !== 9) {\n                            throw err;\n                        }\n                    }\n                    createScriptProcessorNode();\n                    if (isOffline) {\n                        // Bug #117: Using setOrientation() and setPosition() doesn't work with an OfflineAudioContext.\n                        setValue(value);\n                    }\n                });\n                audioParam.cancelAndHoldAtTime = ((cancelAndHoldAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = cancelAndHoldAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.cancelAndHoldAtTime);\n                audioParam.cancelScheduledValues = ((cancelScheduledValues) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = cancelScheduledValues.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.cancelScheduledValues);\n                audioParam.exponentialRampToValueAtTime = ((exponentialRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = exponentialRampToValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.exponentialRampToValueAtTime);\n                audioParam.linearRampToValueAtTime = ((linearRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = linearRampToValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.linearRampToValueAtTime);\n                audioParam.setTargetAtTime = ((setTargetAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setTargetAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setTargetAtTime);\n                audioParam.setValueAtTime = ((setValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setValueAtTime);\n                audioParam.setValueCurveAtTime = ((setValueCurveAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setValueCurveAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setValueCurveAtTime);\n                return audioParam;\n            };\n            return {\n                forwardX: createFakeAudioParam(0, 0, createSetOrientation(0)),\n                forwardY: createFakeAudioParam(1, 0, createSetOrientation(1)),\n                forwardZ: createFakeAudioParam(2, -1, createSetOrientation(2)),\n                positionX: createFakeAudioParam(6, 0, createSetPosition(0)),\n                positionY: createFakeAudioParam(7, 0, createSetPosition(1)),\n                positionZ: createFakeAudioParam(8, 0, createSetPosition(2)),\n                upX: createFakeAudioParam(3, 0, createSetOrientation(3)),\n                upY: createFakeAudioParam(4, 1, createSetOrientation(4)),\n                upZ: createFakeAudioParam(5, 0, createSetOrientation(5))\n            };\n        };\n        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } = nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;\n        return {\n            get forwardX() {\n                return forwardX;\n            },\n            get forwardY() {\n                return forwardY;\n            },\n            get forwardZ() {\n                return forwardZ;\n            },\n            get positionX() {\n                return positionX;\n            },\n            get positionY() {\n                return positionY;\n            },\n            get positionZ() {\n                return positionZ;\n            },\n            get upX() {\n                return upX;\n            },\n            get upY() {\n                return upY;\n            },\n            get upZ() {\n                return upZ;\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-listener-factory.js.map","import { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { addActiveInputConnectionToAudioParam } from '../helpers/add-active-input-connection-to-audio-param';\nimport { addPassiveInputConnectionToAudioParam } from '../helpers/add-passive-input-connection-to-audio-param';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteActiveInputConnection } from '../helpers/delete-active-input-connection';\nimport { deleteActiveInputConnectionToAudioParam } from '../helpers/delete-active-input-connection-to-audio-param';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { deletePassiveInputConnectionToAudioParam } from '../helpers/delete-passive-input-connection-to-audio-param';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\nconst addConnectionToAudioParamOfAudioContext = (source, destination, output, isOffline) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n    const eventListener = (isActive) => {\n        const nativeAudioNode = getNativeAudioNode(source);\n        const nativeAudioParam = getNativeAudioParam(destination);\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n            addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }\n        else {\n            const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n            addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.disconnect(nativeAudioParam, output);\n            }\n        }\n    };\n    if (insertElementInSet(outputs, [destination, output], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output, true)) {\n        eventListeners.add(eventListener);\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n        }\n        else {\n            addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n        }\n        return true;\n    }\n    return false;\n};\nconst deleteInputConnectionOfAudioNode = (source, destination, output, input) => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n        return [passiveInputConnection[2], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputConnectionOfAudioParam = (source, destination, output) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n        return [passiveInputConnection[1], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputsOfAudioNode = (source, isOffline, destination, output, input) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n        }\n    }\n    if (isActiveAudioNode(destination)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n    }\n};\nconst deleteInputsOfAudioParam = (source, isOffline, destination, output) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);\n        }\n    }\n};\nconst deleteAnyConnection = (source, isOffline) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        destinations.push(outputConnection[0]);\n    }\n    audioNodeConnectionsOfSource.outputs.clear();\n    return destinations;\n};\nconst deleteConnectionAtOutput = (source, isOffline, output) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (outputConnection[1] === output) {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n            }\n            else {\n                deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n            }\n            destinations.push(outputConnection[0]);\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        }\n    }\n    return destinations;\n};\nconst deleteConnectionToDestination = (source, isOffline, destination, output, input) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    return Array.from(audioNodeConnectionsOfSource.outputs)\n        .filter((outputConnection) => outputConnection[0] === destination &&\n        (output === undefined || outputConnection[1] === output) &&\n        (input === undefined || outputConnection[2] === input))\n        .map((outputConnection) => {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        return outputConnection[0];\n    });\n};\nexport const createAudioNodeConstructor = (addAudioNodeConnections, addConnectionToAudioNode, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor) => {\n    return class AudioNode extends eventTargetConstructor {\n        constructor(context, isActive, nativeAudioNode, audioNodeRenderer) {\n            super(nativeAudioNode);\n            this._context = context;\n            this._nativeAudioNode = nativeAudioNode;\n            const nativeContext = getNativeContext(context);\n            // Bug #12: Safari does not support to disconnect a specific destination.\n            if (isNativeAudioContext(nativeContext) &&\n                true !==\n                    cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {\n                        return testAudioNodeDisconnectMethodSupport(nativeContext, nativeAudioWorkletNodeConstructor);\n                    })) {\n                wrapAudioNodeDisconnectMethod(nativeAudioNode);\n            }\n            AUDIO_NODE_STORE.set(this, nativeAudioNode);\n            EVENT_LISTENERS.set(this, new Set());\n            if (context.state !== 'closed' && isActive) {\n                setInternalStateToActive(this);\n            }\n            addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n        }\n        get channelCount() {\n            return this._nativeAudioNode.channelCount;\n        }\n        set channelCount(value) {\n            this._nativeAudioNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            this._nativeAudioNode.channelCountMode = value;\n        }\n        get channelInterpretation() {\n            return this._nativeAudioNode.channelInterpretation;\n        }\n        set channelInterpretation(value) {\n            this._nativeAudioNode.channelInterpretation = value;\n        }\n        get context() {\n            return this._context;\n        }\n        get numberOfInputs() {\n            return this._nativeAudioNode.numberOfInputs;\n        }\n        get numberOfOutputs() {\n            return this._nativeAudioNode.numberOfOutputs;\n        }\n        // tslint:disable-next-line:invalid-void\n        connect(destination, output = 0, input = 0) {\n            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n                throw createInvalidAccessError();\n            }\n            if (isAudioNode(destination)) {\n                const nativeDestinationAudioNode = getNativeAudioNode(destination);\n                try {\n                    const connection = connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode, nativeDestinationAudioNode, output, input);\n                    const isPassive = isPassiveAudioNode(this);\n                    if (isOffline || isPassive) {\n                        this._nativeAudioNode.disconnect(...connection);\n                    }\n                    if (this.context.state !== 'closed' && !isPassive && isPassiveAudioNode(destination)) {\n                        setInternalStateToActive(destination);\n                    }\n                }\n                catch (err) {\n                    // Bug #41: Safari does not throw the correct exception so far.\n                    if (err.code === 12) {\n                        throw createInvalidAccessError();\n                    }\n                    throw err;\n                }\n                const isNewConnectionToAudioNode = addConnectionToAudioNode(this, destination, output, input, isOffline);\n                // Bug #164: Only Firefox detects cycles so far.\n                if (isNewConnectionToAudioNode) {\n                    const cycles = detectCycles([this], destination);\n                    visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n                }\n                return destination;\n            }\n            const nativeAudioParam = getNativeAudioParam(destination);\n            /*\n             * Bug #73, #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n             * Safari. In addition to that the maxValue property is used to only detect the affected versions below v14.0.2.\n             */\n            if (nativeAudioParam.name === 'playbackRate' && nativeAudioParam.maxValue === 1024) {\n                throw createNotSupportedError();\n            }\n            try {\n                this._nativeAudioNode.connect(nativeAudioParam, output);\n                if (isOffline || isPassiveAudioNode(this)) {\n                    this._nativeAudioNode.disconnect(nativeAudioParam, output);\n                }\n            }\n            catch (err) {\n                // Bug #58: Safari doesn't throw an InvalidAccessError yet.\n                if (err.code === 12) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            const isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline);\n            // Bug #164: Only Firefox detects cycles so far.\n            if (isNewConnectionToAudioParam) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n            }\n        }\n        disconnect(destinationOrOutput, output, input) {\n            let destinations;\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (destinationOrOutput === undefined) {\n                destinations = deleteAnyConnection(this, isOffline);\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);\n            }\n            else {\n                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n                    throw createIndexSizeError();\n                }\n                if (isAudioNode(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);\n                if (destinations.length === 0) {\n                    throw createInvalidAccessError();\n                }\n            }\n            // Bug #164: Only Firefox detects cycles so far.\n            for (const destination of destinations) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-node-constructor.js.map","import { AutomationEventList } from 'automation-events';\nexport const createAudioParamFactory = (addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible) => {\n    return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null) => {\n        // Bug #196 Only Safari sets the defaultValue to the initial value.\n        const defaultValue = nativeAudioParam.value;\n        const automationEventList = new AutomationEventList(defaultValue);\n        const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;\n        const audioParam = {\n            get defaultValue() {\n                return defaultValue;\n            },\n            get maxValue() {\n                return maxValue === null ? nativeAudioParam.maxValue : maxValue;\n            },\n            get minValue() {\n                return minValue === null ? nativeAudioParam.minValue : minValue;\n            },\n            get value() {\n                return nativeAudioParam.value;\n            },\n            set value(value) {\n                nativeAudioParam.value = value;\n                // Bug #98: Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n                audioParam.setValueAtTime(value, audioNode.context.currentTime);\n            },\n            cancelAndHoldAtTime(cancelTime) {\n                // Bug #28: Firefox & Safari do not yet implement cancelAndHoldAtTime().\n                if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n                }\n                else {\n                    const previousLastEvent = Array.from(automationEventList).pop();\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    const currentLastEvent = Array.from(automationEventList).pop();\n                    nativeAudioParam.cancelScheduledValues(cancelTime);\n                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n                        if (currentLastEvent.type === 'exponentialRampToValue') {\n                            nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'linearRampToValue') {\n                            nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'setValue') {\n                            nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n                        }\n                        else if (currentLastEvent.type === 'setValueCurve') {\n                            nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);\n                        }\n                    }\n                }\n                return audioParam;\n            },\n            cancelScheduledValues(cancelTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n                nativeAudioParam.cancelScheduledValues(cancelTime);\n                return audioParam;\n            },\n            exponentialRampToValueAtTime(value, endTime) {\n                // Bug #45: Safari does not throw an error yet.\n                if (value === 0) {\n                    throw new RangeError();\n                }\n                // Bug #187: Safari does not throw an error yet.\n                if (!Number.isFinite(endTime) || endTime < 0) {\n                    throw new RangeError();\n                }\n                const currentTime = audioNode.context.currentTime;\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(currentTime);\n                }\n                // Bug #194: Firefox does not implicitly call setValueAtTime() if there is no previous event.\n                if (Array.from(automationEventList).length === 0) {\n                    automationEventList.add(createSetValueAutomationEvent(defaultValue, currentTime));\n                    nativeAudioParam.setValueAtTime(defaultValue, currentTime);\n                }\n                automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            linearRampToValueAtTime(value, endTime) {\n                const currentTime = audioNode.context.currentTime;\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(currentTime);\n                }\n                // Bug #195: Firefox does not implicitly call setValueAtTime() if there is no previous event.\n                if (Array.from(automationEventList).length === 0) {\n                    automationEventList.add(createSetValueAutomationEvent(defaultValue, currentTime));\n                    nativeAudioParam.setValueAtTime(defaultValue, currentTime);\n                }\n                automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.linearRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            setTargetAtTime(target, startTime, timeConstant) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n                return audioParam;\n            },\n            setValueAtTime(value, startTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetValueAutomationEvent(value, startTime));\n                nativeAudioParam.setValueAtTime(value, startTime);\n                return audioParam;\n            },\n            setValueCurveAtTime(values, startTime, duration) {\n                // Bug 183: Safari only accepts a Float32Array.\n                const convertedValues = values instanceof Float32Array ? values : new Float32Array(values);\n                /*\n                 * Bug #152: Safari does not correctly interpolate the values of the curve.\n                 * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the\n                 * existence of the webkitAudioContext is used as a workaround here.\n                 */\n                if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                    const endTime = startTime + duration;\n                    const sampleRate = audioNode.context.sampleRate;\n                    const firstSample = Math.ceil(startTime * sampleRate);\n                    const lastSample = Math.floor(endTime * sampleRate);\n                    const numberOfInterpolatedValues = lastSample - firstSample;\n                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n                    for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n                        const theoreticIndex = ((convertedValues.length - 1) / duration) * ((firstSample + i) / sampleRate - startTime);\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        interpolatedValues[i] =\n                            lowerIndex === upperIndex\n                                ? convertedValues[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];\n                    }\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n                    const timeOfLastSample = lastSample / sampleRate;\n                    if (timeOfLastSample < endTime) {\n                        setValueAtTimeUntilPossible(audioParam, interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n                    }\n                    setValueAtTimeUntilPossible(audioParam, convertedValues[convertedValues.length - 1], endTime);\n                }\n                else {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(convertedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);\n                }\n                return audioParam;\n            }\n        };\n        audioParamStore.set(audioParam, nativeAudioParam);\n        audioParamAudioNodeStore.set(audioParam, audioNode);\n        addAudioParamConnections(audioParam, audioParamRenderer);\n        return audioParam;\n    };\n};\n//# sourceMappingURL=audio-param-factory.js.map","export const createAudioParamRenderer = (automationEventList) => {\n    return {\n        replay(audioParam) {\n            for (const automationEvent of automationEventList) {\n                if (automationEvent.type === 'exponentialRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.exponentialRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'linearRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.linearRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'setTarget') {\n                    const { startTime, target, timeConstant } = automationEvent;\n                    audioParam.setTargetAtTime(target, startTime, timeConstant);\n                }\n                else if (automationEvent.type === 'setValue') {\n                    const { startTime, value } = automationEvent;\n                    audioParam.setValueAtTime(value, startTime);\n                }\n                else if (automationEvent.type === 'setValueCurve') {\n                    const { duration, startTime, values } = automationEvent;\n                    audioParam.setValueCurveAtTime(values, startTime, duration);\n                }\n                else {\n                    throw new Error(\"Can't apply an unknown automation.\");\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-param-renderer.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { ReadOnlyMap } from '../read-only-map';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 1,\n    numberOfOutputs: 1,\n    parameterData: {},\n    processorOptions: {}\n};\nexport const createAudioWorkletNodeConstructor = (addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener) => {\n    return class AudioWorkletNode extends audioNodeConstructor {\n        constructor(context, name, options) {\n            var _a;\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = sanitizeAudioWorkletNodeOptions({ ...DEFAULT_OPTIONS, ...options });\n            // Bug #191: Safari doesn't throw an error if the options aren't clonable.\n            testAudioWorkletNodeOptionsClonability(mergedOptions);\n            const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n            const processorConstructor = nodeNameToProcessorConstructorMap === null || nodeNameToProcessorConstructorMap === void 0 ? void 0 : nodeNameToProcessorConstructorMap.get(name);\n            // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n            const nativeContextOrBackupOfflineAudioContext = isOffline || nativeContext.state !== 'closed'\n                ? nativeContext\n                : (_a = getBackupOfflineAudioContext(nativeContext)) !== null && _a !== void 0 ? _a : nativeContext;\n            const nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContextOrBackupOfflineAudioContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);\n            const audioWorkletNodeRenderer = ((isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null));\n            /*\n             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n             * returns false.\n             */\n            super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n            const parameters = [];\n            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n                parameters.push([nm, audioParam]);\n            });\n            this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n            this._onprocessorerror = null;\n            this._parameters = new ReadOnlyMap(parameters);\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to\n             * the destination.\n             */\n            if (isOffline) {\n                addUnrenderedAudioWorkletNode(nativeContext, this);\n            }\n            const { activeInputs } = getAudioNodeConnections(this);\n            setActiveAudioWorkletNodeInputs(nativeAudioWorkletNode, activeInputs);\n        }\n        get onprocessorerror() {\n            return this._onprocessorerror;\n        }\n        set onprocessorerror(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n            this._onprocessorerror =\n                nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener\n                    ? value\n                    : nativeOnProcessorError;\n        }\n        get parameters() {\n            if (this._parameters === null) {\n                // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                return this._nativeAudioWorkletNode.parameters;\n            }\n            return this._parameters;\n        }\n        get port() {\n            return this._nativeAudioWorkletNode.port;\n        }\n    };\n};\n//# sourceMappingURL=audio-worklet-node-constructor.js.map","import { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioWorkletProcessor } from '../helpers/get-audio-worklet-processor';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime) => {\n    // Ceil the length to the next full render quantum.\n    // Bug #17: Safari does not yet expose the length.\n    const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const processedBuffer = numberOfOutputChannels === 0\n        ? null\n        : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n    if (processorConstructor === undefined) {\n        throw new Error('Missing the processor constructor.');\n    }\n    const audioNodeConnections = getAudioNodeConnections(proxy);\n    const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n    const parameters = Array.from(proxy.parameters.keys()).reduce((prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n    for (let i = 0; i < length; i += 128) {\n        if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n                for (let k = 0; k < options.channelCount; k += 1) {\n                    copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n                }\n            }\n        }\n        if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {\n            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n        }\n        for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                // The byteLength will be 0 when the ArrayBuffer was transferred.\n                if (outputs[j][k].byteLength === 0) {\n                    outputs[j][k] = new Float32Array(128);\n                }\n            }\n        }\n        try {\n            const potentiallyEmptyInputs = inputs.map((input, index) => {\n                if (audioNodeConnections.activeInputs[index].size === 0) {\n                    return [];\n                }\n                return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n            if (processedBuffer !== null) {\n                for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                    for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                        copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[j];\n                }\n            }\n            if (!activeSourceFlag) {\n                break;\n            }\n        }\n        catch (error) {\n            proxy.dispatchEvent(new ErrorEvent('processorerror', {\n                colno: error.colno,\n                filename: error.filename,\n                lineno: error.lineno,\n                message: error.message\n            }));\n            break;\n        }\n    }\n    return processedBuffer;\n};\nexport const createAudioWorkletNodeRendererFactory = (connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (name, options, processorConstructor) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let processedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioWorkletNode = getNativeAudioNode(proxy);\n            let nativeOutputNodes = null;\n            const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext);\n            const outputChannelCount = Array.isArray(options.outputChannelCount)\n                ? options.outputChannelCount\n                : Array.from(options.outputChannelCount);\n            // Bug #61: Only Chrome, Edge & Firefox have an implementation of the AudioWorkletNode yet.\n            if (nativeAudioWorkletNodeConstructor === null) {\n                const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n                    channelCount: Math.max(1, numberOfOutputChannels),\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: Math.max(1, numberOfOutputChannels)\n                });\n                const outputChannelMergerNodes = [];\n                for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n                    outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: outputChannelCount[i]\n                    }));\n                }\n                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                });\n                outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n            }\n            else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]);\n            if (nativeOutputNodes !== null) {\n                if (processedBufferPromise === null) {\n                    if (processorConstructor === undefined) {\n                        throw new Error('Missing the processor constructor.');\n                    }\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n                    const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n                    const numberOfChannels = numberOfInputChannels + numberOfParameters;\n                    const renderBuffer = async () => {\n                        const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, \n                        // Ceil the length to the next full render quantum.\n                        // Bug #17: Safari does not yet expose the length.\n                        Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);\n                        const gainNodes = [];\n                        const inputChannelSplitterNodes = [];\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: options.channelCountMode,\n                                channelInterpretation: options.channelInterpretation,\n                                gain: 1\n                            }));\n                            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                numberOfOutputs: options.channelCount\n                            }));\n                        }\n                        const constantSourceNodes = await Promise.all(Array.from(proxy.parameters.values()).map(async (audioParam) => {\n                            const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: audioParam.value\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset);\n                            return constantSourceNode;\n                        }));\n                        const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n                        });\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n                            for (let j = 0; j < options.channelCount; j += 1) {\n                                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n                            }\n                        }\n                        for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n                            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                            constantSourceNode.start(0);\n                        }\n                        inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                        await Promise.all(gainNodes.map((gainNode) => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode)));\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    };\n                    processedBufferPromise = processBuffer(proxy, numberOfChannels === 0 ? null : await renderBuffer(), nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime);\n                }\n                const processedBuffer = await processedBufferPromise;\n                const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n                if (processedBuffer !== null) {\n                    audioBufferSourceNode.buffer = processedBuffer;\n                    audioBufferSourceNode.start(0);\n                }\n                audioBufferSourceNode.connect(outputChannelSplitterNode);\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n                return outputGainNode;\n            }\n            if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await renderAutomation(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm));\n                }\n            }\n            else {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await connectAudioParam(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm));\n                }\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode);\n            return nativeAudioWorkletNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);\n                const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-worklet-node-renderer-factory.js.map","export const createBaseAudioContextConstructor = (addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor) => {\n    return class BaseAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext, numberOfChannels);\n            this._nativeContext = _nativeContext;\n            this._audioWorklet =\n                addAudioWorkletModule === undefined\n                    ? undefined\n                    : {\n                        addModule: (moduleURL, options) => {\n                            return addAudioWorkletModule(this, moduleURL, options);\n                        }\n                    };\n        }\n        get audioWorklet() {\n            return this._audioWorklet;\n        }\n        createAnalyser() {\n            return new analyserNodeConstructor(this);\n        }\n        createBiquadFilter() {\n            return new biquadFilterNodeConstructor(this);\n        }\n        createBuffer(numberOfChannels, length, sampleRate) {\n            return new audioBufferConstructor({ length, numberOfChannels, sampleRate });\n        }\n        createBufferSource() {\n            return new audioBufferSourceNodeConstructor(this);\n        }\n        createChannelMerger(numberOfInputs = 6) {\n            return new channelMergerNodeConstructor(this, { numberOfInputs });\n        }\n        createChannelSplitter(numberOfOutputs = 6) {\n            return new channelSplitterNodeConstructor(this, { numberOfOutputs });\n        }\n        createConstantSource() {\n            return new constantSourceNodeConstructor(this);\n        }\n        createConvolver() {\n            return new convolverNodeConstructor(this);\n        }\n        createDelay(maxDelayTime = 1) {\n            return new delayNodeConstructor(this, { maxDelayTime });\n        }\n        createDynamicsCompressor() {\n            return new dynamicsCompressorNodeConstructor(this);\n        }\n        createGain() {\n            return new gainNodeConstructor(this);\n        }\n        createIIRFilter(feedforward, feedback) {\n            return new iIRFilterNodeConstructor(this, { feedback, feedforward });\n        }\n        createOscillator() {\n            return new oscillatorNodeConstructor(this);\n        }\n        createPanner() {\n            return new pannerNodeConstructor(this);\n        }\n        createPeriodicWave(real, imag, constraints = { disableNormalization: false }) {\n            return new periodicWaveConstructor(this, { ...constraints, imag, real });\n        }\n        createStereoPanner() {\n            return new stereoPannerNodeConstructor(this);\n        }\n        createWaveShaper() {\n            return new waveShaperNodeConstructor(this);\n        }\n        decodeAudioData(audioData, successCallback, errorCallback) {\n            return decodeAudioData(this._nativeContext, audioData).then((audioBuffer) => {\n                if (typeof successCallback === 'function') {\n                    successCallback(audioBuffer);\n                }\n                return audioBuffer;\n            }, (err) => {\n                if (typeof errorCallback === 'function') {\n                    errorCallback(err);\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=base-audio-context-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    Q: 1,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 350,\n    gain: 0,\n    type: 'lowpass'\n};\nexport const createBiquadFilterNodeConstructor = (audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class BiquadFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const biquadFilterNodeRenderer = (isOffline ? createBiquadFilterNodeRenderer() : null);\n            super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);\n            // Bug #80: Safari does not export the correct values for maxValue and minValue.\n            this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // Bug #78: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT), -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT));\n            // Bug #77: Firefox & Safari do not export the correct value for minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0);\n            // Bug #79: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT), MOST_NEGATIVE_SINGLE_FLOAT);\n            this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get gain() {\n            return this._gain;\n        }\n        get Q() {\n            return this._Q;\n        }\n        get type() {\n            return this._nativeBiquadFilterNode.type;\n        }\n        set type(value) {\n            this._nativeBiquadFilterNode.type = value;\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            // Bug #189: Safari does throw an InvalidStateError.\n            try {\n                this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n            }\n            catch (err) {\n                if (err.code === 11) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            // Bug #68: Safari does not throw an error if the parameters differ in their length.\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n        }\n    };\n};\n//# sourceMappingURL=biquad-filter-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createBiquadFilterNodeRendererFactory = (connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeBiquadFilterNodes = new WeakMap();\n        const createBiquadFilterNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeBiquadFilterNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeBiquadFilterNodeIsOwnedByContext = isOwnedByContext(nativeBiquadFilterNode, nativeOfflineAudioContext);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                const options = {\n                    Q: nativeBiquadFilterNode.Q.value,\n                    channelCount: nativeBiquadFilterNode.channelCount,\n                    channelCountMode: nativeBiquadFilterNode.channelCountMode,\n                    channelInterpretation: nativeBiquadFilterNode.channelInterpretation,\n                    detune: nativeBiquadFilterNode.detune.value,\n                    frequency: nativeBiquadFilterNode.frequency.value,\n                    gain: nativeBiquadFilterNode.gain.value,\n                    type: nativeBiquadFilterNode.type\n                };\n                nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode);\n            return nativeBiquadFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeBiquadFilterNode !== undefined) {\n                    return Promise.resolve(renderedNativeBiquadFilterNode);\n                }\n                return createBiquadFilterNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=biquad-filter-node-renderer-factory.js.map","export const createCacheTestResult = (ongoingTests, testResults) => {\n    return (tester, test) => {\n        const cachedTestResult = testResults.get(tester);\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n        const ongoingTest = ongoingTests.get(tester);\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n        try {\n            const synchronousTestResult = test();\n            if (synchronousTestResult instanceof Promise) {\n                ongoingTests.set(tester, synchronousTestResult);\n                return synchronousTestResult\n                    .catch(() => false)\n                    .then((finalTestResult) => {\n                    ongoingTests.delete(tester);\n                    testResults.set(tester, finalTestResult);\n                    return finalTestResult;\n                });\n            }\n            testResults.set(tester, synchronousTestResult);\n            return synchronousTestResult;\n        }\n        catch {\n            testResults.set(tester, false);\n            return false;\n        }\n    };\n};\n//# sourceMappingURL=cache-test-result.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n};\nexport const createChannelMergerNodeConstructor = (audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ChannelMergerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null));\n            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=channel-merger-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelMergerNodeRendererFactory = (createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfInputs: nativeAudioNode.numberOfInputs\n                };\n                nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=channel-merger-node-renderer-factory.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 6,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'discrete',\n    numberOfOutputs: 6\n};\nexport const createChannelSplitterNodeConstructor = (audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions) => {\n    return class ChannelSplitterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizeChannelSplitterOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n            const channelSplitterNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null));\n            super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=channel-splitter-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelSplitterNodeRendererFactory = (createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfOutputs: nativeAudioNode.numberOfOutputs\n                };\n                nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=channel-splitter-node-renderer-factory.js.map","export const createConnectAudioParam = (renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n//# sourceMappingURL=connect-audio-param.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const createConnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destination, output = 0, input = 0) => {\n        const outputAudioNode = outputAudioNodes[output];\n        if (outputAudioNode === undefined) {\n            throw createIndexSizeError();\n        }\n        if (isNativeAudioNode(destination)) {\n            return outputAudioNode.connect(destination, 0, input);\n        }\n        return outputAudioNode.connect(destination, 0);\n    };\n};\n//# sourceMappingURL=connect-multiple-outputs.js.map","export const createConnectedNativeAudioBufferSourceNodeFactory = (createNativeAudioBufferSourceNode) => {\n    return (nativeContext, nativeAudioNode) => {\n        const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        nativeAudioBufferSourceNode.loop = true;\n        nativeAudioBufferSourceNode.connect(nativeAudioNode);\n        nativeAudioBufferSourceNode.start();\n        return () => {\n            nativeAudioBufferSourceNode.stop();\n            nativeAudioBufferSourceNode.disconnect(nativeAudioNode);\n        };\n    };\n};\n//# sourceMappingURL=connected-native-audio-buffer-source-node-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    offset: 1\n};\nexport const createConstantSourceNodeConstructor = (audioNodeConstructor, createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class ConstantSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const constantSourceNodeRenderer = ((isOffline ? createConstantSourceNodeRendererFactory() : null));\n            super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);\n            this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n            this._nativeConstantSourceNode = nativeConstantSourceNode;\n            /*\n             * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and minValue\n             * for GainNodes.\n             */\n            this._offset = createAudioParam(this, isOffline, nativeConstantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._onended = null;\n        }\n        get offset() {\n            return this._offset;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeConstantSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeConstantSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        start(when = 0) {\n            this._nativeConstantSourceNode.start(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.start = when;\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeConstantSourceNode.stop(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=constant-source-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConstantSourceNodeRendererFactory = (connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConstantSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createConstantSourceNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeConstantSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeConstantSourceNode.channelCount,\n                    channelCountMode: nativeConstantSourceNode.channelCountMode,\n                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n                    offset: nativeConstantSourceNode.offset.value\n                };\n                nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeConstantSourceNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeConstantSourceNode.stop(stop);\n                }\n            }\n            renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode);\n            return nativeConstantSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConstantSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeConstantSourceNode);\n                }\n                return createConstantSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=constant-source-node-renderer-factory.js.map","export const createConvertNumberToUnsignedLong = (unit32Array) => {\n    return (value) => {\n        unit32Array[0] = value;\n        return unit32Array[0];\n    };\n};\n//# sourceMappingURL=convert-number-to-unsigned-long.js.map","const DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    disableNormalization: false\n};\nexport const createConvolverNodeConstructor = (audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class ConvolverNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const convolverNodeRenderer = (isOffline ? createConvolverNodeRenderer() : null);\n            super(context, false, nativeConvolverNode, convolverNodeRenderer);\n            this._isBufferNullified = false;\n            this._nativeConvolverNode = nativeConvolverNode;\n            if (mergedOptions.buffer !== null) {\n                setAudioNodeTailTime(this, mergedOptions.buffer.duration);\n            }\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeConvolverNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeConvolverNode.buffer = value;\n            // Bug #115: Safari does not allow to set the buffer to null.\n            if (value === null && this._nativeConvolverNode.buffer !== null) {\n                const nativeContext = this._nativeConvolverNode.context;\n                this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);\n                this._isBufferNullified = true;\n                setAudioNodeTailTime(this, 0);\n            }\n            else {\n                this._isBufferNullified = false;\n                setAudioNodeTailTime(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);\n            }\n        }\n        get normalize() {\n            return this._nativeConvolverNode.normalize;\n        }\n        set normalize(value) {\n            this._nativeConvolverNode.normalize = value;\n        }\n    };\n};\n//# sourceMappingURL=convolver-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConvolverNodeRendererFactory = (createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConvolverNodes = new WeakMap();\n        const createConvolverNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeConvolverNode = getNativeAudioNode(proxy);\n            // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);\n            if (!nativeConvolverNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeConvolverNode.buffer,\n                    channelCount: nativeConvolverNode.channelCount,\n                    channelCountMode: nativeConvolverNode.channelCountMode,\n                    channelInterpretation: nativeConvolverNode.channelInterpretation,\n                    disableNormalization: !nativeConvolverNode.normalize\n                };\n                nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n            if (isNativeAudioNodeFaker(nativeConvolverNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode);\n            }\n            return nativeConvolverNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConvolverNode !== undefined) {\n                    return Promise.resolve(renderedNativeConvolverNode);\n                }\n                return createConvolverNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=convolver-node-renderer-factory.js.map","export const createCreateNativeOfflineAudioContext = (createNotSupportedError, nativeOfflineAudioContextConstructor) => {\n    return (numberOfChannels, length, sampleRate) => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        try {\n            return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);\n        }\n        catch (err) {\n            // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.\n            if (err.name === 'SyntaxError') {\n                throw createNotSupportedError();\n            }\n            throw err;\n        }\n    };\n};\n//# sourceMappingURL=create-native-offline-audio-context.js.map","export const createDataCloneError = () => new DOMException('', 'DataCloneError');\n//# sourceMappingURL=data-clone-error.js.map","import { detachArrayBuffer } from '../helpers/detach-array-buffer';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createDecodeAudioData = (audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, detachedArrayBuffers, getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    return (anyContext, audioData) => {\n        const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext);\n        // Bug #43: Only Chrome and Edge do throw a DataCloneError.\n        if (detachedArrayBuffers.has(audioData)) {\n            const err = createDataCloneError();\n            return Promise.reject(err);\n        }\n        // The audioData parameter maybe of a type which can't be added to a WeakSet.\n        try {\n            detachedArrayBuffers.add(audioData);\n        }\n        catch {\n            // Ignore errors.\n        }\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {\n            return nativeContext.decodeAudioData(audioData).then((audioBuffer) => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                detachArrayBuffer(audioData).catch(() => {\n                    // Ignore errors.\n                });\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n                if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n                audioBufferStore.add(audioBuffer);\n                return audioBuffer;\n            });\n        }\n        // Bug #21: Safari does not return a Promise yet.\n        return new Promise((resolve, reject) => {\n            const complete = async () => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                try {\n                    await detachArrayBuffer(audioData);\n                }\n                catch {\n                    // Ignore errors.\n                }\n            };\n            const fail = (err) => {\n                reject(err);\n                complete();\n            };\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                // Bug #1: Safari requires a successCallback.\n                nativeContext.decodeAudioData(audioData, (audioBuffer) => {\n                    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                    // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                    if (typeof audioBuffer.copyFromChannel !== 'function') {\n                        wrapAudioBufferCopyChannelMethods(audioBuffer);\n                        wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                    }\n                    audioBufferStore.add(audioBuffer);\n                    complete().then(() => resolve(audioBuffer));\n                }, (err) => {\n                    // Bug #4: Safari returns null instead of an error.\n                    if (err === null) {\n                        fail(createEncodingError());\n                    }\n                    else {\n                        fail(err);\n                    }\n                });\n            }\n            catch (err) {\n                fail(err);\n            }\n        });\n    };\n};\n//# sourceMappingURL=decode-audio-data.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) => {\n    return (audioNode, count) => {\n        const cycleCounter = cycleCounters.get(audioNode);\n        if (cycleCounter === undefined) {\n            throw new Error('Missing the expected cycle count.');\n        }\n        const nativeContext = getNativeContext(audioNode.context);\n        const isOffline = isNativeOfflineAudioContext(nativeContext);\n        if (cycleCounter === count) {\n            cycleCounters.delete(audioNode);\n            if (!isOffline && isActiveAudioNode(audioNode)) {\n                const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                const { outputs } = getAudioNodeConnections(audioNode);\n                for (const output of outputs) {\n                    if (isAudioNodeOutputConnection(output)) {\n                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                    }\n                    else {\n                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                        nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n                    }\n                }\n            }\n        }\n        else {\n            cycleCounters.set(audioNode, cycleCounter - count);\n        }\n    };\n};\n//# sourceMappingURL=decrement-cycle-counter.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    delayTime: 0,\n    maxDelayTime: 1\n};\nexport const createDelayNodeConstructor = (audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class DelayNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const delayNodeRenderer = (isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null);\n            super(context, false, nativeDelayNode, delayNodeRenderer);\n            this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime);\n            setAudioNodeTailTime(this, mergedOptions.maxDelayTime);\n        }\n        get delayTime() {\n            return this._delayTime;\n        }\n    };\n};\n//# sourceMappingURL=delay-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDelayNodeRendererFactory = (connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return (maxDelayTime) => {\n        const renderedNativeDelayNodes = new WeakMap();\n        const createDelayNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeDelayNode = getNativeAudioNode(proxy);\n            // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeDelayNodeIsOwnedByContext = isOwnedByContext(nativeDelayNode, nativeOfflineAudioContext);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeDelayNode.channelCount,\n                    channelCountMode: nativeDelayNode.channelCountMode,\n                    channelInterpretation: nativeDelayNode.channelInterpretation,\n                    delayTime: nativeDelayNode.delayTime.value,\n                    maxDelayTime\n                };\n                nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode);\n            return nativeDelayNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDelayNode !== undefined) {\n                    return Promise.resolve(renderedNativeDelayNode);\n                }\n                return createDelayNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=delay-node-renderer-factory.js.map","export const createDeleteActiveInputConnectionToAudioNode = (pickElementFromSet) => {\n    return (activeInputs, source, output, input) => {\n        return pickElementFromSet(activeInputs[input], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n    };\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-node.js.map","export const createDeleteUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=delete-unrendered-audio-worklet-node.js.map","import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nexport const createDetectCycles = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n    return function detectCycles(chain, nextLink) {\n        const audioNode = isAudioNode(nextLink) ? nextLink : getValueForKey(audioParamAudioNodeStore, nextLink);\n        if (isDelayNode(audioNode)) {\n            return [];\n        }\n        if (chain[0] === audioNode) {\n            return [chain];\n        }\n        if (chain.includes(audioNode)) {\n            return [];\n        }\n        const { outputs } = getAudioNodeConnections(audioNode);\n        return Array.from(outputs)\n            .map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0]))\n            .reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n    };\n};\n//# sourceMappingURL=detect-cycles.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nconst getOutputAudioNodeAtIndex = (createIndexSizeError, outputAudioNodes, output) => {\n    const outputAudioNode = outputAudioNodes[output];\n    if (outputAudioNode === undefined) {\n        throw createIndexSizeError();\n    }\n    return outputAudioNode;\n};\nexport const createDisconnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n        if (destinationOrOutput === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect());\n        }\n        if (typeof destinationOrOutput === 'number') {\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();\n        }\n        if (isNativeAudioNode(destinationOrOutput)) {\n            if (output === undefined) {\n                return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n            }\n            if (input === undefined) {\n                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n            }\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n        }\n        if (output === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n        }\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n    };\n};\n//# sourceMappingURL=disconnect-multiple-outputs.js.map","const DEFAULT_OPTIONS = {\n    attack: 0.003,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    knee: 30,\n    ratio: 12,\n    release: 0.25,\n    threshold: -24\n};\nexport const createDynamicsCompressorNodeConstructor = (audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class DynamicsCompressorNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const dynamicsCompressorNodeRenderer = (isOffline ? createDynamicsCompressorNodeRenderer() : null);\n            super(context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);\n            this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack);\n            this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee);\n            this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;\n            this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio);\n            this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release);\n            this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold);\n            setAudioNodeTailTime(this, 0.006);\n        }\n        get attack() {\n            return this._attack;\n        }\n        // Bug #108: Safari allows a channelCount of three and above which is why the getter and setter needs to be overwritten here.\n        get channelCount() {\n            return this._nativeDynamicsCompressorNode.channelCount;\n        }\n        set channelCount(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;\n            this._nativeDynamicsCompressorNode.channelCount = value;\n            if (value > 2) {\n                this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        /*\n         * Bug #109: Only Chrome and Firefox disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be\n         * overwritten here.\n         */\n        get channelCountMode() {\n            return this._nativeDynamicsCompressorNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;\n            this._nativeDynamicsCompressorNode.channelCountMode = value;\n            if (value === 'max') {\n                this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        get knee() {\n            return this._knee;\n        }\n        get ratio() {\n            return this._ratio;\n        }\n        get reduction() {\n            // Bug #111: Safari returns an AudioParam instead of a number.\n            if (typeof this._nativeDynamicsCompressorNode.reduction.value === 'number') {\n                return this._nativeDynamicsCompressorNode.reduction.value;\n            }\n            return this._nativeDynamicsCompressorNode.reduction;\n        }\n        get release() {\n            return this._release;\n        }\n        get threshold() {\n            return this._threshold;\n        }\n    };\n};\n//# sourceMappingURL=dynamics-compressor-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDynamicsCompressorNodeRendererFactory = (connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeDynamicsCompressorNodes = new WeakMap();\n        const createDynamicsCompressorNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeDynamicsCompressorNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be\n             * created again.\n             */\n            const nativeDynamicsCompressorNodeIsOwnedByContext = isOwnedByContext(nativeDynamicsCompressorNode, nativeOfflineAudioContext);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                const options = {\n                    attack: nativeDynamicsCompressorNode.attack.value,\n                    channelCount: nativeDynamicsCompressorNode.channelCount,\n                    channelCountMode: nativeDynamicsCompressorNode.channelCountMode,\n                    channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,\n                    knee: nativeDynamicsCompressorNode.knee.value,\n                    ratio: nativeDynamicsCompressorNode.ratio.value,\n                    release: nativeDynamicsCompressorNode.release.value,\n                    threshold: nativeDynamicsCompressorNode.threshold.value\n                };\n                nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);\n                await renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);\n                await renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);\n                await renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);\n                await renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n            return nativeDynamicsCompressorNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDynamicsCompressorNode !== undefined) {\n                    return Promise.resolve(renderedNativeDynamicsCompressorNode);\n                }\n                return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=dynamics-compressor-node-renderer-factory.js.map","export const createEncodingError = () => new DOMException('', 'EncodingError');\n//# sourceMappingURL=encoding-error.js.map","export const createEvaluateSource = (window) => {\n    return (source) => new Promise((resolve, reject) => {\n        if (window === null) {\n            // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n            return;\n        }\n        const head = window.document.head;\n        if (head === null) {\n            // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n        }\n        else {\n            const script = window.document.createElement('script');\n            // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n            const blob = new Blob([source], { type: 'application/javascript' });\n            const url = URL.createObjectURL(blob);\n            const originalOnErrorHandler = window.onerror;\n            const removeErrorEventListenerAndRevokeUrl = () => {\n                window.onerror = originalOnErrorHandler;\n                URL.revokeObjectURL(url);\n            };\n            window.onerror = (message, src, lineno, colno, error) => {\n                // @todo Edge thinks the source is the one of the html document.\n                if (src === url || (src === window.location.href && lineno === 1 && colno === 1)) {\n                    removeErrorEventListenerAndRevokeUrl();\n                    reject(error);\n                    return false;\n                }\n                if (originalOnErrorHandler !== null) {\n                    return originalOnErrorHandler(message, src, lineno, colno, error);\n                }\n            };\n            script.onerror = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n            };\n            script.onload = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                resolve();\n            };\n            script.src = url;\n            script.type = 'module';\n            head.appendChild(script);\n        }\n    });\n};\n//# sourceMappingURL=evaluate-source.js.map","export const createEventTargetConstructor = (wrapEventListener) => {\n    return class EventTarget {\n        constructor(_nativeEventTarget) {\n            this._nativeEventTarget = _nativeEventTarget;\n            this._listeners = new WeakMap();\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=event-target-constructor.js.map","export const createExposeCurrentFrameAndCurrentTime = (window) => {\n    return (currentTime, sampleRate, fn) => {\n        Object.defineProperties(window, {\n            currentFrame: {\n                configurable: true,\n                get() {\n                    return Math.round(currentTime * sampleRate);\n                }\n            },\n            currentTime: {\n                configurable: true,\n                get() {\n                    return currentTime;\n                }\n            }\n        });\n        try {\n            return fn();\n        }\n        finally {\n            if (window !== null) {\n                delete window.currentFrame;\n                delete window.currentTime;\n            }\n        }\n    };\n};\n//# sourceMappingURL=expose-current-frame-and-current-time.js.map","export const createFetchSource = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n            if (response.ok) {\n                return [await response.text(), response.url];\n            }\n        }\n        catch {\n            // Ignore errors.\n        } // tslint:disable-line:no-empty\n        throw createAbortError();\n    };\n};\n//# sourceMappingURL=fetch-source.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    gain: 1\n};\nexport const createGainNodeConstructor = (audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class GainNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const gainNodeRenderer = (isOffline ? createGainNodeRenderer() : null);\n            super(context, false, nativeGainNode, gainNodeRenderer);\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get gain() {\n            return this._gain;\n        }\n    };\n};\n//# sourceMappingURL=gain-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createGainNodeRendererFactory = (connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeGainNodes = new WeakMap();\n        const createGainNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeGainNode = getNativeAudioNode(proxy);\n            // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeGainNodeIsOwnedByContext = isOwnedByContext(nativeGainNode, nativeOfflineAudioContext);\n            if (!nativeGainNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeGainNode.channelCount,\n                    channelCountMode: nativeGainNode.channelCountMode,\n                    channelInterpretation: nativeGainNode.channelInterpretation,\n                    gain: nativeGainNode.gain.value\n                };\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);\n            if (!nativeGainNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode);\n            return nativeGainNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNode);\n                }\n                return createGainNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=gain-node-renderer-factory.js.map","export const createGetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore, getValueForKey) => {\n    return (nativeAudioWorkletNode) => getValueForKey(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-active-audio-worklet-node-inputs.js.map","export const createGetAudioNodeRenderer = (getAudioNodeConnections) => {\n    return (audioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n        return audioNodeConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-node-renderer.js.map","export const createGetAudioNodeTailTime = (audioNodeTailTimeStore) => {\n    return (audioNode) => { var _a; return (_a = audioNodeTailTimeStore.get(audioNode)) !== null && _a !== void 0 ? _a : 0; };\n};\n//# sourceMappingURL=get-audio-node-tail-time.js.map","export const createGetAudioParamRenderer = (getAudioParamConnections) => {\n    return (audioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n        }\n        return audioParamConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-param-renderer.js.map","export const createGetBackupOfflineAudioContext = (backupOfflineAudioContextStore) => {\n    return (nativeContext) => {\n        return backupOfflineAudioContextStore.get(nativeContext);\n    };\n};\n//# sourceMappingURL=get-backup-offline-audio-context.js.map","import { createInvalidStateError } from './invalid-state-error';\nexport const createGetNativeContext = (contextStore) => {\n    return (context) => {\n        const nativeContext = contextStore.get(context);\n        if (nativeContext === undefined) {\n            throw createInvalidStateError();\n        }\n        return (nativeContext);\n    };\n};\n//# sourceMappingURL=get-native-context.js.map","export const createGetOrCreateBackupOfflineAudioContext = (backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor) => {\n    return (nativeContext) => {\n        let backupOfflineAudioContext = backupOfflineAudioContextStore.get(nativeContext);\n        if (backupOfflineAudioContext !== undefined) {\n            return backupOfflineAudioContext;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        backupOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        backupOfflineAudioContextStore.set(nativeContext, backupOfflineAudioContext);\n        return backupOfflineAudioContext;\n    };\n};\n//# sourceMappingURL=get-or-create-backup-offline-audio-context.js.map","export const createGetUnrenderedAudioWorkletNodes = (unrenderedAudioWorkletNodeStore) => {\n    return (nativeContext) => {\n        const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);\n        if (unrenderedAudioWorkletNodes === undefined) {\n            throw new Error('The context has no set of AudioWorkletNodes.');\n        }\n        return unrenderedAudioWorkletNodes;\n    };\n};\n//# sourceMappingURL=get-unrendered-audio-worklet-nodes.js.map","import { wrapIIRFilterNodeGetFrequencyResponseMethod } from '../helpers/wrap-iir-filter-node-get-frequency-response-method';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers'\n};\nexport const createIIRFilterNodeConstructor = (audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class IIRFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);\n            const iirFilterNodeRenderer = ((isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null));\n            super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer);\n            // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n            // @todo Write a test which allows other browsers to remain unpatched.\n            wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n            this._nativeIIRFilterNode = nativeIIRFilterNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n        }\n    };\n};\n//# sourceMappingURL=iir-filter-node-constructor.js.map","import { filterBuffer } from '../helpers/filter-buffer';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst filterFullBuffer = (renderedBuffer, nativeOfflineAudioContext, feedback, feedforward) => {\n    const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n    const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n    const feedbackLength = convertedFeedback.length;\n    const feedforwardLength = convertedFeedforward.length;\n    const minLength = Math.min(feedbackLength, feedforwardLength);\n    if (convertedFeedback[0] !== 1) {\n        for (let i = 0; i < feedbackLength; i += 1) {\n            convertedFeedforward[i] /= convertedFeedback[0];\n        }\n        for (let i = 1; i < feedforwardLength; i += 1) {\n            convertedFeedback[i] /= convertedFeedback[0];\n        }\n    }\n    const bufferLength = 32;\n    const xBuffer = new Float32Array(bufferLength);\n    const yBuffer = new Float32Array(bufferLength);\n    const filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);\n    const numberOfChannels = renderedBuffer.numberOfChannels;\n    for (let i = 0; i < numberOfChannels; i += 1) {\n        const input = renderedBuffer.getChannelData(i);\n        const output = filteredBuffer.getChannelData(i);\n        xBuffer.fill(0);\n        yBuffer.fill(0);\n        filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);\n    }\n    return filteredBuffer;\n};\nexport const createIIRFilterNodeRendererFactory = (createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (feedback, feedforward) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let filteredBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioBufferSourceNode = null;\n            let nativeIIRFilterNode = getNativeAudioNode(proxy);\n            // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeIIRFilterNodeIsOwnedByContext = isOwnedByContext(nativeIIRFilterNode, nativeOfflineAudioContext);\n            // Bug #9: Safari does not support IIRFilterNodes.\n            if (nativeOfflineAudioContext.createIIRFilter === undefined) {\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n            }\n            else if (!nativeIIRFilterNodeIsOwnedByContext) {\n                // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n                nativeIIRFilterNode = nativeOfflineAudioContext.createIIRFilter(feedforward, feedback);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode);\n            if (nativeAudioBufferSourceNode !== null) {\n                if (filteredBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    proxy.context.destination.channelCount, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    filteredBufferPromise = (async () => {\n                        await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination);\n                        const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                        return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);\n                    })();\n                }\n                const filteredBuffer = await filteredBufferPromise;\n                nativeAudioBufferSourceNode.buffer = filteredBuffer;\n                nativeAudioBufferSourceNode.start(0);\n                return nativeAudioBufferSourceNode;\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode);\n            return nativeIIRFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=iir-filter-node-renderer-factory.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) => {\n    return (isOffline) => {\n        return (audioNode, count) => {\n            const cycleCounter = cycleCounters.get(audioNode);\n            if (cycleCounter === undefined) {\n                if (!isOffline && isActiveAudioNode(audioNode)) {\n                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                    const { outputs } = getAudioNodeConnections(audioNode);\n                    for (const output of outputs) {\n                        if (isAudioNodeOutputConnection(output)) {\n                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                            disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                        }\n                        else {\n                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n                        }\n                    }\n                }\n                cycleCounters.set(audioNode, count);\n            }\n            else {\n                cycleCounters.set(audioNode, cycleCounter + count);\n            }\n        };\n    };\n};\n//# sourceMappingURL=increment-cycle-counter-factory.js.map","export const createIndexSizeError = () => new DOMException('', 'IndexSizeError');\n//# sourceMappingURL=index-size-error.js.map","export const createInvalidAccessError = () => new DOMException('', 'InvalidAccessError');\n//# sourceMappingURL=invalid-access-error.js.map","export const createInvalidStateError = () => new DOMException('', 'InvalidStateError');\n//# sourceMappingURL=invalid-state-error.js.map","export const createIsAnyAudioContext = (contextStore, isNativeAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-any-audio-context.js.map","export const createIsAnyAudioNode = (audioNodeStore, isNativeAudioNode) => {\n    return (anything) => audioNodeStore.has(anything) || isNativeAudioNode(anything);\n};\n//# sourceMappingURL=is-any-audio-node.js.map","export const createIsAnyAudioParam = (audioParamStore, isNativeAudioParam) => {\n    return (anything) => audioParamStore.has(anything) || isNativeAudioParam(anything);\n};\n//# sourceMappingURL=is-any-audio-param.js.map","export const createIsAnyOfflineAudioContext = (contextStore, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-any-offline-audio-context.js.map","export const createIsNativeAudioContext = (nativeAudioContextConstructor) => {\n    return (anything) => {\n        return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-audio-context.js.map","export const createIsNativeAudioNode = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;\n    };\n};\n//# sourceMappingURL=is-native-audio-node.js.map","export const createIsNativeAudioParam = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;\n    };\n};\n//# sourceMappingURL=is-native-audio-param.js.map","export const createIsNativeContext = (isNativeAudioContext, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-native-context.js.map","export const createIsNativeOfflineAudioContext = (nativeOfflineAudioContextConstructor) => {\n    return (anything) => {\n        return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-offline-audio-context.js.map","export const createIsSecureContext = (window) => window !== null && window.isSecureContext;\n//# sourceMappingURL=is-secure-context.js.map","export const createIsSupportedPromise = async (cacheTestResult, testAudioBufferCopyChannelMethodsSubarraySupport, testAudioContextCloseMethodSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextOptionsSupport, testAudioNodeConnectMethodSupport, testAudioWorkletProcessorNoOutputsSupport, testChannelMergerNodeChannelCountSupport, testConstantSourceNodeAccurateSchedulingSupport, testConvolverNodeBufferReassignabilitySupport, testConvolverNodeChannelCountSupport, testDomExceptionContrucorSupport, testIsSecureContextSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testStereoPannerNodeDefaultValueSupport, testTransferablesSupport) => {\n    if (cacheTestResult(testAudioBufferCopyChannelMethodsSubarraySupport, testAudioBufferCopyChannelMethodsSubarraySupport) &&\n        cacheTestResult(testAudioContextCloseMethodSupport, testAudioContextCloseMethodSupport) &&\n        cacheTestResult(testAudioContextOptionsSupport, testAudioContextOptionsSupport) &&\n        cacheTestResult(testAudioNodeConnectMethodSupport, testAudioNodeConnectMethodSupport) &&\n        cacheTestResult(testChannelMergerNodeChannelCountSupport, testChannelMergerNodeChannelCountSupport) &&\n        cacheTestResult(testConstantSourceNodeAccurateSchedulingSupport, testConstantSourceNodeAccurateSchedulingSupport) &&\n        cacheTestResult(testConvolverNodeBufferReassignabilitySupport, testConvolverNodeBufferReassignabilitySupport) &&\n        cacheTestResult(testConvolverNodeChannelCountSupport, testConvolverNodeChannelCountSupport) &&\n        cacheTestResult(testDomExceptionContrucorSupport, testDomExceptionContrucorSupport) &&\n        cacheTestResult(testIsSecureContextSupport, testIsSecureContextSupport) &&\n        cacheTestResult(testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport)) {\n        const results = await Promise.all([\n            cacheTestResult(testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport),\n            cacheTestResult(testAudioWorkletProcessorNoOutputsSupport, testAudioWorkletProcessorNoOutputsSupport),\n            cacheTestResult(testStereoPannerNodeDefaultValueSupport, testStereoPannerNodeDefaultValueSupport),\n            cacheTestResult(testTransferablesSupport, testTransferablesSupport)\n        ]);\n        return results.every((result) => result);\n    }\n    return false;\n};\n//# sourceMappingURL=is-supported-promise.js.map","export const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaElementAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw TypeError();\n            }\n            super(context, true, nativeMediaElementAudioSourceNode, null);\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n        get mediaElement() {\n            return this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n//# sourceMappingURL=media-element-audio-source-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers'\n};\nexport const createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioDestinationNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n            super(context, false, nativeMediaStreamAudioDestinationNode, null);\n            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n        }\n        get stream() {\n            return this._nativeMediaStreamAudioDestinationNode.stream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-destination-node-constructor.js.map","export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            super(context, true, nativeMediaStreamAudioSourceNode, null);\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n        get mediaStream() {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-source-node-constructor.js.map","export const createMediaStreamTrackAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext) => {\n    return class MediaStreamTrackAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n            super(context, true, nativeMediaStreamTrackAudioSourceNode, null);\n        }\n    };\n};\n//# sourceMappingURL=media-stream-track-audio-source-node-constructor.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createMinimalAudioContextConstructor = (createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor) => {\n    return class MinimalAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            let nativeAudioContext;\n            try {\n                nativeAudioContext = new nativeAudioContextConstructor(options);\n            }\n            catch (err) {\n                // Bug #192 Safari does throw a SyntaxError if the sampleRate is not supported.\n                if (err.code === 12 && err.message === 'sampleRate is not in range') {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome and Edge throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                        ? 512 / sampleRate\n                        : latencyHint === 'interactive' || latencyHint === undefined\n                            ? 256 / sampleRate\n                            : latencyHint === 'playback'\n                                ? 1024 / sampleRate\n                                : /*\n                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                                   * ScriptProcessorNode.\n                                   */\n                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n                this._nativeGainNode.gain.value = 1e-37;\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            }\n            else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n            this._state = null;\n            /*\n             * Bug #34: Chrome and Edge pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n                deactivateAudioGraph(this);\n            });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome and Edge do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=minimal-audio-context-constructor.js.map","import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {\n    return class MinimalBaseAudioContext extends eventTargetConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext);\n            this._nativeContext = _nativeContext;\n            CONTEXT_STORE.set(this, _nativeContext);\n            if (isNativeOfflineAudioContext(_nativeContext)) {\n                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n            }\n            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n            this._listener = createAudioListener(this, _nativeContext);\n            this._onstatechange = null;\n        }\n        get currentTime() {\n            return this._nativeContext.currentTime;\n        }\n        get destination() {\n            return this._destination;\n        }\n        get listener() {\n            return this._listener;\n        }\n        get onstatechange() {\n            return this._onstatechange;\n        }\n        set onstatechange(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeContext.onstatechange = wrappedListener;\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n            this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n        }\n        get sampleRate() {\n            return this._nativeContext.sampleRate;\n        }\n        get state() {\n            return this._nativeContext.state;\n        }\n    };\n};\n//# sourceMappingURL=minimal-base-audio-context-constructor.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createMinimalOfflineAudioContextConstructor = (cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering) => {\n    return class MinimalOfflineAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(options) {\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n                deactivateAudioGraph(this);\n            });\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=minimal-offline-audio-context-constructor.js.map","export const createMonitorConnections = (insertElementInSet, isNativeAudioNode) => {\n    return (nativeAudioNode, whenConnected, whenDisconnected) => {\n        const connections = new Set();\n        nativeAudioNode.connect = ((connect) => {\n            // tslint:disable-next-line:invalid-void no-inferrable-types\n            return (destination, output = 0, input = 0) => {\n                const wasDisconnected = connections.size === 0;\n                if (isNativeAudioNode(destination)) {\n                    // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                    connect.call(nativeAudioNode, destination, output, input);\n                    insertElementInSet(connections, [destination, output, input], (connection) => connection[0] === destination && connection[1] === output && connection[2] === input, true);\n                    if (wasDisconnected) {\n                        whenConnected();\n                    }\n                    return destination;\n                }\n                connect.call(nativeAudioNode, destination, output);\n                insertElementInSet(connections, [destination, output], (connection) => connection[0] === destination && connection[1] === output, true);\n                if (wasDisconnected) {\n                    whenConnected();\n                }\n                return;\n            };\n        })(nativeAudioNode.connect);\n        nativeAudioNode.disconnect = ((disconnect) => {\n            return (destinationOrOutput, output, input) => {\n                const wasConnected = connections.size > 0;\n                if (destinationOrOutput === undefined) {\n                    disconnect.apply(nativeAudioNode);\n                    connections.clear();\n                }\n                else if (typeof destinationOrOutput === 'number') {\n                    // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                    disconnect.call(nativeAudioNode, destinationOrOutput);\n                    for (const connection of connections) {\n                        if (connection[1] === destinationOrOutput) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                else {\n                    if (isNativeAudioNode(destinationOrOutput)) {\n                        // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output, input);\n                    }\n                    else {\n                        // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output);\n                    }\n                    for (const connection of connections) {\n                        if (connection[0] === destinationOrOutput &&\n                            (output === undefined || connection[1] === output) &&\n                            (input === undefined || connection[2] === input)) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                const isDisconnected = connections.size === 0;\n                if (wasConnected && isDisconnected) {\n                    whenDisconnected();\n                }\n            };\n        })(nativeAudioNode.disconnect);\n        return nativeAudioNode;\n    };\n};\n//# sourceMappingURL=monitor-connections.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nexport const createNativeAnalyserNodeFactory = (cacheTestResult, createIndexSizeError) => {\n    return (nativeContext, options) => {\n        const nativeAnalyserNode = nativeContext.createAnalyser();\n        // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n        assignNativeAudioNodeOptions(nativeAnalyserNode, options);\n        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n        if (!(options.maxDecibels > options.minDecibels)) {\n            throw createIndexSizeError();\n        }\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant');\n        // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n        if (!cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () => testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode))) {\n            wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n        }\n        return nativeAnalyserNode;\n    };\n};\n//# sourceMappingURL=native-analyser-node-factory.js.map","export const createNativeAudioBufferConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioBuffer')) {\n        return window.AudioBuffer;\n    }\n    return null;\n};\n//# sourceMappingURL=native-audio-buffer-constructor.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioBufferSourceNodeStartMethodConsecutiveCalls } from '../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeAudioBufferSourceNodeFactory = (addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n        assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, 'playbackRate');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'buffer');\n        // Bug #149: Safari does not yet support the detune AudioParam.\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loop');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopEnd');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopStart');\n        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () => testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n        }\n        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () => testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n        }\n        // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.\n        if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () => testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeAudioBufferSourceNode);\n        return nativeAudioBufferSourceNode;\n    };\n};\n//# sourceMappingURL=native-audio-buffer-source-node-factory.js.map","export const createNativeAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioContext')) {\n        return window.AudioContext;\n    }\n    return window.hasOwnProperty('webkitAudioContext') ? window.webkitAudioContext : null;\n};\n//# sourceMappingURL=native-audio-context-constructor.js.map","export const createNativeAudioDestinationNodeFactory = (createNativeGainNode, overwriteAccessors) => {\n    return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeContext.destination;\n        // Bug #132: Safari does not have the correct channelCount.\n        if (nativeAudioDestinationNode.channelCount !== channelCount) {\n            try {\n                nativeAudioDestinationNode.channelCount = channelCount;\n            }\n            catch {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n            }\n        }\n        // Bug #83: Safari does not have the correct channelCountMode.\n        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n            nativeAudioDestinationNode.channelCountMode = 'explicit';\n        }\n        // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n        if (nativeAudioDestinationNode.maxChannelCount === 0) {\n            Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n                value: channelCount\n            });\n        }\n        // Bug #168: No browser does yet have an AudioDestinationNode with an output.\n        const gainNode = createNativeGainNode(nativeContext, {\n            channelCount,\n            channelCountMode: nativeAudioDestinationNode.channelCountMode,\n            channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n            gain: 1\n        });\n        overwriteAccessors(gainNode, 'channelCount', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            try {\n                nativeAudioDestinationNode.channelCount = value;\n            }\n            catch (err) {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n                if (value > nativeAudioDestinationNode.maxChannelCount) {\n                    throw err;\n                }\n            }\n        });\n        overwriteAccessors(gainNode, 'channelCountMode', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelCountMode = value;\n        });\n        overwriteAccessors(gainNode, 'channelInterpretation', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelInterpretation = value;\n        });\n        Object.defineProperty(gainNode, 'maxChannelCount', {\n            get: () => nativeAudioDestinationNode.maxChannelCount\n        });\n        // @todo This should be disconnected when the context is closed.\n        gainNode.connect(nativeAudioDestinationNode);\n        return gainNode;\n    };\n};\n//# sourceMappingURL=native-audio-destination-node.js.map","export const createNativeAudioWorkletNodeConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;\n};\n//# sourceMappingURL=native-audio-worklet-node-constructor.js.map","import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';\nexport const createNativeAudioWorkletNodeFactory = (createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections) => {\n    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            try {\n                const nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeContext, name, options);\n                const patchedEventListeners = new Map();\n                let onprocessorerror = null;\n                Object.defineProperties(nativeAudioWorkletNode, {\n                    /*\n                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n                     * browsers have no native implementation to achieve a consistent behavior.\n                     */\n                    channelCount: {\n                        get: () => options.channelCount,\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    channelCountMode: {\n                        get: () => 'explicit',\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    // Bug #156: Chrome and Edge do not yet fire an ErrorEvent.\n                    onprocessorerror: {\n                        get: () => onprocessorerror,\n                        set: (value) => {\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n                            }\n                            onprocessorerror = typeof value === 'function' ? value : null;\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n                            }\n                        }\n                    }\n                });\n                nativeAudioWorkletNode.addEventListener = ((addEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const unpatchedEventListener = typeof args[1] === 'function'\n                                ? args[1]\n                                : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                                    ? args[1].handleEvent\n                                    : null;\n                            if (unpatchedEventListener !== null) {\n                                const patchedEventListener = patchedEventListeners.get(args[1]);\n                                if (patchedEventListener !== undefined) {\n                                    args[1] = patchedEventListener;\n                                }\n                                else {\n                                    args[1] = (event) => {\n                                        // Bug #178: Chrome and Edge do fire an event of type error.\n                                        if (event.type === 'error') {\n                                            Object.defineProperties(event, {\n                                                type: { value: 'processorerror' }\n                                            });\n                                            unpatchedEventListener(event);\n                                        }\n                                        else {\n                                            unpatchedEventListener(new ErrorEvent(args[0], { ...event }));\n                                        }\n                                    };\n                                    patchedEventListeners.set(unpatchedEventListener, args[1]);\n                                }\n                            }\n                        }\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        addEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return addEventListener.call(nativeAudioWorkletNode, ...args);\n                    };\n                })(nativeAudioWorkletNode.addEventListener);\n                nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const patchedEventListener = patchedEventListeners.get(args[1]);\n                            if (patchedEventListener !== undefined) {\n                                patchedEventListeners.delete(args[1]);\n                                args[1] = patchedEventListener;\n                            }\n                        }\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        removeEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.removeEventListener);\n                /*\n                 * Bug #86: Chrome and Edge do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but\n                 * has an output.\n                 */\n                if (options.numberOfOutputs !== 0) {\n                    const nativeGainNode = createNativeGainNode(nativeContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'discrete',\n                        gain: 0\n                    });\n                    nativeAudioWorkletNode.connect(nativeGainNode).connect(nativeContext.destination);\n                    const whenConnected = () => nativeGainNode.disconnect();\n                    const whenDisconnected = () => nativeGainNode.connect(nativeContext.destination);\n                    // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.\n                    return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n                }\n                return nativeAudioWorkletNode;\n            }\n            catch (err) {\n                // Bug #60: Chrome & Edge throw an InvalidStateError instead of a NotSupportedError.\n                if (err.code === 11) {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n        }\n        // Bug #61: Only Chrome & Edge have an implementation of the AudioWorkletNode yet.\n        if (processorConstructor === undefined) {\n            throw createNotSupportedError();\n        }\n        testClonabilityOfAudioWorkletNodeOptions(options);\n        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createAudioWorkletProcessor } from '../helpers/create-audio-worklet-processor';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { ReadOnlyMap } from '../read-only-map';\nexport const createNativeAudioWorkletNodeFakerFactory = (connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections) => {\n    return (nativeContext, baseLatency, processorConstructor, options) => {\n        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n            throw createNotSupportedError();\n        }\n        const outputChannelCount = Array.isArray(options.outputChannelCount)\n            ? options.outputChannelCount\n            : Array.from(options.outputChannelCount);\n        // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n        if (outputChannelCount.some((channelCount) => channelCount < 1)) {\n            throw createNotSupportedError();\n        }\n        if (outputChannelCount.length !== options.numberOfOutputs) {\n            throw createIndexSizeError();\n        }\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (options.channelCountMode !== 'explicit') {\n            throw createNotSupportedError();\n        }\n        const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n        const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n            throw createNotSupportedError();\n        }\n        const messageChannel = new MessageChannel();\n        const gainNodes = [];\n        const inputChannelSplitterNodes = [];\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes.push(createNativeGainNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: options.channelCountMode,\n                channelInterpretation: options.channelInterpretation,\n                gain: 1\n            }));\n            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                numberOfOutputs: options.channelCount\n            }));\n        }\n        const constantSourceNodes = [];\n        if (processorConstructor.parameterDescriptors !== undefined) {\n            for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: options.parameterData[name] !== undefined\n                        ? options.parameterData[name]\n                        : defaultValue === undefined\n                            ? 0\n                            : defaultValue\n                });\n                Object.defineProperties(constantSourceNode.offset, {\n                    defaultValue: {\n                        get: () => (defaultValue === undefined ? 0 : defaultValue)\n                    },\n                    maxValue: {\n                        get: () => (maxValue === undefined ? MOST_POSITIVE_SINGLE_FLOAT : maxValue)\n                    },\n                    minValue: {\n                        get: () => (minValue === undefined ? MOST_NEGATIVE_SINGLE_FLOAT : minValue)\n                    }\n                });\n                constantSourceNodes.push(constantSourceNode);\n            }\n        }\n        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n        });\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, \n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        Math.max(1, numberOfOutputChannels));\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: Math.max(1, numberOfOutputChannels),\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes = [];\n        for (let i = 0; i < options.numberOfOutputs; i += 1) {\n            outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: outputChannelCount[i]\n            }));\n        }\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n            for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n            }\n        }\n        const parameterMap = new ReadOnlyMap(processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.map(({ name }, index) => {\n                const constantSourceNode = constantSourceNodes[index];\n                constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                constantSourceNode.start(0);\n                return [name, constantSourceNode.offset];\n            }));\n        inputChannelMergerNode.connect(scriptProcessorNode);\n        let channelInterpretation = options.channelInterpretation;\n        let onprocessorerror = null;\n        // Bug #87: Expose at least one output to make this node connectable.\n        const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;\n        const nativeAudioWorkletNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return options.channelCount;\n            },\n            set channelCount(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelCountMode() {\n                return options.channelCountMode;\n            },\n            set channelCountMode(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelInterpretation() {\n                return channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                for (const gainNode of gainNodes) {\n                    gainNode.channelInterpretation = value;\n                }\n                channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return gainNodes;\n            },\n            get numberOfInputs() {\n                return options.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return options.numberOfOutputs;\n            },\n            get onprocessorerror() {\n                return onprocessorerror;\n            },\n            set onprocessorerror(value) {\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n                }\n                onprocessorerror = typeof value === 'function' ? value : null;\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n                }\n            },\n            get parameters() {\n                return parameterMap;\n            },\n            get port() {\n                return messageChannel.port2;\n            },\n            addEventListener(...args) {\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            connect: connectMultipleOutputs.bind(null, outputAudioNodes),\n            disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        const patchedEventListeners = new Map();\n        messageChannel.port1.addEventListener = ((addEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const unpatchedEventListener = typeof args[1] === 'function'\n                        ? args[1]\n                        : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                            ? args[1].handleEvent\n                            : null;\n                    if (unpatchedEventListener !== null) {\n                        const patchedEventListener = patchedEventListeners.get(args[1]);\n                        if (patchedEventListener !== undefined) {\n                            args[1] = patchedEventListener;\n                        }\n                        else {\n                            args[1] = (event) => {\n                                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => unpatchedEventListener(event));\n                            };\n                            patchedEventListeners.set(unpatchedEventListener, args[1]);\n                        }\n                    }\n                }\n                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.addEventListener);\n        messageChannel.port1.removeEventListener = ((removeEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const patchedEventListener = patchedEventListeners.get(args[1]);\n                    if (patchedEventListener !== undefined) {\n                        patchedEventListeners.delete(args[1]);\n                        args[1] = patchedEventListener;\n                    }\n                }\n                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.removeEventListener);\n        let onmessage = null;\n        Object.defineProperty(messageChannel.port1, 'onmessage', {\n            get: () => onmessage,\n            set: (value) => {\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.removeEventListener('message', onmessage);\n                }\n                onmessage = typeof value === 'function' ? value : null;\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.addEventListener('message', onmessage);\n                    messageChannel.port1.start();\n                }\n            }\n        });\n        processorConstructor.prototype.port = messageChannel.port1;\n        let audioWorkletProcessor = null;\n        const audioWorkletProcessorPromise = createAudioWorkletProcessor(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);\n        audioWorkletProcessorPromise.then((dWrkltPrcssr) => (audioWorkletProcessor = dWrkltPrcssr));\n        const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n        const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n        const parameters = processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.reduce((prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n        let isActive = true;\n        const disconnectOutputsGraph = () => {\n            if (options.numberOfOutputs > 0) {\n                scriptProcessorNode.disconnect(outputChannelSplitterNode);\n            }\n            for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                const outputChannelMergerNode = outputChannelMergerNodes[i];\n                for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                    outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                }\n                outputChannelSplitterNodeOutput += outputChannelCount[i];\n            }\n        };\n        const activeInputIndexes = new Map();\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }) => {\n            if (audioWorkletProcessor !== null) {\n                const activeInputs = getActiveAudioWorkletNodeInputs(nativeAudioWorkletNodeFaker);\n                for (let i = 0; i < bufferSize; i += 128) {\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.channelCount; k += 1) {\n                            copyFromChannel(inputBuffer, inputs[j], k, k, i);\n                        }\n                    }\n                    if (processorConstructor.parameterDescriptors !== undefined) {\n                        processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                            copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n                        });\n                    }\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                            // The byteLength will be 0 when the ArrayBuffer was transferred.\n                            if (outputs[j][k].byteLength === 0) {\n                                outputs[j][k] = new Float32Array(128);\n                            }\n                        }\n                    }\n                    try {\n                        const potentiallyEmptyInputs = inputs.map((input, index) => {\n                            const activeInput = activeInputs[index];\n                            if (activeInput.size > 0) {\n                                activeInputIndexes.set(index, bufferSize / 128);\n                                return input;\n                            }\n                            const count = activeInputIndexes.get(index);\n                            if (count === undefined) {\n                                return [];\n                            }\n                            if (input.every((channelData) => channelData.every((sample) => sample === 0))) {\n                                if (count === 1) {\n                                    activeInputIndexes.delete(index);\n                                }\n                                else {\n                                    activeInputIndexes.set(index, count - 1);\n                                }\n                            }\n                            return input;\n                        });\n                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + i / nativeContext.sampleRate, nativeContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n                        isActive = activeSourceFlag;\n                        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                            }\n                            outputChannelSplitterNodeOutput += outputChannelCount[j];\n                        }\n                    }\n                    catch (error) {\n                        isActive = false;\n                        nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent('processorerror', {\n                            colno: error.colno,\n                            filename: error.filename,\n                            lineno: error.lineno,\n                            message: error.message\n                        }));\n                    }\n                    if (!isActive) {\n                        for (let j = 0; j < options.numberOfInputs; j += 1) {\n                            gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n                            for (let k = 0; k < options.channelCount; k += 1) {\n                                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);\n                            }\n                        }\n                        if (processorConstructor.parameterDescriptors !== undefined) {\n                            const length = processorConstructor.parameterDescriptors.length;\n                            for (let j = 0; j < length; j += 1) {\n                                const constantSourceNode = constantSourceNodes[j];\n                                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                                constantSourceNode.stop();\n                            }\n                        }\n                        inputChannelMergerNode.disconnect(scriptProcessorNode);\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        if (isConnected) {\n                            disconnectOutputsGraph();\n                        }\n                        else {\n                            disconnectFakeGraph();\n                        }\n                        break;\n                    }\n                }\n            }\n        };\n        let isConnected = false;\n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        const connectFakeGraph = () => scriptProcessorNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnectFakeGraph = () => {\n            scriptProcessorNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        const whenConnected = () => {\n            if (isActive) {\n                disconnectFakeGraph();\n                if (options.numberOfOutputs > 0) {\n                    scriptProcessorNode.connect(outputChannelSplitterNode);\n                }\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n            }\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            if (isActive) {\n                connectFakeGraph();\n                disconnectOutputsGraph();\n            }\n            isConnected = false;\n        };\n        connectFakeGraph();\n        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeBiquadFilterNode = (nativeContext, options) => {\n    const nativeBiquadFilterNode = nativeContext.createBiquadFilter();\n    assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n    assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n    return nativeBiquadFilterNode;\n};\n//# sourceMappingURL=native-biquad-filter-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeChannelMergerNodeFactory = (nativeAudioContextConstructor, wrapChannelMergerNode) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n        /*\n         * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n        assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n        return nativeChannelMergerNode;\n    };\n};\n//# sourceMappingURL=native-channel-merger-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapChannelSplitterNode } from '../helpers/wrap-channel-splitter-node';\nexport const createNativeChannelSplitterNode = (nativeContext, options) => {\n    const nativeChannelSplitterNode = nativeContext.createChannelSplitter(options.numberOfOutputs);\n    // Bug #96: Safari does not have the correct channelCount.\n    // Bug #29: Safari does not have the correct channelCountMode.\n    // Bug #31: Safari does not have the correct channelInterpretation.\n    assignNativeAudioNodeOptions(nativeChannelSplitterNode, options);\n    // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Edge & Firefox partially support the spec yet.\n    wrapChannelSplitterNode(nativeChannelSplitterNode);\n    return nativeChannelSplitterNode;\n};\n//# sourceMappingURL=native-channel-splitter-node.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n    return (nativeContext, options) => {\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n        const nativeConstantSourceNode = nativeContext.createConstantSource();\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeConstantSourceNode);\n        return nativeConstantSourceNode;\n    };\n};\n//# sourceMappingURL=native-constant-source-node-factory.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConstantSourceNodeFakerFactory = (addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections) => {\n    return (nativeContext, { offset, ...audioNodeOptions }) => {\n        const audioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        const channelData = audioBuffer.getChannelData(0);\n        // Bug #95: Safari does not play or loop one sample buffers.\n        channelData[0] = 1;\n        channelData[1] = 1;\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.loop = true;\n        const nativeConstantSourceNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                gainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return gainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                gainNode.channelInterpretation = value;\n            },\n            get context() {\n                return gainNode.context;\n            },\n            get inputs() {\n                return [];\n            },\n            get numberOfInputs() {\n                return audioBufferSourceNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return gainNode.numberOfOutputs;\n            },\n            get offset() {\n                return gainNode.gain;\n            },\n            get onended() {\n                return audioBufferSourceNode.onended;\n            },\n            set onended(value) {\n                audioBufferSourceNode.onended = value;\n            },\n            addEventListener(...args) {\n                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return audioBufferSourceNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n            },\n            start(when = 0) {\n                audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n            },\n            stop(when = 0) {\n                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n            }\n        };\n        const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, audioBufferSourceNode);\n        return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-constant-source-node-faker-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeConvolverNodeFactory = (createNotSupportedError, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeConvolverNode = nativeContext.createConvolver();\n        assignNativeAudioNodeOptions(nativeConvolverNode, options);\n        // The normalize property needs to be set before setting the buffer.\n        if (options.disableNormalization === nativeConvolverNode.normalize) {\n            nativeConvolverNode.normalize = !options.disableNormalization;\n        }\n        assignNativeAudioNodeOption(nativeConvolverNode, options, 'buffer');\n        // Bug #113: Safari does allow to set the channelCount to a value larger than 2.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCount', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value > 2) {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        // Bug #114: Safari allows to set the channelCountMode to 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCountMode', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value === 'max') {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        return nativeConvolverNode;\n    };\n};\n//# sourceMappingURL=native-convolver-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDelayNode = (nativeContext, options) => {\n    const nativeDelayNode = nativeContext.createDelay(options.maxDelayTime);\n    assignNativeAudioNodeOptions(nativeDelayNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, 'delayTime');\n    return nativeDelayNode;\n};\n//# sourceMappingURL=native-delay-node.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDynamicsCompressorNodeFactory = (createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const nativeDynamicsCompressorNode = nativeContext.createDynamicsCompressor();\n        assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);\n        // Bug #108: Safari allows a channelCount of three and above.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #109: Only Chrome and Firefox disallow a channelCountMode of 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n        return nativeDynamicsCompressorNode;\n    };\n};\n//# sourceMappingURL=native-dynamics-compressor-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeGainNode = (nativeContext, options) => {\n    const nativeGainNode = nativeContext.createGain();\n    assignNativeAudioNodeOptions(nativeGainNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n    return nativeGainNode;\n};\n//# sourceMappingURL=native-gain-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeIIRFilterNodeFactory = (createNativeIIRFilterNodeFaker) => {\n    return (nativeContext, baseLatency, options) => {\n        // Bug #9: Safari does not support IIRFilterNodes.\n        if (nativeContext.createIIRFilter === undefined) {\n            return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);\n        }\n        // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n        const nativeIIRFilterNode = nativeContext.createIIRFilter(options.feedforward, options.feedback);\n        assignNativeAudioNodeOptions(nativeIIRFilterNode, options);\n        return nativeIIRFilterNode;\n    };\n};\n//# sourceMappingURL=native-iir-filter-node-factory.js.map","import { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { filterBuffer } from '../helpers/filter-buffer';\nimport { interceptConnections } from '../helpers/intercept-connections';\nfunction divide(a, b) {\n    const denominator = b[0] * b[0] + b[1] * b[1];\n    return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];\n}\nfunction multiply(a, b) {\n    return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];\n}\nfunction evaluatePolynomial(coefficient, z) {\n    let result = [0, 0];\n    for (let i = coefficient.length - 1; i >= 0; i -= 1) {\n        result = multiply(result, z);\n        result[0] += coefficient[i];\n    }\n    return result;\n}\nexport const createNativeIIRFilterNodeFakerFactory = (createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError) => {\n    return (nativeContext, baseLatency, { channelCount, channelCountMode, channelInterpretation, feedback, feedforward }) => {\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n        const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n        const feedbackLength = convertedFeedback.length;\n        const feedforwardLength = convertedFeedforward.length;\n        const minLength = Math.min(feedbackLength, feedforwardLength);\n        if (feedbackLength === 0 || feedbackLength > 20) {\n            throw createNotSupportedError();\n        }\n        if (convertedFeedback[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (feedforwardLength === 0 || feedforwardLength > 20) {\n            throw createNotSupportedError();\n        }\n        if (convertedFeedforward[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (convertedFeedback[0] !== 1) {\n            for (let i = 0; i < feedforwardLength; i += 1) {\n                convertedFeedforward[i] /= convertedFeedback[0];\n            }\n            for (let i = 1; i < feedbackLength; i += 1) {\n                convertedFeedback[i] /= convertedFeedback[0];\n            }\n        }\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);\n        scriptProcessorNode.channelCount = channelCount;\n        scriptProcessorNode.channelCountMode = channelCountMode;\n        scriptProcessorNode.channelInterpretation = channelInterpretation;\n        const bufferLength = 32;\n        const bufferIndexes = [];\n        const xBuffers = [];\n        const yBuffers = [];\n        for (let i = 0; i < channelCount; i += 1) {\n            bufferIndexes.push(0);\n            const xBuffer = new Float32Array(bufferLength);\n            const yBuffer = new Float32Array(bufferLength);\n            xBuffer.fill(0);\n            yBuffer.fill(0);\n            xBuffers.push(xBuffer);\n            yBuffers.push(yBuffer);\n        }\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = (event) => {\n            const inputBuffer = event.inputBuffer;\n            const outputBuffer = event.outputBuffer;\n            const numberOfChannels = inputBuffer.numberOfChannels;\n            for (let i = 0; i < numberOfChannels; i += 1) {\n                const input = inputBuffer.getChannelData(i);\n                const output = outputBuffer.getChannelData(i);\n                bufferIndexes[i] = filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffers[i], yBuffers[i], bufferIndexes[i], bufferLength, input, output);\n            }\n        };\n        const nyquist = nativeContext.sampleRate / 2;\n        const nativeIIRFilterNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return scriptProcessorNode.channelCount;\n            },\n            set channelCount(value) {\n                scriptProcessorNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return scriptProcessorNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                scriptProcessorNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return scriptProcessorNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                scriptProcessorNode.channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return [scriptProcessorNode];\n            },\n            get numberOfInputs() {\n                return scriptProcessorNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return scriptProcessorNode.numberOfOutputs;\n            },\n            addEventListener(...args) {\n                // @todo Dissallow adding an audioprocess listener.\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n                if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                    throw createInvalidAccessError();\n                }\n                const length = frequencyHz.length;\n                for (let i = 0; i < length; i += 1) {\n                    const omega = -Math.PI * (frequencyHz[i] / nyquist);\n                    const z = [Math.cos(omega), Math.sin(omega)];\n                    const numerator = evaluatePolynomial(convertedFeedforward, z);\n                    const denominator = evaluatePolynomial(convertedFeedback, z);\n                    const response = divide(numerator, denominator);\n                    magResponse[i] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);\n                    phaseResponse[i] = Math.atan2(response[1], response[0]);\n                }\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        return interceptConnections(nativeIIRFilterNodeFaker, scriptProcessorNode);\n    };\n};\n//# sourceMappingURL=native-iir-filter-node-faker-factory.js.map","export const createNativeMediaElementAudioSourceNode = (nativeAudioContext, options) => {\n    return nativeAudioContext.createMediaElementSource(options.mediaElement);\n};\n//# sourceMappingURL=native-media-element-audio-source-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeMediaStreamAudioDestinationNode = (nativeAudioContext, options) => {\n    const nativeMediaStreamAudioDestinationNode = nativeAudioContext.createMediaStreamDestination();\n    assignNativeAudioNodeOptions(nativeMediaStreamAudioDestinationNode, options);\n    // Bug #174: Safari does expose a wrong numberOfOutputs.\n    if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {\n        Object.defineProperty(nativeMediaStreamAudioDestinationNode, 'numberOfOutputs', { get: () => 0 });\n    }\n    return nativeMediaStreamAudioDestinationNode;\n};\n//# sourceMappingURL=native-media-stream-audio-destination-node.js.map","export const createNativeMediaStreamAudioSourceNode = (nativeAudioContext, { mediaStream }) => {\n    const audioStreamTracks = mediaStream.getAudioTracks();\n    /*\n     * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n     * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n     */\n    audioStreamTracks.sort((a, b) => (a.id < b.id ? -1 : a.id > b.id ? 1 : 0));\n    const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);\n    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n    /*\n     * Bug #151 & #159: The given mediaStream gets reconstructed before it gets passed to the native node which is why the accessor needs\n     * to be overwritten as it would otherwise expose the reconstructed version.\n     */\n    Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });\n    return nativeMediaStreamAudioSourceNode;\n};\n//# sourceMappingURL=native-media-stream-audio-source-node.js.map","export const createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, isNativeOfflineAudioContext) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n        }\n        const mediaStream = new MediaStream([mediaStreamTrack]);\n        const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);\n        // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n        if (mediaStreamTrack.kind !== 'audio') {\n            throw createInvalidStateError();\n        }\n        // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n        if (isNativeOfflineAudioContext(nativeAudioContext)) {\n            throw new TypeError();\n        }\n        return nativeMediaStreamAudioSourceNode;\n    };\n};\n//# sourceMappingURL=native-media-stream-track-audio-source-node-factory.js.map","export const createNativeOfflineAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('OfflineAudioContext')) {\n        return window.OfflineAudioContext;\n    }\n    return window.hasOwnProperty('webkitOfflineAudioContext') ? window.webkitOfflineAudioContext : null;\n};\n//# sourceMappingURL=native-offline-audio-context-constructor.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeOscillatorNodeFactory = (addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeOscillatorNode = nativeContext.createOscillator();\n        assignNativeAudioNodeOptions(nativeOscillatorNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'detune');\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'frequency');\n        if (options.periodicWave !== undefined) {\n            nativeOscillatorNode.setPeriodicWave(options.periodicWave);\n        }\n        else {\n            assignNativeAudioNodeOption(nativeOscillatorNode, options, 'type');\n        }\n        // Bug #44: Only Chrome & Edge throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the OscillatorNode is unconnected.\n        addSilentConnection(nativeContext, nativeOscillatorNode);\n        return nativeOscillatorNode;\n    };\n};\n//# sourceMappingURL=native-oscillator-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativePannerNodeFactory = (createNativePannerNodeFaker) => {\n    return (nativeContext, options) => {\n        const nativePannerNode = nativeContext.createPanner();\n        // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n        if (nativePannerNode.orientationX === undefined) {\n            return createNativePannerNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativePannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n        return nativePannerNode;\n    };\n};\n//# sourceMappingURL=native-panner-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativePannerNodeFakerFactory = (connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, getFirstSample, monitorConnections) => {\n    return (nativeContext, { coneInnerAngle, coneOuterAngle, coneOuterGain, distanceModel, maxDistance, orientationX, orientationY, orientationZ, panningModel, positionX, positionY, positionZ, refDistance, rolloffFactor, ...audioNodeOptions }) => {\n        const pannerNode = nativeContext.createPanner();\n        // Bug #125: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #126: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeOptions(pannerNode, audioNodeOptions);\n        const SINGLE_CHANNEL_OPTIONS = {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete'\n        };\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            channelInterpretation: 'speakers',\n            numberOfInputs: 6\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const orientationXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 1 });\n        const orientationYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const orientationZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);\n        const waveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            curve: new Float32Array([1, 1]),\n            oversample: 'none'\n        });\n        let lastOrientation = [orientationX, orientationY, orientationZ];\n        let lastPosition = [positionX, positionY, positionZ];\n        const buffer = new Float32Array(1);\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n            const orientation = [\n                getFirstSample(inputBuffer, buffer, 0),\n                getFirstSample(inputBuffer, buffer, 1),\n                getFirstSample(inputBuffer, buffer, 2)\n            ];\n            if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                pannerNode.setOrientation(...orientation); // tslint:disable-line:deprecation\n                lastOrientation = orientation;\n            }\n            const positon = [\n                getFirstSample(inputBuffer, buffer, 3),\n                getFirstSample(inputBuffer, buffer, 4),\n                getFirstSample(inputBuffer, buffer, 5)\n            ];\n            if (positon.some((value, index) => value !== lastPosition[index])) {\n                pannerNode.setPosition(...positon); // tslint:disable-line:deprecation\n                lastPosition = positon;\n            }\n        };\n        Object.defineProperty(orientationYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(orientationZGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionXGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionZGainNode.gain, 'defaultValue', { get: () => 0 });\n        const nativePannerNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return pannerNode.channelCount;\n            },\n            set channelCount(value) {\n                // Bug #125: Safari does not throw an error yet.\n                if (value > 2) {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCount = value;\n                pannerNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return pannerNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                // Bug #126: Safari does not throw an error yet.\n                if (value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n                pannerNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return pannerNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                pannerNode.channelInterpretation = value;\n            },\n            get coneInnerAngle() {\n                return pannerNode.coneInnerAngle;\n            },\n            set coneInnerAngle(value) {\n                pannerNode.coneInnerAngle = value;\n            },\n            get coneOuterAngle() {\n                return pannerNode.coneOuterAngle;\n            },\n            set coneOuterAngle(value) {\n                pannerNode.coneOuterAngle = value;\n            },\n            get coneOuterGain() {\n                return pannerNode.coneOuterGain;\n            },\n            set coneOuterGain(value) {\n                // Bug #127: Safari does not throw an InvalidStateError yet.\n                if (value < 0 || value > 1) {\n                    throw createInvalidStateError();\n                }\n                pannerNode.coneOuterGain = value;\n            },\n            get context() {\n                return pannerNode.context;\n            },\n            get distanceModel() {\n                return pannerNode.distanceModel;\n            },\n            set distanceModel(value) {\n                pannerNode.distanceModel = value;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get maxDistance() {\n                return pannerNode.maxDistance;\n            },\n            set maxDistance(value) {\n                // Bug #128: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.maxDistance = value;\n            },\n            get numberOfInputs() {\n                return pannerNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return pannerNode.numberOfOutputs;\n            },\n            get orientationX() {\n                return orientationXGainNode.gain;\n            },\n            get orientationY() {\n                return orientationYGainNode.gain;\n            },\n            get orientationZ() {\n                return orientationZGainNode.gain;\n            },\n            get panningModel() {\n                return pannerNode.panningModel;\n            },\n            set panningModel(value) {\n                pannerNode.panningModel = value;\n            },\n            get positionX() {\n                return positionXGainNode.gain;\n            },\n            get positionY() {\n                return positionYGainNode.gain;\n            },\n            get positionZ() {\n                return positionZGainNode.gain;\n            },\n            get refDistance() {\n                return pannerNode.refDistance;\n            },\n            set refDistance(value) {\n                // Bug #129: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.refDistance = value;\n            },\n            get rolloffFactor() {\n                return pannerNode.rolloffFactor;\n            },\n            set rolloffFactor(value) {\n                // Bug #130: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.rolloffFactor = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {\n            nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;\n        }\n        if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {\n            nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;\n        }\n        if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {\n            nativePannerNodeFaker.coneOuterGain = coneOuterGain;\n        }\n        if (distanceModel !== nativePannerNodeFaker.distanceModel) {\n            nativePannerNodeFaker.distanceModel = distanceModel;\n        }\n        if (maxDistance !== nativePannerNodeFaker.maxDistance) {\n            nativePannerNodeFaker.maxDistance = maxDistance;\n        }\n        if (orientationX !== nativePannerNodeFaker.orientationX.value) {\n            nativePannerNodeFaker.orientationX.value = orientationX;\n        }\n        if (orientationY !== nativePannerNodeFaker.orientationY.value) {\n            nativePannerNodeFaker.orientationY.value = orientationY;\n        }\n        if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {\n            nativePannerNodeFaker.orientationZ.value = orientationZ;\n        }\n        if (panningModel !== nativePannerNodeFaker.panningModel) {\n            nativePannerNodeFaker.panningModel = panningModel;\n        }\n        if (positionX !== nativePannerNodeFaker.positionX.value) {\n            nativePannerNodeFaker.positionX.value = positionX;\n        }\n        if (positionY !== nativePannerNodeFaker.positionY.value) {\n            nativePannerNodeFaker.positionY.value = positionY;\n        }\n        if (positionZ !== nativePannerNodeFaker.positionZ.value) {\n            nativePannerNodeFaker.positionZ.value = positionZ;\n        }\n        if (refDistance !== nativePannerNodeFaker.refDistance) {\n            nativePannerNodeFaker.refDistance = refDistance;\n        }\n        if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {\n            nativePannerNodeFaker.rolloffFactor = rolloffFactor;\n        }\n        if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {\n            pannerNode.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n        }\n        if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {\n            pannerNode.setPosition(...lastPosition); // tslint:disable-line:deprecation\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);\n            waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);\n            waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);\n            waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);\n            waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);\n            waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);\n            channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.disconnect(orientationXGainNode);\n            orientationXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationYGainNode);\n            orientationYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationZGainNode);\n            orientationZGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionXGainNode);\n            positionXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionYGainNode);\n            positionYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionZGainNode);\n            positionZGainNode.disconnect(channelMergerNode);\n            channelMergerNode.disconnect(scriptProcessorNode);\n            scriptProcessorNode.disconnect(nativeContext.destination);\n        };\n        return monitorConnections(interceptConnections(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-panner-node-faker-factory.js.map","export const createNativePeriodicWaveFactory = (createIndexSizeError) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #180: Safari does not allow to use ordinary arrays.\n        const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);\n        const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);\n        const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, { disableNormalization });\n        // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.\n        if (Array.from(imag).length < 2) {\n            throw createIndexSizeError();\n        }\n        return nativePeriodicWave;\n    };\n};\n//# sourceMappingURL=native-periodic-wave-factory.js.map","export const createNativeScriptProcessorNode = (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) => {\n    return nativeContext.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels); // tslint:disable-line deprecation\n};\n//# sourceMappingURL=native-script-processor-node.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeStereoPannerNodeFactory = (createNativeStereoPannerNodeFaker, createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const channelCountMode = options.channelCountMode;\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        if (channelCountMode === 'clamped-max') {\n            throw createNotSupportedError();\n        }\n        // Bug #105: Safari does not support the StereoPannerNode.\n        if (nativeContext.createStereoPanner === undefined) {\n            return createNativeStereoPannerNodeFaker(nativeContext, options);\n        }\n        const nativeStereoPannerNode = nativeContext.createStereoPanner();\n        assignNativeAudioNodeOptions(nativeStereoPannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeStereoPannerNode, options, 'pan');\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {\n            get: () => channelCountMode,\n            set: (value) => {\n                if (value !== channelCountMode) {\n                    throw createNotSupportedError();\n                }\n            }\n        });\n        return nativeStereoPannerNode;\n    };\n};\n//# sourceMappingURL=native-stereo-panner-node-factory.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeStereoPannerNodeFakerFactory = (createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections) => {\n    // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.\n    const CURVE_SIZE = 16385;\n    const DC_CURVE = new Float32Array([1, 1]);\n    const HALF_PI = Math.PI / 2;\n    const SINGLE_CHANNEL_OPTIONS = { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete' };\n    const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS, oversample: 'none' };\n    const buildInternalGraphForMono = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            const x = (i / (CURVE_SIZE - 1)) * HALF_PI;\n            leftWaveShaperCurve[i] = Math.cos(x);\n            rightWaveShaperCurve[i] = Math.sin(x);\n        }\n        const leftGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftWaveShaperCurve }));\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));\n        const rightGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightWaveShaperCurve }));\n        return {\n            connectGraph() {\n                inputGainNode.connect(leftGainNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.connect(rightGainNode);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.connect(leftGainNode.gain);\n                rightWaveShaperNode.connect(rightGainNode.gain);\n                leftGainNode.connect(channelMergerNode, 0, 0);\n                rightGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(leftGainNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.disconnect(rightGainNode);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.disconnect(leftGainNode.gain);\n                rightWaveShaperNode.disconnect(rightGainNode.gain);\n                leftGainNode.disconnect(channelMergerNode, 0, 0);\n                rightGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraphForStereo = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const centerIndex = Math.floor(CURVE_SIZE / 2);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            if (i > centerIndex) {\n                const x = ((i - centerIndex) / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n                rightInputForLeftOutputWaveShaperCurve[i] = 0;\n                rightInputForRightOutputWaveShaperCurve[i] = 1;\n            }\n            else {\n                const x = (i / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = 1;\n                leftInputForRightOutputWaveShaperCurve[i] = 0;\n                rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n            }\n        }\n        const channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: 2,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: 2\n        });\n        const leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForLeftOutputWaveShaperCurve\n        });\n        const leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForRightOutputWaveShaperCurve\n        });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));\n        const rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForLeftOutputWaveShaperCurve\n        });\n        const rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForRightOutputWaveShaperCurve\n        });\n        return {\n            connectGraph() {\n                inputGainNode.connect(channelSplitterNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                channelSplitterNode.connect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.connect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForLeftOutputWaveShaperNode\n                    : leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(leftInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForRightOutputWaveShaperNode\n                    : leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForLeftOutputWaveShaperNode\n                    : rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForRightOutputWaveShaperNode\n                    : rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(channelSplitterNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForLeftOutputWaveShaperNode\n                    : leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(leftInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForRightOutputWaveShaperNode\n                    : leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForLeftOutputWaveShaperNode\n                    : rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForRightOutputWaveShaperNode\n                    : rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraph = (nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode) => {\n        if (channelCount === 1) {\n            return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        if (channelCount === 2) {\n            return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        throw createNotSupportedError();\n    };\n    return (nativeContext, { channelCount, channelCountMode, pan, ...audioNodeOptions }) => {\n        if (channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...audioNodeOptions,\n            channelCount: 1,\n            channelCountMode,\n            numberOfInputs: 2\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, channelCount, channelCountMode, gain: 1 });\n        const panGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: pan\n        });\n        let { connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode);\n        Object.defineProperty(panGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(panGainNode.gain, 'maxValue', { get: () => 1 });\n        Object.defineProperty(panGainNode.gain, 'minValue', { get: () => -1 });\n        const nativeStereoPannerNodeFakerFactory = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return inputGainNode.channelCount;\n            },\n            set channelCount(value) {\n                if (inputGainNode.channelCount !== value) {\n                    if (isConnected) {\n                        disconnectGraph();\n                    }\n                    ({ connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, value, inputGainNode, panGainNode, channelMergerNode));\n                    if (isConnected) {\n                        connectGraph();\n                    }\n                }\n                inputGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return inputGainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                if (value === 'clamped-max' || value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return inputGainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return inputGainNode.context;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return inputGainNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return inputGainNode.numberOfOutputs;\n            },\n            get pan() {\n                return panGainNode.gain;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        let isConnected = false;\n        const whenConnected = () => {\n            connectGraph();\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            disconnectGraph();\n            isConnected = false;\n        };\n        return monitorConnections(interceptConnections(nativeStereoPannerNodeFakerFactory, channelMergerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-stereo-panner-node-faker-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeWaveShaperNodeFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeWaveShaperNode = nativeContext.createWaveShaper();\n        /*\n         * Bug #119: Safari does not correctly map the values.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here. Testing for the automationRate property is necessary because this workaround\n         * isn't necessary anymore since v14.0.2 of Safari.\n         */\n        if (nativeAudioContextConstructor !== null &&\n            nativeAudioContextConstructor.name === 'webkitAudioContext' &&\n            nativeContext.createGain().gain.automationRate === undefined) {\n            return createNativeWaveShaperNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativeWaveShaperNode, options);\n        const curve = options.curve === null || options.curve instanceof Float32Array ? options.curve : new Float32Array(options.curve);\n        // Bug #104: Chrome and Edge will throw an InvalidAccessError when the curve has less than two samples.\n        if (curve !== null && curve.length < 2) {\n            throw createInvalidStateError();\n        }\n        // Only values of type Float32Array can be assigned to the curve property.\n        assignNativeAudioNodeOption(nativeWaveShaperNode, { curve }, 'curve');\n        assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'oversample');\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        overwriteAccessors(nativeWaveShaperNode, 'curve', (get) => () => get.call(nativeWaveShaperNode), (set) => (value) => {\n            set.call(nativeWaveShaperNode, value);\n            if (isConnected) {\n                if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {\n                    disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n                }\n                else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {\n                    disconnectNativeAudioBufferSourceNode();\n                    disconnectNativeAudioBufferSourceNode = null;\n                }\n            }\n            return value;\n        });\n        const whenConnected = () => {\n            isConnected = true;\n            if (isDCCurve(nativeWaveShaperNode.curve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n            }\n        };\n        const whenDisconnected = () => {\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-wave-shaper-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeWaveShaperNodeFakerFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections) => {\n    return (nativeContext, { curve, oversample, ...audioNodeOptions }) => {\n        const negativeWaveShaperNode = nativeContext.createWaveShaper();\n        const positiveWaveShaperNode = nativeContext.createWaveShaper();\n        assignNativeAudioNodeOptions(negativeWaveShaperNode, audioNodeOptions);\n        assignNativeAudioNodeOptions(positiveWaveShaperNode, audioNodeOptions);\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const invertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        const outputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const revertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        let unmodifiedCurve = null;\n        const nativeWaveShaperNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return negativeWaveShaperNode.channelCount;\n            },\n            set channelCount(value) {\n                inputGainNode.channelCount = value;\n                invertGainNode.channelCount = value;\n                negativeWaveShaperNode.channelCount = value;\n                outputGainNode.channelCount = value;\n                positiveWaveShaperNode.channelCount = value;\n                revertGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return negativeWaveShaperNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                inputGainNode.channelCountMode = value;\n                invertGainNode.channelCountMode = value;\n                negativeWaveShaperNode.channelCountMode = value;\n                outputGainNode.channelCountMode = value;\n                positiveWaveShaperNode.channelCountMode = value;\n                revertGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return negativeWaveShaperNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                invertGainNode.channelInterpretation = value;\n                negativeWaveShaperNode.channelInterpretation = value;\n                outputGainNode.channelInterpretation = value;\n                positiveWaveShaperNode.channelInterpretation = value;\n                revertGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return negativeWaveShaperNode.context;\n            },\n            get curve() {\n                return unmodifiedCurve;\n            },\n            set curve(value) {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                if (value !== null && value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                if (value === null) {\n                    negativeWaveShaperNode.curve = value;\n                    positiveWaveShaperNode.curve = value;\n                }\n                else {\n                    const curveLength = value.length;\n                    const negativeCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    const positiveCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    negativeCurve[0] = value[0];\n                    positiveCurve[0] = -value[curveLength - 1];\n                    const length = Math.ceil((curveLength + 1) / 2);\n                    const centerIndex = (curveLength + 1) / 2 - 1;\n                    for (let i = 1; i < length; i += 1) {\n                        const theoreticIndex = (i / length) * centerIndex;\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        negativeCurve[i] =\n                            lowerIndex === upperIndex\n                                ? value[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * value[upperIndex];\n                        positiveCurve[i] =\n                            lowerIndex === upperIndex\n                                ? -value[curveLength - 1 - lowerIndex]\n                                : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) -\n                                    (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];\n                    }\n                    negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;\n                    negativeWaveShaperNode.curve = negativeCurve;\n                    positiveWaveShaperNode.curve = positiveCurve;\n                }\n                unmodifiedCurve = value;\n                if (isConnected) {\n                    if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {\n                        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n                    }\n                    else if (disconnectNativeAudioBufferSourceNode !== null) {\n                        disconnectNativeAudioBufferSourceNode();\n                        disconnectNativeAudioBufferSourceNode = null;\n                    }\n                }\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return negativeWaveShaperNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return negativeWaveShaperNode.numberOfOutputs;\n            },\n            get oversample() {\n                return negativeWaveShaperNode.oversample;\n            },\n            set oversample(value) {\n                negativeWaveShaperNode.oversample = value;\n                positiveWaveShaperNode.oversample = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (curve !== null) {\n            // Only values of type Float32Array can be assigned to the curve property.\n            nativeWaveShaperNodeFaker.curve = curve instanceof Float32Array ? curve : new Float32Array(curve);\n        }\n        if (oversample !== nativeWaveShaperNodeFaker.oversample) {\n            nativeWaveShaperNodeFaker.oversample = oversample;\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);\n            inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);\n            isConnected = true;\n            if (isDCCurve(unmodifiedCurve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n            }\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(negativeWaveShaperNode);\n            negativeWaveShaperNode.disconnect(outputGainNode);\n            inputGainNode.disconnect(invertGainNode);\n            invertGainNode.disconnect(positiveWaveShaperNode);\n            positiveWaveShaperNode.disconnect(revertGainNode);\n            revertGainNode.disconnect(outputGainNode);\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(interceptConnections(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-wave-shaper-node-faker-factory.js.map","export const createNotSupportedError = () => new DOMException('', 'NotSupportedError');\n//# sourceMappingURL=not-supported-error.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createOfflineAudioContextConstructor = (baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering) => {\n    return class OfflineAudioContext extends baseAudioContextConstructor {\n        constructor(a, b, c) {\n            let options;\n            if (typeof a === 'number' && b !== undefined && c !== undefined) {\n                options = { length: b, numberOfChannels: a, sampleRate: c };\n            }\n            else if (typeof a === 'object') {\n                options = a;\n            }\n            else {\n                throw new Error('The given parameters are not valid.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n                deactivateAudioGraph(this);\n            });\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=offline-audio-context-constructor.js.map","import { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max', // This attribute has no effect for nodes with no inputs.\n    channelInterpretation: 'speakers', // This attribute has no effect for nodes with no inputs.\n    detune: 0,\n    frequency: 440,\n    periodicWave: undefined,\n    type: 'sine'\n};\nexport const createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class OscillatorNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const oscillatorNodeRenderer = (isOffline ? createOscillatorNodeRenderer() : null);\n            const nyquist = context.sampleRate / 2;\n            super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);\n            // Bug #81: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n            // Bug #76: Safari does not export the correct values for maxValue and minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n            this._nativeOscillatorNode = nativeOscillatorNode;\n            this._onended = null;\n            this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n                this._oscillatorNodeRenderer.periodicWave =\n                    mergedOptions.periodicWave;\n            }\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeOscillatorNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeOscillatorNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get type() {\n            return this._nativeOscillatorNode.type;\n        }\n        set type(value) {\n            this._nativeOscillatorNode.type = value;\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = null;\n            }\n        }\n        setPeriodicWave(periodicWave) {\n            this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = periodicWave;\n            }\n        }\n        start(when = 0) {\n            this._nativeOscillatorNode.start(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.start = when;\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeOscillatorNode.stop(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=oscillator-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createOscillatorNodeRendererFactory = (connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeOscillatorNodes = new WeakMap();\n        let periodicWave = null;\n        let start = null;\n        let stop = null;\n        const createOscillatorNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeOscillatorNode = getNativeAudioNode(proxy);\n            // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeOscillatorNodeIsOwnedByContext = isOwnedByContext(nativeOscillatorNode, nativeOfflineAudioContext);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeOscillatorNode.channelCount,\n                    channelCountMode: nativeOscillatorNode.channelCountMode,\n                    channelInterpretation: nativeOscillatorNode.channelInterpretation,\n                    detune: nativeOscillatorNode.detune.value,\n                    frequency: nativeOscillatorNode.frequency.value,\n                    periodicWave: periodicWave === null ? undefined : periodicWave,\n                    type: nativeOscillatorNode.type\n                };\n                nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeOscillatorNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeOscillatorNode.stop(stop);\n                }\n            }\n            renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode);\n            return nativeOscillatorNode;\n        };\n        return {\n            set periodicWave(value) {\n                periodicWave = value;\n            },\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeOscillatorNode !== undefined) {\n                    return Promise.resolve(renderedNativeOscillatorNode);\n                }\n                return createOscillatorNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=oscillator-node-renderer-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    coneInnerAngle: 360,\n    coneOuterAngle: 360,\n    coneOuterGain: 0,\n    distanceModel: 'inverse',\n    maxDistance: 10000,\n    orientationX: 1,\n    orientationY: 0,\n    orientationZ: 0,\n    panningModel: 'equalpower',\n    positionX: 0,\n    positionY: 0,\n    positionZ: 0,\n    refDistance: 1,\n    rolloffFactor: 1\n};\nexport const createPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class PannerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const pannerNodeRenderer = (isOffline ? createPannerNodeRenderer() : null);\n            super(context, false, nativePannerNode, pannerNodeRenderer);\n            this._nativePannerNode = nativePannerNode;\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._orientationX = createAudioParam(this, isOffline, nativePannerNode.orientationX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationY = createAudioParam(this, isOffline, nativePannerNode.orientationY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationZ = createAudioParam(this, isOffline, nativePannerNode.orientationZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionX = createAudioParam(this, isOffline, nativePannerNode.positionX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionY = createAudioParam(this, isOffline, nativePannerNode.positionY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionZ = createAudioParam(this, isOffline, nativePannerNode.positionZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get coneInnerAngle() {\n            return this._nativePannerNode.coneInnerAngle;\n        }\n        set coneInnerAngle(value) {\n            this._nativePannerNode.coneInnerAngle = value;\n        }\n        get coneOuterAngle() {\n            return this._nativePannerNode.coneOuterAngle;\n        }\n        set coneOuterAngle(value) {\n            this._nativePannerNode.coneOuterAngle = value;\n        }\n        get coneOuterGain() {\n            return this._nativePannerNode.coneOuterGain;\n        }\n        set coneOuterGain(value) {\n            this._nativePannerNode.coneOuterGain = value;\n        }\n        get distanceModel() {\n            return this._nativePannerNode.distanceModel;\n        }\n        set distanceModel(value) {\n            this._nativePannerNode.distanceModel = value;\n        }\n        get maxDistance() {\n            return this._nativePannerNode.maxDistance;\n        }\n        set maxDistance(value) {\n            this._nativePannerNode.maxDistance = value;\n        }\n        get orientationX() {\n            return this._orientationX;\n        }\n        get orientationY() {\n            return this._orientationY;\n        }\n        get orientationZ() {\n            return this._orientationZ;\n        }\n        get panningModel() {\n            return this._nativePannerNode.panningModel;\n        }\n        set panningModel(value) {\n            this._nativePannerNode.panningModel = value;\n        }\n        get positionX() {\n            return this._positionX;\n        }\n        get positionY() {\n            return this._positionY;\n        }\n        get positionZ() {\n            return this._positionZ;\n        }\n        get refDistance() {\n            return this._nativePannerNode.refDistance;\n        }\n        set refDistance(value) {\n            this._nativePannerNode.refDistance = value;\n        }\n        get rolloffFactor() {\n            return this._nativePannerNode.rolloffFactor;\n        }\n        set rolloffFactor(value) {\n            this._nativePannerNode.rolloffFactor = value;\n        }\n    };\n};\n//# sourceMappingURL=panner-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createPannerNodeRendererFactory = (connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let renderedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeGainNode = null;\n            let nativePannerNode = getNativeAudioNode(proxy);\n            const commonAudioNodeOptions = {\n                channelCount: nativePannerNode.channelCount,\n                channelCountMode: nativePannerNode.channelCountMode,\n                channelInterpretation: nativePannerNode.channelInterpretation\n            };\n            const commonNativePannerNodeOptions = {\n                ...commonAudioNodeOptions,\n                coneInnerAngle: nativePannerNode.coneInnerAngle,\n                coneOuterAngle: nativePannerNode.coneOuterAngle,\n                coneOuterGain: nativePannerNode.coneOuterGain,\n                distanceModel: nativePannerNode.distanceModel,\n                maxDistance: nativePannerNode.maxDistance,\n                panningModel: nativePannerNode.panningModel,\n                refDistance: nativePannerNode.refDistance,\n                rolloffFactor: nativePannerNode.rolloffFactor\n            };\n            // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativePannerNodeIsOwnedByContext = isOwnedByContext(nativePannerNode, nativeOfflineAudioContext);\n            // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n            if ('bufferSize' in nativePannerNode) {\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n            }\n            else if (!nativePannerNodeIsOwnedByContext) {\n                const options = {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: nativePannerNode.orientationX.value,\n                    orientationY: nativePannerNode.orientationY.value,\n                    orientationZ: nativePannerNode.orientationZ.value,\n                    positionX: nativePannerNode.positionX.value,\n                    positionY: nativePannerNode.positionY.value,\n                    positionZ: nativePannerNode.positionZ.value\n                };\n                nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);\n            if (nativeGainNode !== null) {\n                if (renderedBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(6, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    const nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: 6\n                    });\n                    nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                    renderedBufferPromise = (async () => {\n                        const nativeConstantSourceNodes = await Promise.all([\n                            proxy.orientationX,\n                            proxy.orientationY,\n                            proxy.orientationZ,\n                            proxy.positionX,\n                            proxy.positionY,\n                            proxy.positionZ\n                        ].map(async (audioParam, index) => {\n                            const nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: index === 0 ? 1 : 0\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset);\n                            return nativeConstantSourceNode;\n                        }));\n                        for (let i = 0; i < 6; i += 1) {\n                            nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);\n                            nativeConstantSourceNodes[i].start(0);\n                        }\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    })();\n                }\n                const renderedBuffer = await renderedBufferPromise;\n                const inputGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode);\n                const channelDatas = [];\n                for (let i = 0; i < renderedBuffer.numberOfChannels; i += 1) {\n                    channelDatas.push(renderedBuffer.getChannelData(i));\n                }\n                let lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];\n                let lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];\n                let gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                let partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: lastOrientation[0],\n                    orientationY: lastOrientation[1],\n                    orientationZ: lastOrientation[2],\n                    positionX: lastPosition[0],\n                    positionY: lastPosition[1],\n                    positionZ: lastPosition[2]\n                });\n                inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n                partialPannerNode.connect(nativeGainNode);\n                for (let i = 128; i < renderedBuffer.length; i += 128) {\n                    const orientation = [channelDatas[0][i], channelDatas[1][i], channelDatas[2][i]];\n                    const positon = [channelDatas[3][i], channelDatas[4][i], channelDatas[5][i]];\n                    if (orientation.some((value, index) => value !== lastOrientation[index]) ||\n                        positon.some((value, index) => value !== lastPosition[index])) {\n                        lastOrientation = orientation;\n                        lastPosition = positon;\n                        const currentTime = i / nativeOfflineAudioContext.sampleRate;\n                        gateGainNode.gain.setValueAtTime(0, currentTime);\n                        gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 0 });\n                        partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                            ...commonNativePannerNodeOptions,\n                            orientationX: lastOrientation[0],\n                            orientationY: lastOrientation[1],\n                            orientationZ: lastOrientation[2],\n                            positionX: lastPosition[0],\n                            positionY: lastPosition[1],\n                            positionZ: lastPosition[2]\n                        });\n                        gateGainNode.gain.setValueAtTime(1, currentTime);\n                        inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n                        partialPannerNode.connect(nativeGainNode);\n                    }\n                }\n                return nativeGainNode;\n            }\n            if (!nativePannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);\n            }\n            if (isNativeAudioNodeFaker(nativePannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode);\n            }\n            return nativePannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNodeOrNativePannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=panner-node-renderer-factory.js.map","const DEFAULT_OPTIONS = {\n    disableNormalization: false\n};\nexport const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore, sanitizePeriodicWaveOptions) => {\n    return class PeriodicWave {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizePeriodicWaveOptions({ ...DEFAULT_OPTIONS, ...options });\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n            periodicWaveStore.add(periodicWave);\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype) ||\n                periodicWaveStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=periodic-wave-constructor.js.map","export const createRenderAutomation = (getAudioParamRenderer, renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        const audioParamRenderer = getAudioParamRenderer(audioParam);\n        audioParamRenderer.replay(nativeAudioParam);\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n//# sourceMappingURL=render-automation.js.map","export const createRenderInputsOfAudioNode = (getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle) => {\n    return async (audioNode, nativeOfflineAudioContext, nativeAudioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        await Promise.all(audioNodeConnections.activeInputs\n            .map((connections, input) => Array.from(connections).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n            const destination = audioNode.context.destination;\n            if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {\n                renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n            }\n        }))\n            .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-node.js.map","export const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {\n    return async (audioParam, nativeOfflineAudioContext, nativeAudioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n            if (!isPartOfACycle(source)) {\n                renderedNativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-param.js.map","import { testPromiseSupport } from '../helpers/test-promise-support';\nexport const createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) => {\n    return (nativeOfflineAudioContext) => {\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n            // Bug #158: Chrome and Edge do not advance currentTime if it is not accessed while rendering the audio.\n            return Promise.resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then((isOfflineAudioContextCurrentTimeSupported) => {\n                if (!isOfflineAudioContextCurrentTimeSupported) {\n                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n                    nativeOfflineAudioContext.oncomplete = () => {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        scriptProcessorNode.disconnect();\n                    };\n                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n                }\n                return nativeOfflineAudioContext.startRendering();\n            });\n        }\n        return new Promise((resolve) => {\n            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                gain: 0\n            });\n            nativeOfflineAudioContext.oncomplete = (event) => {\n                gainNode.disconnect();\n                resolve(event.renderedBuffer);\n            };\n            gainNode.connect(nativeOfflineAudioContext.destination);\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=render-native-offline-audio-context.js.map","export const createSetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore) => {\n    return (nativeAudioWorkletNode, activeInputs) => {\n        activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);\n    };\n};\n//# sourceMappingURL=set-active-audio-worklet-node-inputs.js.map","export const createSetAudioNodeTailTime = (audioNodeTailTimeStore) => {\n    return (audioNode, tailTime) => audioNodeTailTimeStore.set(audioNode, tailTime);\n};\n//# sourceMappingURL=set-audio-node-tail-time.js.map","import { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createStartRendering = (audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    return (destination, nativeOfflineAudioContext) => getAudioNodeRenderer(destination)\n        .render(destination, nativeOfflineAudioContext)\n        /*\n         * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the\n         * destination.\n         */\n        .then(() => Promise.all(Array.from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext)).map((audioWorkletNode) => getAudioNodeRenderer(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext))))\n        .then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext))\n        .then((audioBuffer) => {\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n        if (typeof audioBuffer.copyFromChannel !== 'function') {\n            wrapAudioBufferCopyChannelMethods(audioBuffer);\n            wrapAudioBufferGetChannelDataMethod(audioBuffer);\n            // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n        }\n        else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n            wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n        }\n        audioBufferStore.add(audioBuffer);\n        return audioBuffer;\n    });\n};\n//# sourceMappingURL=start-rendering.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    /*\n     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n     * behavior.\n     */\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    pan: 0\n};\nexport const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class StereoPannerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const stereoPannerNodeRenderer = (isOffline ? createStereoPannerNodeRenderer() : null);\n            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);\n        }\n        get pan() {\n            return this._pan;\n        }\n    };\n};\n//# sourceMappingURL=stereo-panner-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createStereoPannerNodeRendererFactory = (connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeStereoPannerNodes = new WeakMap();\n        const createStereoPannerNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeStereoPannerNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeStereoPannerNodeIsOwnedByContext = isOwnedByContext(nativeStereoPannerNode, nativeOfflineAudioContext);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeStereoPannerNode.channelCount,\n                    channelCountMode: nativeStereoPannerNode.channelCountMode,\n                    channelInterpretation: nativeStereoPannerNode.channelInterpretation,\n                    pan: nativeStereoPannerNode.pan.value\n                };\n                nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);\n            }\n            if (isNativeAudioNodeFaker(nativeStereoPannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode);\n            }\n            return nativeStereoPannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeStereoPannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeStereoPannerNode);\n                }\n                return createStereoPannerNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=stereo-panner-node-renderer-factory.js.map","// Bug #33: Safari exposes an AudioBuffer but it can't be used as a constructor.\nexport const createTestAudioBufferConstructorSupport = (nativeAudioBufferConstructor) => {\n    return () => {\n        if (nativeAudioBufferConstructor === null) {\n            return false;\n        }\n        try {\n            new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 }); // tslint:disable-line:no-unused-expression\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-audio-buffer-constructor-support.js.map","/*\n * Firefox up to version 67 didn't fully support the copyFromChannel() and copyToChannel() methods. Therefore testing one of those methods\n * is enough to know if the other one is supported as well.\n */\nexport const createTestAudioBufferCopyChannelMethodsSubarraySupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeAudioBuffer = nativeOfflineAudioContext.createBuffer(1, 1, 44100);\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        if (nativeAudioBuffer.copyToChannel === undefined) {\n            return true;\n        }\n        const source = new Float32Array(2);\n        try {\n            nativeAudioBuffer.copyFromChannel(source, 0, 0);\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-audio-buffer-copy-channel-methods-subarray-support.js.map","export const createTestAudioContextCloseMethodSupport = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n        // Try to check the prototype before constructing the AudioContext.\n        if (nativeAudioContextConstructor.prototype !== undefined && nativeAudioContextConstructor.prototype.close !== undefined) {\n            return true;\n        }\n        const audioContext = new nativeAudioContextConstructor();\n        const isAudioContextClosable = audioContext.close !== undefined;\n        try {\n            audioContext.close();\n        }\n        catch {\n            // Ignore errors.\n        }\n        return isAudioContextClosable;\n    };\n};\n//# sourceMappingURL=test-audio-context-close-method-support.js.map","/**\n * Edge up to version 14, Firefox up to version 52, Safari up to version 9 and maybe other browsers\n * did not refuse to decode invalid parameters with a TypeError.\n */\nexport const createTestAudioContextDecodeAudioDataMethodTypeErrorSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            let isPending = true;\n            const resolvePromise = (err) => {\n                if (isPending) {\n                    isPending = false;\n                    offlineAudioContext.startRendering();\n                    resolve(err instanceof TypeError);\n                }\n            };\n            let promise;\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                promise = offlineAudioContext\n                    // Bug #1: Safari requires a successCallback.\n                    .decodeAudioData(null, () => {\n                    // Ignore the success callback.\n                }, resolvePromise);\n            }\n            catch (err) {\n                resolvePromise(err);\n            }\n            // Bug #21: Safari does not support promises yet.\n            if (promise !== undefined) {\n                // Bug #6: Chrome, Edge and Firefox do not call the errorCallback.\n                promise.catch(resolvePromise);\n            }\n        });\n    };\n};\n//# sourceMappingURL=test-audio-context-decode-audio-data-method-type-error-support.js.map","export const createTestAudioContextOptionsSupport = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n        let audioContext;\n        try {\n            audioContext = new nativeAudioContextConstructor({ latencyHint: 'balanced' });\n        }\n        catch {\n            return false;\n        }\n        audioContext.close();\n        return true;\n    };\n};\n//# sourceMappingURL=test-audio-context-options-support.js.map","// Safari up to version 12.0 (but not v12.1) didn't return the destination in case it was an AudioNode.\nexport const createTestAudioNodeConnectMethodSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeGainNode = nativeOfflineAudioContext.createGain();\n        const isSupported = nativeGainNode.connect(nativeGainNode) === nativeGainNode;\n        nativeGainNode.disconnect(nativeGainNode);\n        return isSupported;\n    };\n};\n//# sourceMappingURL=test-audio-node-connect-method-support.js.map","/**\n * Chrome version 66 and 67 did not call the process() function of an AudioWorkletProcessor if it had no outputs. AudioWorklet support was\n * enabled by default in version 66.\n */\nexport const createTestAudioWorkletProcessorNoOutputsSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const blob = new Blob([\n            'let c,p;class A extends AudioWorkletProcessor{constructor(){super();this.port.onmessage=(e)=>{p=e.data;p.onmessage=()=>{p.postMessage(c);p.close()};this.port.postMessage(0)}}process(){c=1}}registerProcessor(\"a\",A)'\n        ], {\n            type: 'application/javascript; charset=utf-8'\n        });\n        const messageChannel = new MessageChannel();\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 44100);\n        const url = URL.createObjectURL(blob);\n        let isCallingProcess = false;\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            const oscillator = offlineAudioContext.createOscillator();\n            await new Promise((resolve) => {\n                audioWorkletNode.port.onmessage = () => resolve();\n                audioWorkletNode.port.postMessage(messageChannel.port2, [messageChannel.port2]);\n            });\n            audioWorkletNode.port.onmessage = () => (isCallingProcess = true);\n            oscillator.connect(audioWorkletNode);\n            oscillator.start(0);\n            await offlineAudioContext.startRendering();\n            isCallingProcess = await new Promise((resolve) => {\n                messageChannel.port1.onmessage = ({ data }) => resolve(data === 1);\n                messageChannel.port1.postMessage(0);\n            });\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            messageChannel.port1.close();\n            URL.revokeObjectURL(url);\n        }\n        return isCallingProcess;\n    };\n};\n//# sourceMappingURL=test-audio-worklet-processor-no-outputs-support.js.map","// Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\nexport const createTestAudioWorkletProcessorPostMessageSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const blob = new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor(\"a\",A)'], {\n            type: 'application/javascript; charset=utf-8'\n        });\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 44100);\n        const url = URL.createObjectURL(blob);\n        let isEmittingMessageEvents = false;\n        let isEmittingProcessorErrorEvents = false;\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            const oscillator = offlineAudioContext.createOscillator();\n            audioWorkletNode.port.onmessage = () => (isEmittingMessageEvents = true);\n            audioWorkletNode.onprocessorerror = () => (isEmittingProcessorErrorEvents = true);\n            oscillator.connect(audioWorkletNode);\n            oscillator.start(0);\n            await offlineAudioContext.startRendering();\n            // Bug #197: Safari does not deliver the messages before the promise returned by startRendering() resolves.\n            await new Promise((resolve) => setTimeout(resolve));\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            URL.revokeObjectURL(url);\n        }\n        return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;\n    };\n};\n//# sourceMappingURL=test-audio-worklet-processor-post-message-support.js.map","/**\n * Firefox up to version 69 did not throw an error when setting a different channelCount or channelCountMode.\n */\nexport const createTestChannelMergerNodeChannelCountSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeChannelMergerNode = offlineAudioContext.createChannelMerger();\n        /**\n         * Bug #15: Safari does not return the default properties. It still needs to be patched. This test is supposed to test the support\n         * in other browsers.\n         */\n        if (nativeChannelMergerNode.channelCountMode === 'max') {\n            return true;\n        }\n        try {\n            nativeChannelMergerNode.channelCount = 2;\n        }\n        catch {\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=test-channel-merger-node-channel-count-support.js.map","export const createTestConstantSourceNodeAccurateSchedulingSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeOfflineAudioContext.createConstantSource === undefined) {\n            return true;\n        }\n        const nativeConstantSourceNode = nativeOfflineAudioContext.createConstantSource();\n        /*\n         * @todo This is using bug #75 to detect bug #70. That works because both bugs were unique to\n         * the implementation of Firefox right now, but it could probably be done in a better way.\n         */\n        return nativeConstantSourceNode.offset.maxValue !== Number.POSITIVE_INFINITY;\n    };\n};\n//# sourceMappingURL=test-constant-source-node-accurate-scheduling-support.js.map","// Opera up to version 57 did not allow to reassign the buffer of a ConvolverNode.\nexport const createTestConvolverNodeBufferReassignabilitySupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeConvolverNode = offlineAudioContext.createConvolver();\n        nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n        try {\n            nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-convolver-node-buffer-reassignability-support.js.map","// Chrome up to version v80, Edge up to version v80 and Opera up to version v67 did not allow to set the channelCount property of a ConvolverNode to 1. They also did not allow to set the channelCountMode to 'explicit'.\nexport const createTestConvolverNodeChannelCountSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeConvolverNode = offlineAudioContext.createConvolver();\n        try {\n            nativeConvolverNode.channelCount = 1;\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-convolver-node-channel-count-support.js.map","export const createTestIsSecureContextSupport = (window) => {\n    return () => window !== null && window.hasOwnProperty('isSecureContext');\n};\n//# sourceMappingURL=test-is-secure-context-support.js.map","// Firefox up to version 68 did not throw an error when creating a MediaStreamAudioSourceNode with a mediaStream that had no audio track.\nexport const createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n        const audioContext = new nativeAudioContextConstructor();\n        try {\n            audioContext.createMediaStreamSource(new MediaStream());\n            return false;\n        }\n        catch (err) {\n            return true;\n        }\n        finally {\n            audioContext.close();\n        }\n    };\n};\n//# sourceMappingURL=test-media-stream-audio-source-node-media-stream-without-audio-track-support.js.map","export const createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode, nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=test-offline-audio-context-current-time-support.js.map","/**\n * Firefox up to version 62 did not kick off the processing of the StereoPannerNode if the value of pan was zero.\n */\nexport const createTestStereoPannerNodeDefaultValueSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        /*\n         * Bug #105: Safari does not support the StereoPannerNode. Therefore the returned value should normally be false but the faker does\n         * support the tested behaviour.\n         */\n        if (nativeOfflineAudioContext.createStereoPanner === undefined) {\n            return Promise.resolve(true);\n        }\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeOfflineAudioContext.createConstantSource === undefined) {\n            return Promise.resolve(true);\n        }\n        const constantSourceNode = nativeOfflineAudioContext.createConstantSource();\n        const stereoPanner = nativeOfflineAudioContext.createStereoPanner();\n        constantSourceNode.channelCount = 1;\n        constantSourceNode.offset.value = 1;\n        stereoPanner.channelCount = 1;\n        constantSourceNode.start();\n        constantSourceNode.connect(stereoPanner).connect(nativeOfflineAudioContext.destination);\n        return nativeOfflineAudioContext.startRendering().then((buffer) => buffer.getChannelData(0)[0] !== 1);\n    };\n};\n//# sourceMappingURL=test-stereo-panner-node-default-value-support.js.map","export const createUnknownError = () => new DOMException('', 'UnknownError');\n//# sourceMappingURL=unknown-error.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    curve: null,\n    oversample: 'none'\n};\nexport const createWaveShaperNodeConstructor = (audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class WaveShaperNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const waveShaperNodeRenderer = (isOffline ? createWaveShaperNodeRenderer() : null);\n            // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.\n            super(context, true, nativeWaveShaperNode, waveShaperNodeRenderer);\n            this._isCurveNullified = false;\n            this._nativeWaveShaperNode = nativeWaveShaperNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get curve() {\n            if (this._isCurveNullified) {\n                return null;\n            }\n            return this._nativeWaveShaperNode.curve;\n        }\n        set curve(value) {\n            // Bug #103: Safari does not allow to set the curve to null.\n            if (value === null) {\n                this._isCurveNullified = true;\n                this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);\n            }\n            else {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                // Bug #104: Chrome and Edge will throw an InvalidAccessError when the curve has less than two samples.\n                if (value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                this._isCurveNullified = false;\n                this._nativeWaveShaperNode.curve = value;\n            }\n        }\n        get oversample() {\n            return this._nativeWaveShaperNode.oversample;\n        }\n        set oversample(value) {\n            this._nativeWaveShaperNode.oversample = value;\n        }\n    };\n};\n//# sourceMappingURL=wave-shaper-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createWaveShaperNodeRendererFactory = (createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeWaveShaperNodes = new WeakMap();\n        const createWaveShaperNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeWaveShaperNode = getNativeAudioNode(proxy);\n            // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeWaveShaperNodeIsOwnedByContext = isOwnedByContext(nativeWaveShaperNode, nativeOfflineAudioContext);\n            if (!nativeWaveShaperNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeWaveShaperNode.channelCount,\n                    channelCountMode: nativeWaveShaperNode.channelCountMode,\n                    channelInterpretation: nativeWaveShaperNode.channelInterpretation,\n                    curve: nativeWaveShaperNode.curve,\n                    oversample: nativeWaveShaperNode.oversample\n                };\n                nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);\n            if (isNativeAudioNodeFaker(nativeWaveShaperNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode);\n            }\n            return nativeWaveShaperNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeWaveShaperNode !== undefined) {\n                    return Promise.resolve(renderedNativeWaveShaperNode);\n                }\n                return createWaveShaperNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=wave-shaper-node-renderer-factory.js.map","export const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","export const createWrapAudioBufferCopyChannelMethodsOutOfBounds = (convertNumberToUnsignedLong) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = ((copyFromChannel) => {\n            return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyFromChannel);\n        audioBuffer.copyToChannel = ((copyToChannel) => {\n            return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyToChannel);\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods-out-of-bounds.js.map","export const createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong, createIndexSizeError) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const destinationLength = destination.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n                destination[i] = channelData[i + bufferOffset];\n            }\n        };\n        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const sourceLength = source.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n                channelData[i + bufferOffset] = source[i];\n            }\n        };\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods.js.map","export const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = (overwriteAccessors) => {\n    return (nativeAudioBufferSourceNode, nativeContext) => {\n        const nullifiedBuffer = nativeContext.createBuffer(1, 1, 44100);\n        if (nativeAudioBufferSourceNode.buffer === null) {\n            nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n        }\n        overwriteAccessors(nativeAudioBufferSourceNode, 'buffer', (get) => () => {\n            const value = get.call(nativeAudioBufferSourceNode);\n            return value === nullifiedBuffer ? null : value;\n        }, (set) => (value) => {\n            return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);\n        });\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-stop-method-nullified-buffer.js.map","export const createWrapChannelMergerNode = (createInvalidStateError, monitorConnections) => {\n    return (nativeContext, channelMergerNode) => {\n        // Bug #15: Safari does not return the default properties.\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const audioBufferSourceNode = nativeContext.createBufferSource();\n        const whenConnected = () => {\n            const length = channelMergerNode.numberOfInputs;\n            for (let i = 0; i < length; i += 1) {\n                audioBufferSourceNode.connect(channelMergerNode, 0, i);\n            }\n        };\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n        monitorConnections(channelMergerNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=wrap-channel-merger-node.js.map","export const ACTIVE_AUDIO_NODE_STORE = new WeakSet();\nexport const AUDIO_NODE_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_NODE_STORE = new WeakMap();\nexport const AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_PARAM_STORE = new WeakMap();\nexport const CONTEXT_STORE = new WeakMap();\nexport const EVENT_LISTENERS = new WeakMap();\nexport const CYCLE_COUNTERS = new WeakMap();\n// This clunky name is borrowed from the spec. :-)\nexport const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();\nexport const NODE_TO_PROCESSOR_MAPS = new WeakMap();\n//# sourceMappingURL=globals.js.map","export const isAudioBufferSourceNode = (audioNode) => {\n    return 'playbackRate' in audioNode;\n};\n//# sourceMappingURL=audio-buffer-source-node.js.map","import { isAudioNode } from './audio-node';\nexport const isAudioNodeOutputConnection = (outputConnection) => {\n    return isAudioNode(outputConnection[0]);\n};\n//# sourceMappingURL=audio-node-output-connection.js.map","export const isAudioNode = (audioNodeOrAudioParam) => {\n    return 'context' in audioNodeOrAudioParam;\n};\n//# sourceMappingURL=audio-node.js.map","export const isAudioWorkletNode = (audioNode) => {\n    return 'port' in audioNode;\n};\n//# sourceMappingURL=audio-worklet-node.js.map","export const isBiquadFilterNode = (audioNode) => {\n    return 'frequency' in audioNode && 'gain' in audioNode;\n};\n//# sourceMappingURL=biquad-filter-node.js.map","export const isConstantSourceNode = (audioNode) => {\n    return 'offset' in audioNode;\n};\n//# sourceMappingURL=constant-source-node.js.map","export const isDelayNode = (audioNode) => {\n    return 'delayTime' in audioNode;\n};\n//# sourceMappingURL=delay-node.js.map","export const isGainNode = (audioNode) => {\n    return !('frequency' in audioNode) && 'gain' in audioNode;\n};\n//# sourceMappingURL=gain-node.js.map","export const isNativeAudioNodeFaker = (nativeAudioNodeOrNativeAudioNodeFaker) => {\n    return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;\n};\n//# sourceMappingURL=native-audio-node-faker.js.map","export const isNativeAudioNode = (nativeAudioNodeOrAudioParam) => {\n    return 'context' in nativeAudioNodeOrAudioParam;\n};\n//# sourceMappingURL=native-audio-node.js.map","export const isOscillatorNode = (audioNode) => {\n    return 'detune' in audioNode && 'frequency' in audioNode && !('gain' in audioNode);\n};\n//# sourceMappingURL=oscillator-node.js.map","export const isStereoPannerNode = (audioNode) => {\n    return 'pan' in audioNode;\n};\n//# sourceMappingURL=stereo-panner-node.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates) => {\n    insertElementInSet(activeInputs, [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-param.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates) => {\n    const passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    }\n    else {\n        insertElementInSet(passiveInputConnections, [output, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output, ignoreDuplicates);\n    }\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-param.js.map","export const assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {\n    const value = options[audioParam];\n    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n        nativeAudioNode[audioParam].value = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-audio-param-value.js.map","export const assignNativeAudioNodeOption = (nativeAudioNode, options, option) => {\n    const value = options[option];\n    if (value !== undefined && value !== nativeAudioNode[option]) {\n        nativeAudioNode[option] = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-option.js.map","import { assignNativeAudioNodeOption } from './assign-native-audio-node-option';\nexport const assignNativeAudioNodeOptions = (nativeAudioNode, options) => {\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCount');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCountMode');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelInterpretation');\n};\n//# sourceMappingURL=assign-native-audio-node-options.js.map","export const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n            reject(data);\n        };\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n//# sourceMappingURL=clone-audio-worklet-node-options.js.map","export const computeBufferSize = (baseLatency, sampleRate) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n//# sourceMappingURL=compute-buffer-size.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n        return [fakeNativeDestinationAudioNode, output, 0];\n    }\n    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n    return [nativeDestinationAudioNode, output, input];\n};\n//# sourceMappingURL=connect-native-audio-node-to-native-audio-node.js.map","export function copyFromChannel(audioBuffer, \n// @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\nparent, key, channelNumber, bufferOffset) {\n    if (typeof audioBuffer.copyFromChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = new Float32Array(128);\n        }\n        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n        // Bug #5: Safari does not support copyFromChannel().\n    }\n    else {\n        const channelData = audioBuffer.getChannelData(channelNumber);\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n        }\n        else {\n            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n            parent[key].set(slicedInput);\n        }\n    }\n}\n//# sourceMappingURL=copy-from-channel.js.map","export const copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset) => {\n    if (typeof audioBuffer.copyToChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n        }\n        // Bug #5: Safari does not support copyToChannel().\n    }\n    else {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);\n        }\n    }\n};\n//# sourceMappingURL=copy-to-channel.js.map","import { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\nexport const createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions) => {\n    const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n    return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\n//# sourceMappingURL=create-audio-worklet-processor-promise.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\nexport const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n    let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n    }\n    const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n    return audioWorkletProcessorPromise;\n};\n//# sourceMappingURL=create-audio-worklet-processor.js.map","export const createNestedArrays = (x, y) => {\n    const arrays = [];\n    for (let i = 0; i < x; i += 1) {\n        const array = [];\n        const length = typeof y === 'number' ? y : y[i];\n        for (let j = 0; j < length; j += 1) {\n            array.push(new Float32Array(128));\n        }\n        arrays.push(array);\n    }\n    return arrays;\n};\n//# sourceMappingURL=create-nested-arrays.js.map","import { isAudioBufferSourceNode } from '../guards/audio-buffer-source-node';\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { isBiquadFilterNode } from '../guards/biquad-filter-node';\nimport { isConstantSourceNode } from '../guards/constant-source-node';\nimport { isGainNode } from '../guards/gain-node';\nimport { isOscillatorNode } from '../guards/oscillator-node';\nimport { isStereoPannerNode } from '../guards/stereo-panner-node';\nimport { getAudioNodeConnections } from './get-audio-node-connections';\nimport { getAudioParamConnections } from './get-audio-param-connections';\nimport { isActiveAudioNode } from './is-active-audio-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\nexport const deactivateActiveAudioNodeInputConnections = (audioNode, trace) => {\n    const { activeInputs } = getAudioNodeConnections(audioNode);\n    activeInputs.forEach((connections) => connections.forEach(([source]) => {\n        if (!trace.includes(audioNode)) {\n            deactivateActiveAudioNodeInputConnections(source, [...trace, audioNode]);\n        }\n    }));\n    const audioParams = isAudioBufferSourceNode(audioNode)\n        ? [\n            // Bug #149: Safari does not yet support the detune AudioParam.\n            audioNode.playbackRate\n        ]\n        : isAudioWorkletNode(audioNode)\n            ? Array.from(audioNode.parameters.values())\n            : isBiquadFilterNode(audioNode)\n                ? [audioNode.Q, audioNode.detune, audioNode.frequency, audioNode.gain]\n                : isConstantSourceNode(audioNode)\n                    ? [audioNode.offset]\n                    : isGainNode(audioNode)\n                        ? [audioNode.gain]\n                        : isOscillatorNode(audioNode)\n                            ? [audioNode.detune, audioNode.frequency]\n                            : isStereoPannerNode(audioNode)\n                                ? [audioNode.pan]\n                                : [];\n    for (const audioParam of audioParams) {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections !== undefined) {\n            audioParamConnections.activeInputs.forEach(([source]) => deactivateActiveAudioNodeInputConnections(source, trace));\n        }\n    }\n    if (isActiveAudioNode(audioNode)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=deactivate-active-audio-node-input-connections.js.map","import { deactivateActiveAudioNodeInputConnections } from './deactivate-active-audio-node-input-connections';\nexport const deactivateAudioGraph = (context) => {\n    deactivateActiveAudioNodeInputConnections(context.destination, []);\n};\n//# sourceMappingURL=deactivate-audio-graph.js.map","import { pickElementFromSet } from './pick-element-from-set';\nexport const deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {\n    return pickElementFromSet(activeInputs, (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-param.js.map","export const deleteActiveInputConnection = (activeInputConnections, source, output) => {\n    for (const activeInputConnection of activeInputConnections) {\n        if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n            activeInputConnections.delete(activeInputConnection);\n            return activeInputConnection;\n        }\n    }\n    return null;\n};\n//# sourceMappingURL=delete-active-input-connection.js.map","import { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const deleteEventListenerOfAudioNode = (audioNode, eventListener) => {\n    const eventListeners = getEventListenersOfAudioNode(audioNode);\n    if (!eventListeners.delete(eventListener)) {\n        throw new Error('Missing the expected event listener.');\n    }\n};\n//# sourceMappingURL=delete-event-listeners-of-audio-node.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-node.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-param.js.map","export const detachArrayBuffer = (arrayBuffer) => {\n    const { port1, port2 } = new MessageChannel();\n    return new Promise((resolve) => {\n        const closeAndResolve = () => {\n            port2.onmessage = null;\n            port1.close();\n            port2.close();\n            resolve();\n        };\n        port2.onmessage = () => closeAndResolve();\n        try {\n            port1.postMessage(arrayBuffer, [arrayBuffer]);\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            closeAndResolve();\n        }\n    });\n};\n//# sourceMappingURL=detach-array-buffer.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n    }\n    else {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n    }\n};\n//# sourceMappingURL=disconnect-native-audio-node-from-native-audio-node.js.map","// This implementation as shamelessly inspired by source code of\n// tslint:disable-next-line:max-line-length\n// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.\nexport const filterBuffer = (feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, bufferIndex, bufferLength, input, output) => {\n    const inputLength = input.length;\n    let i = bufferIndex;\n    for (let j = 0; j < inputLength; j += 1) {\n        let y = feedforward[0] * input[j];\n        for (let k = 1; k < minLength; k += 1) {\n            const x = (i - k) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n            y += feedforward[k] * xBuffer[x];\n            y -= feedback[k] * yBuffer[x];\n        }\n        for (let k = minLength; k < feedforwardLength; k += 1) {\n            y += feedforward[k] * xBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        for (let k = minLength; k < feedbackLength; k += 1) {\n            y -= feedback[k] * yBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        xBuffer[i] = input[j];\n        yBuffer[i] = y;\n        i = (i + 1) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n        output[j] = y;\n    }\n    return i;\n};\n//# sourceMappingURL=filter-buffer.js.map","import { AUDIO_NODE_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioNodeConnections = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};\n//# sourceMappingURL=get-audio-node-connections.js.map","import { AUDIO_PARAM_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioParamConnections = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};\n//# sourceMappingURL=get-audio-param-connections.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {\n    const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n    const nativeAudioWorkletNode = getNativeAudioNode(proxy);\n    return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-audio-worklet-processor.js.map","import { EVENT_LISTENERS } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getEventListenersOfAudioNode = (audioNode) => {\n    return getValueForKey(EVENT_LISTENERS, audioNode);\n};\n//# sourceMappingURL=get-event-listeners-of-audio-node.js.map","export const getFirstSample = (audioBuffer, buffer, channelNumber) => {\n    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n    if (audioBuffer.copyFromChannel === undefined) {\n        return audioBuffer.getChannelData(channelNumber)[0];\n    }\n    audioBuffer.copyFromChannel(buffer, channelNumber);\n    return buffer[0];\n};\n//# sourceMappingURL=get-first-sample.js.map","import { AUDIO_NODE_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioNode = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_STORE, audioNode);\n};\n//# sourceMappingURL=get-native-audio-node.js.map","import { AUDIO_PARAM_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioParam = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};\n//# sourceMappingURL=get-native-audio-param.js.map","export const getValueForKey = (map, key) => {\n    const value = map.get(key);\n    if (value === undefined) {\n        throw new Error('A value with the given key could not be found.');\n    }\n    return value;\n};\n//# sourceMappingURL=get-value-for-key.js.map","export const insertElementInSet = (set, element, predicate, ignoreDuplicates) => {\n    for (const lmnt of set) {\n        if (predicate(lmnt)) {\n            if (ignoreDuplicates) {\n                return false;\n            }\n            throw Error('The set contains at least one similar element.');\n        }\n    }\n    set.add(element);\n    return true;\n};\n//# sourceMappingURL=insert-element-in-set.js.map","export const interceptConnections = (original, interceptor) => {\n    original.connect = interceptor.connect.bind(interceptor);\n    original.disconnect = interceptor.disconnect.bind(interceptor);\n    return original;\n};\n//# sourceMappingURL=intercept-connections.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isActiveAudioNode = (audioNode) => ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n//# sourceMappingURL=is-active-audio-node.js.map","const handler = {\n    construct() {\n        return handler;\n    }\n};\nexport const isConstructible = (constructible) => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n        new proxy(); // tslint:disable-line:no-unused-expression\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=is-constructible.js.map","export const isDCCurve = (curve) => {\n    if (curve === null) {\n        return false;\n    }\n    const length = curve.length;\n    if (length % 2 !== 0) {\n        return curve[Math.floor(length / 2)] !== 0;\n    }\n    return curve[length / 2 - 1] + curve[length / 2] !== 0;\n};\n//# sourceMappingURL=is-dc-curve.js.map","export const isOwnedByContext = (nativeAudioNode, nativeContext) => {\n    return nativeAudioNode.context === nativeContext;\n};\n//# sourceMappingURL=is-owned-by-context.js.map","import { CYCLE_COUNTERS } from '../globals';\nexport const isPartOfACycle = (audioNode) => {\n    return CYCLE_COUNTERS.has(audioNode);\n};\n//# sourceMappingURL=is-part-of-a-cycle.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isPassiveAudioNode = (audioNode) => {\n    return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};\n//# sourceMappingURL=is-passive-audio-node.js.map","export const isValidLatencyHint = (latencyHint) => {\n    return (latencyHint === undefined ||\n        typeof latencyHint === 'number' ||\n        (typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback')));\n};\n//# sourceMappingURL=is-valid-latency-hint.js.map","export const overwriteAccessors = (object, property, createGetter, createSetter) => {\n    let prototype = object;\n    while (!prototype.hasOwnProperty(property)) {\n        prototype = Object.getPrototypeOf(prototype);\n    }\n    const { get, set } = Object.getOwnPropertyDescriptor(prototype, property);\n    Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });\n};\n//# sourceMappingURL=overwrite-accessors.js.map","export const pickElementFromSet = (set, predicate) => {\n    const matchingElements = Array.from(set).filter(predicate);\n    if (matchingElements.length > 1) {\n        throw Error('More than one element was found.');\n    }\n    if (matchingElements.length === 0) {\n        throw Error('No element was found.');\n    }\n    const [matchingElement] = matchingElements;\n    set.delete(matchingElement);\n    return matchingElement;\n};\n//# sourceMappingURL=pick-element-from-set.js.map","export const sanitizeAudioWorkletNodeOptions = (options) => {\n    return {\n        ...options,\n        outputChannelCount: options.outputChannelCount !== undefined\n            ? options.outputChannelCount\n            : options.numberOfInputs === 1 && options.numberOfOutputs === 1\n                ? /*\n                   * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n                   * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n                   * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n                   */\n                    [options.channelCount]\n                : Array.from({ length: options.numberOfOutputs }, () => 1)\n    };\n};\n//# sourceMappingURL=sanitize-audio-worklet-node-options.js.map","export const sanitizeChannelSplitterOptions = (options) => {\n    return { ...options, channelCount: options.numberOfOutputs };\n};\n//# sourceMappingURL=sanitize-channel-splitter-options.js.map","export const sanitizePeriodicWaveOptions = (options) => {\n    const { imag, real } = options;\n    if (imag === undefined) {\n        if (real === undefined) {\n            return { ...options, imag: [0, 0], real: [0, 0] };\n        }\n        return { ...options, imag: Array.from(real, () => 0), real };\n    }\n    if (real === undefined) {\n        return { ...options, imag, real: Array.from(imag, () => 0) };\n    }\n    return { ...options, imag, real };\n};\n//# sourceMappingURL=sanitize-periodic-wave-options.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToActive = (audioNode) => {\n    if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is already stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(true));\n};\n//# sourceMappingURL=set-internal-state-to-active.js.map","import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nexport const setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {\n    if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => connections.size === 0)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=set-internal-state-to-passive-when-necessary.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToPassive = (audioNode) => {\n    if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is not stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(false));\n};\n//# sourceMappingURL=set-internal-state-to-passive.js.map","export const setValueAtTimeUntilPossible = (audioParam, value, startTime) => {\n    try {\n        audioParam.setValueAtTime(value, startTime);\n    }\n    catch (err) {\n        if (err.code !== 9) {\n            throw err;\n        }\n        setValueAtTimeUntilPossible(audioParam, value, startTime + 1e-7);\n    }\n};\n//# sourceMappingURL=set-value-at-time-until-possible.js.map","/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\nexport const splitImportStatements = (source, url) => {\n    const importStatements = [];\n    let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    while (result !== null) {\n        const unresolvedUrl = result[1].slice(1, -1);\n        const importStatementWithResolvedUrl = result[0]\n            .replace(/([\\s]+)?;?$/, '')\n            .replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());\n        importStatements.push(importStatementWithResolvedUrl);\n        sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\\s]+/, '');\n        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    }\n    return [importStatements.join(';'), sourceWithoutImportStatements];\n};\n//# sourceMappingURL=split-import-statements.js.map","export const testAnalyserNodeGetFloatTimeDomainDataMethodSupport = (nativeAnalyserNode) => {\n    return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';\n};\n//# sourceMappingURL=test-analyser-node-get-float-time-domain-data-method-support.js.map","export const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer) => {\n    try {\n        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-copy-channel-methods-out-of-bounds-support.js.map","export const testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.start();\n    }\n    catch {\n        return true;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-consecutive-calls-support.js.map","export const testAudioBufferSourceNodeStartMethodOffsetClampingSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    try {\n        nativeAudioBufferSourceNode.start(0, 1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-offset-clamping-support.js.map","export const testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.stop();\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-stop-method-nullified-buffer-support.js.map","export const testAudioNodeDisconnectMethodSupport = (nativeAudioContext, nativeAudioWorkletNodeConstructor) => {\n    return new Promise((resolve) => {\n        /*\n         * This bug existed in Safari up until v14.0.2. Since AudioWorklets were not supported in Safari until v14.1 the presence of the\n         * constructor for an AudioWorkletNode can be used here to skip the test.\n         */\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            resolve(true);\n        }\n        else {\n            const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1); // tslint:disable-line deprecation\n            const dummy = nativeAudioContext.createGain();\n            // Bug #95: Safari does not play one sample buffers.\n            const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n            const channelData = ones.getChannelData(0);\n            channelData[0] = 1;\n            channelData[1] = 1;\n            const source = nativeAudioContext.createBufferSource();\n            source.buffer = ones;\n            source.loop = true;\n            source.connect(analyzer).connect(nativeAudioContext.destination);\n            source.connect(dummy);\n            source.disconnect(dummy);\n            // tslint:disable-next-line:deprecation\n            analyzer.onaudioprocess = (event) => {\n                const chnnlDt = event.inputBuffer.getChannelData(0); // tslint:disable-line deprecation\n                if (Array.prototype.some.call(chnnlDt, (sample) => sample === 1)) {\n                    resolve(true);\n                }\n                else {\n                    resolve(false);\n                }\n                source.stop();\n                analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n                source.disconnect(analyzer);\n                analyzer.disconnect(nativeAudioContext.destination);\n            };\n            source.start();\n        }\n    });\n};\n//# sourceMappingURL=test-audio-node-disconnect-method-support.js.map","export const testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.start(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-start-method-negative-parameters-support.js.map","export const testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    nativeAudioBufferSourceNode.start();\n    nativeAudioBufferSourceNode.stop();\n    try {\n        nativeAudioBufferSourceNode.stop();\n        return true;\n    }\n    catch {\n        return false;\n    }\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js.map","export const testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.stop(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-negative-parameters-support.js.map","export const testAudioWorkletNodeOptionsClonability = (audioWorkletNodeOptions) => {\n    const { port1, port2 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n        port2.close();\n    }\n};\n//# sourceMappingURL=test-audio-worklet-node-options-clonability.js.map","export const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    const { port1 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n    }\n};\n//# sourceMappingURL=test-clonability-of-audio-worklet-node-options.js.map","/*\n * Bug #122: Edge up to version v18 did not allow to construct a DOMException'. It also had a couple more bugs but since this is easy to\n * test it's used here as a placeholder.\n *\n * Bug #27: Edge up to version v18 did reject an invalid arrayBuffer passed to decodeAudioData() with a DOMException.\n *\n * Bug #50: Edge up to version v18 did not allow to create AudioNodes on a closed context.\n *\n * Bug #57: Edge up to version v18 did not throw an error when assigning the type of an OscillatorNode to 'custom'.\n *\n * Bug #63: Edge up to version v18 did not expose the mediaElement property of a MediaElementAudioSourceNode.\n *\n * Bug #64: Edge up to version v18 did not support the MediaStreamAudioDestinationNode.\n *\n * Bug #71: Edge up to version v18 did not allow to set the buffer of an AudioBufferSourceNode to null.\n *\n * Bug #93: Edge up to version v18 did set the sampleRate of an AudioContext to zero when it was closed.\n *\n * Bug #101: Edge up to version v18 refused to execute decodeAudioData() on a closed context.\n *\n * Bug #106: Edge up to version v18 did not expose the maxValue and minValue properties of the pan AudioParam of a StereoPannerNode.\n *\n * Bug #110: Edge up to version v18 did not expose the maxValue and minValue properties of the attack, knee, ratio, release and threshold AudioParams of a DynamicsCompressorNode.\n *\n * Bug #123: Edge up to version v18 did not support HRTF as the panningModel for a PannerNode.\n *\n * Bug #145: Edge up to version v18 did throw an IndexSizeError when an OfflineAudioContext was created with a sampleRate of zero.\n *\n * Bug #161: Edge up to version v18 did not expose the maxValue and minValue properties of the delayTime AudioParam of a DelayNode.\n */\nexport const testDomExceptionConstructorSupport = () => {\n    try {\n        new DOMException(); // tslint:disable-line:no-unused-expression\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-dom-exception-constructor-support.js.map","export const testPromiseSupport = (nativeContext) => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n        if (promise === undefined) {\n            return false;\n        }\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n        return true;\n    }\n    catch {\n        // Ignore errors.\n    }\n    return false;\n};\n//# sourceMappingURL=test-promise-support.js.map","// Safari at version 11 did not support transferables.\nexport const testTransferablesSupport = () => new Promise((resolve) => {\n    const arrayBuffer = new ArrayBuffer(0);\n    const { port1, port2 } = new MessageChannel();\n    port1.onmessage = ({ data }) => resolve(data !== null);\n    port2.postMessage(arrayBuffer, [arrayBuffer]);\n});\n//# sourceMappingURL=test-transferables-support.js.map","export const visitEachAudioNodeOnce = (cycles, visitor) => {\n    const counts = new Map();\n    for (const cycle of cycles) {\n        for (const audioNode of cycle) {\n            const count = counts.get(audioNode);\n            counts.set(audioNode, count === undefined ? 1 : count + 1);\n        }\n    }\n    counts.forEach((count, audioNode) => visitor(audioNode, count));\n};\n//# sourceMappingURL=visit-each-audio-node-once.js.map","export const wrapAnalyserNodeGetFloatTimeDomainDataMethod = (nativeAnalyserNode) => {\n    nativeAnalyserNode.getFloatTimeDomainData = (array) => {\n        const byteTimeDomainData = new Uint8Array(array.length);\n        nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);\n        const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);\n        for (let i = 0; i < length; i += 1) {\n            array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;\n        }\n        return array;\n    };\n};\n//# sourceMappingURL=wrap-analyser-node-get-float-time-domain-data-method.js.map","import { createIndexSizeError } from '../factories/index-size-error';\nexport const wrapAudioBufferGetChannelDataMethod = (audioBuffer) => {\n    audioBuffer.getChannelData = ((getChannelData) => {\n        return (channel) => {\n            try {\n                return getChannelData.call(audioBuffer, channel);\n            }\n            catch (err) {\n                if (err.code === 12) {\n                    throw createIndexSizeError();\n                }\n                throw err;\n            }\n        };\n    })(audioBuffer.getChannelData);\n};\n//# sourceMappingURL=wrap-audio-buffer-get-channel-data-method.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n        return (when = 0, offset = 0, duration) => {\n            if (isScheduled) {\n                throw createInvalidStateError();\n            }\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-consecutive-calls.js.map","export const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            const buffer = nativeAudioBufferSourceNode.buffer;\n            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n            const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);\n            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n            if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n                start.call(nativeAudioBufferSourceNode, when, 0, 0);\n            }\n            else {\n                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n            }\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-offset-clamping.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const wrapAudioNodeDisconnectMethod = (nativeAudioNode) => {\n    const connections = new Map();\n    nativeAudioNode.connect = ((connect) => {\n        // tslint:disable-next-line:invalid-void no-inferrable-types\n        return (destination, output = 0, input = 0) => {\n            const returnValue = isNativeAudioNode(destination) ? connect(destination, output, input) : connect(destination, output);\n            // Save the new connection only if the calls to connect above didn't throw an error.\n            const connectionsToDestination = connections.get(destination);\n            if (connectionsToDestination === undefined) {\n                connections.set(destination, [{ input, output }]);\n            }\n            else {\n                if (connectionsToDestination.every((connection) => connection.input !== input || connection.output !== output)) {\n                    connectionsToDestination.push({ input, output });\n                }\n            }\n            return returnValue;\n        };\n    })(nativeAudioNode.connect.bind(nativeAudioNode));\n    nativeAudioNode.disconnect = ((disconnect) => {\n        return (destinationOrOutput, output, input) => {\n            disconnect.apply(nativeAudioNode);\n            if (destinationOrOutput === undefined) {\n                connections.clear();\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                for (const [destination, connectionsToDestination] of connections) {\n                    const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== destinationOrOutput);\n                    if (filteredConnections.length === 0) {\n                        connections.delete(destination);\n                    }\n                    else {\n                        connections.set(destination, filteredConnections);\n                    }\n                }\n            }\n            else if (connections.has(destinationOrOutput)) {\n                if (output === undefined) {\n                    connections.delete(destinationOrOutput);\n                }\n                else {\n                    const connectionsToDestination = connections.get(destinationOrOutput);\n                    if (connectionsToDestination !== undefined) {\n                        const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== output && (connection.input !== input || input === undefined));\n                        if (filteredConnections.length === 0) {\n                            connections.delete(destinationOrOutput);\n                        }\n                        else {\n                            connections.set(destinationOrOutput, filteredConnections);\n                        }\n                    }\n                }\n            }\n            for (const [destination, connectionsToDestination] of connections) {\n                connectionsToDestination.forEach((connection) => {\n                    if (isNativeAudioNode(destination)) {\n                        nativeAudioNode.connect(destination, connection.output, connection.input);\n                    }\n                    else {\n                        nativeAudioNode.connect(destination, connection.output);\n                    }\n                });\n            }\n        };\n    })(nativeAudioNode.disconnect);\n};\n//# sourceMappingURL=wrap-audio-node-disconnect-method.js.map","export const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {\n                throw new RangeError(\"The parameters can't be negative.\");\n            }\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            start.call(nativeAudioScheduledSourceNode, when, offset, duration);\n        };\n    })(nativeAudioScheduledSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-start-method-negative-parameters.js.map","import { interceptConnections } from './intercept-connections';\nexport const wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = (nativeAudioScheduledSourceNode, nativeContext) => {\n    const nativeGainNode = nativeContext.createGain();\n    nativeAudioScheduledSourceNode.connect(nativeGainNode);\n    const disconnectGainNode = ((disconnect) => {\n        return () => {\n            // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n            disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n        };\n    })(nativeAudioScheduledSourceNode.disconnect);\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n    interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        let isStopped = false;\n        return (when = 0) => {\n            if (isStopped) {\n                try {\n                    stop.call(nativeAudioScheduledSourceNode, when);\n                }\n                catch {\n                    nativeGainNode.gain.setValueAtTime(0, when);\n                }\n            }\n            else {\n                stop.call(nativeAudioScheduledSourceNode, when);\n                isStopped = true;\n            }\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js.map","export const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            if (when < 0) {\n                throw new RangeError(\"The parameter can't be negative.\");\n            }\n            stop.call(nativeAudioScheduledSourceNode, when);\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-negative-parameters.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapChannelSplitterNode = (channelSplitterNode) => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n//# sourceMappingURL=wrap-channel-splitter-node.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=wrap-event-listener.js.map","import { createInvalidAccessError } from '../factories/invalid-access-error';\nexport const wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode) => {\n    nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse) => {\n        return (frequencyHz, magResponse, phaseResponse) => {\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n            return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n        };\n    })(nativeIIRFilterNode.getFrequencyResponse);\n};\n//# sourceMappingURL=wrap-iir-filter-node-get-frequency-response-method.js.map","export {};\n//# sourceMappingURL=analyser-node.js.map","export {};\n//# sourceMappingURL=analyser-options.js.map","export {};\n//# sourceMappingURL=audio-buffer-options.js.map","export {};\n//# sourceMappingURL=audio-buffer-source-node-renderer.js.map","export {};\n//# sourceMappingURL=audio-buffer-source-node.js.map","export {};\n//# sourceMappingURL=audio-buffer-source-options.js.map","export {};\n//# sourceMappingURL=audio-buffer.js.map","export {};\n//# sourceMappingURL=audio-context-options.js.map","export {};\n//# sourceMappingURL=audio-context.js.map","export {};\n//# sourceMappingURL=audio-destination-node.js.map","export {};\n//# sourceMappingURL=audio-listener.js.map","export {};\n//# sourceMappingURL=audio-node-options.js.map","export {};\n//# sourceMappingURL=audio-node-renderer.js.map","export {};\n//# sourceMappingURL=audio-node.js.map","export {};\n//# sourceMappingURL=audio-param-descriptor.js.map","export {};\n//# sourceMappingURL=audio-param-renderer.js.map","export {};\n//# sourceMappingURL=audio-param.js.map","export {};\n//# sourceMappingURL=audio-scheduled-source-node-event-map.js.map","export {};\n//# sourceMappingURL=audio-scheduled-source-node.js.map","export {};\n//# sourceMappingURL=audio-worklet-node-event-map.js.map","export {};\n//# sourceMappingURL=audio-worklet-node-options.js.map","export {};\n//# sourceMappingURL=audio-worklet-node.js.map","export {};\n//# sourceMappingURL=audio-worklet-processor-constructor.js.map","export {};\n//# sourceMappingURL=audio-worklet-processor.js.map","export {};\n//# sourceMappingURL=audio-worklet.js.map","export {};\n//# sourceMappingURL=automation.js.map","export {};\n//# sourceMappingURL=base-audio-context.js.map","export {};\n//# sourceMappingURL=biquad-filter-node.js.map","export {};\n//# sourceMappingURL=biquad-filter-options.js.map","export {};\n//# sourceMappingURL=channel-merger-options.js.map","export {};\n//# sourceMappingURL=channel-splitter-options.js.map","export {};\n//# sourceMappingURL=common-audio-context.js.map","export {};\n//# sourceMappingURL=common-offline-audio-context.js.map","export {};\n//# sourceMappingURL=constant-source-node-renderer.js.map","export {};\n//# sourceMappingURL=constant-source-node.js.map","export {};\n//# sourceMappingURL=constant-source-options.js.map","export {};\n//# sourceMappingURL=convolver-node.js.map","export {};\n//# sourceMappingURL=convolver-options.js.map","export {};\n//# sourceMappingURL=delay-node.js.map","export {};\n//# sourceMappingURL=delay-options.js.map","export {};\n//# sourceMappingURL=dynamics-compressor-node.js.map","export {};\n//# sourceMappingURL=dynamics-compressor-options.js.map","export {};\n//# sourceMappingURL=event-target.js.map","export {};\n//# sourceMappingURL=gain-node.js.map","export {};\n//# sourceMappingURL=gain-options.js.map","export {};\n//# sourceMappingURL=iir-filter-node.js.map","export {};\n//# sourceMappingURL=iir-filter-options.js.map","export * from './analyser-node';\nexport * from './analyser-options';\nexport * from './audio-buffer';\nexport * from './audio-buffer-options';\nexport * from './audio-buffer-source-node';\nexport * from './audio-buffer-source-node-renderer';\nexport * from './audio-buffer-source-options';\nexport * from './audio-context';\nexport * from './audio-context-options';\nexport * from './audio-destination-node';\nexport * from './audio-listener';\nexport * from './audio-node';\nexport * from './audio-node-options';\nexport * from './audio-node-renderer';\nexport * from './audio-param';\nexport * from './audio-param-descriptor';\nexport * from './audio-param-renderer';\nexport * from './audio-scheduled-source-node';\nexport * from './audio-scheduled-source-node-event-map';\nexport * from './audio-worklet';\nexport * from './audio-worklet-node';\nexport * from './audio-worklet-node-event-map';\nexport * from './audio-worklet-node-options';\nexport * from './audio-worklet-processor';\nexport * from './audio-worklet-processor-constructor';\nexport * from './automation';\nexport * from './base-audio-context';\nexport * from './biquad-filter-node';\nexport * from './biquad-filter-options';\nexport * from './channel-merger-options';\nexport * from './channel-splitter-options';\nexport * from './common-audio-context';\nexport * from './common-offline-audio-context';\nexport * from './constant-source-node';\nexport * from './constant-source-node-renderer';\nexport * from './constant-source-options';\nexport * from './convolver-node';\nexport * from './convolver-options';\nexport * from './delay-node';\nexport * from './delay-options';\nexport * from './dynamics-compressor-node';\nexport * from './dynamics-compressor-options';\nexport * from './event-target';\nexport * from './gain-node';\nexport * from './gain-options';\nexport * from './iir-filter-node';\nexport * from './iir-filter-options';\nexport * from './media-element-audio-source-node';\nexport * from './media-element-audio-source-options';\nexport * from './media-stream-audio-destination-node';\nexport * from './media-stream-audio-source-node';\nexport * from './media-stream-audio-source-options';\nexport * from './media-stream-track-audio-source-node';\nexport * from './media-stream-track-audio-source-options';\nexport * from './minimal-audio-context';\nexport * from './minimal-base-audio-context';\nexport * from './minimal-base-audio-context-event-map';\nexport * from './minimal-offline-audio-context';\nexport * from './native-audio-node-faker';\nexport * from './native-audio-worklet-node-faker';\nexport * from './native-constant-source-node-faker';\nexport * from './native-convolver-node-faker';\nexport * from './native-iir-filter-node-faker';\nexport * from './native-panner-node-faker';\nexport * from './native-stereo-panner-node-faker';\nexport * from './native-wave-shaper-node-faker';\nexport * from './offline-audio-completion-event';\nexport * from './offline-audio-context';\nexport * from './offline-audio-context-constructor';\nexport * from './offline-audio-context-options';\nexport * from './oscillator-node';\nexport * from './oscillator-node-renderer';\nexport * from './oscillator-options';\nexport * from './panner-node';\nexport * from './panner-options';\nexport * from './periodic-wave';\nexport * from './periodic-wave-constraints';\nexport * from './periodic-wave-options';\nexport * from './read-only-map';\nexport * from './stereo-panner-node';\nexport * from './stereo-panner-options';\nexport * from './wave-shaper-node';\nexport * from './wave-shaper-options';\nexport * from './worklet-options';\n//# sourceMappingURL=index.js.map","export {};\n//# sourceMappingURL=media-element-audio-source-node.js.map","export {};\n//# sourceMappingURL=media-element-audio-source-options.js.map","export {};\n//# sourceMappingURL=media-stream-audio-destination-node.js.map","export {};\n//# sourceMappingURL=media-stream-audio-source-node.js.map","export {};\n//# sourceMappingURL=media-stream-audio-source-options.js.map","export {};\n//# sourceMappingURL=media-stream-track-audio-source-node.js.map","export {};\n//# sourceMappingURL=media-stream-track-audio-source-options.js.map","export {};\n//# sourceMappingURL=minimal-audio-context.js.map","export {};\n//# sourceMappingURL=minimal-base-audio-context-event-map.js.map","export {};\n//# sourceMappingURL=minimal-base-audio-context.js.map","export {};\n//# sourceMappingURL=minimal-offline-audio-context.js.map","export {};\n//# sourceMappingURL=native-audio-node-faker.js.map","export {};\n//# sourceMappingURL=native-audio-worklet-node-faker.js.map","export {};\n//# sourceMappingURL=native-constant-source-node-faker.js.map","export {};\n//# sourceMappingURL=native-convolver-node-faker.js.map","export {};\n//# sourceMappingURL=native-iir-filter-node-faker.js.map","export {};\n//# sourceMappingURL=native-panner-node-faker.js.map","export {};\n//# sourceMappingURL=native-stereo-panner-node-faker.js.map","export {};\n//# sourceMappingURL=native-wave-shaper-node-faker.js.map","export {};\n//# sourceMappingURL=offline-audio-completion-event.js.map","export {};\n//# sourceMappingURL=offline-audio-context-constructor.js.map","export {};\n//# sourceMappingURL=offline-audio-context-options.js.map","export {};\n//# sourceMappingURL=offline-audio-context.js.map","export {};\n//# sourceMappingURL=oscillator-node-renderer.js.map","export {};\n//# sourceMappingURL=oscillator-node.js.map","export {};\n//# sourceMappingURL=oscillator-options.js.map","export {};\n//# sourceMappingURL=panner-node.js.map","export {};\n//# sourceMappingURL=panner-options.js.map","export {};\n//# sourceMappingURL=periodic-wave-constraints.js.map","export {};\n//# sourceMappingURL=periodic-wave-options.js.map","export {};\n//# sourceMappingURL=periodic-wave.js.map","export {};\n//# sourceMappingURL=read-only-map.js.map","export {};\n//# sourceMappingURL=stereo-panner-node.js.map","export {};\n//# sourceMappingURL=stereo-panner-options.js.map","export {};\n//# sourceMappingURL=wave-shaper-node.js.map","export {};\n//# sourceMappingURL=wave-shaper-options.js.map","// @todo This is currently named IWorkletOptions and not IAudioWorkletOptions because it defines the options of a generic Worklet.\nexport {};\n//# sourceMappingURL=worklet-options.js.map","import { createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent } from 'automation-events';\nimport { createAbortError } from './factories/abort-error';\nimport { createAddActiveInputConnectionToAudioNode } from './factories/add-active-input-connection-to-audio-node';\nimport { createAddAudioNodeConnections } from './factories/add-audio-node-connections';\nimport { createAddAudioParamConnections } from './factories/add-audio-param-connections';\nimport { createAddAudioWorkletModule } from './factories/add-audio-worklet-module';\nimport { createAddConnectionToAudioNode } from './factories/add-connection-to-audio-node';\nimport { createAddPassiveInputConnectionToAudioNode } from './factories/add-passive-input-connection-to-audio-node';\nimport { createAddSilentConnection } from './factories/add-silent-connection';\nimport { createAddUnrenderedAudioWorkletNode } from './factories/add-unrendered-audio-worklet-node';\nimport { createAnalyserNodeConstructor } from './factories/analyser-node-constructor';\nimport { createAnalyserNodeRendererFactory } from './factories/analyser-node-renderer-factory';\nimport { createAudioBufferConstructor } from './factories/audio-buffer-constructor';\nimport { createAudioBufferSourceNodeConstructor } from './factories/audio-buffer-source-node-constructor';\nimport { createAudioBufferSourceNodeRendererFactory } from './factories/audio-buffer-source-node-renderer-factory';\nimport { createAudioContextConstructor } from './factories/audio-context-constructor';\nimport { createAudioDestinationNodeConstructor } from './factories/audio-destination-node-constructor';\nimport { createAudioDestinationNodeRenderer } from './factories/audio-destination-node-renderer-factory';\nimport { createAudioListenerFactory } from './factories/audio-listener-factory';\nimport { createAudioNodeConstructor } from './factories/audio-node-constructor';\nimport { createAudioParamFactory } from './factories/audio-param-factory';\nimport { createAudioParamRenderer } from './factories/audio-param-renderer';\nimport { createAudioWorkletNodeConstructor } from './factories/audio-worklet-node-constructor';\nimport { createAudioWorkletNodeRendererFactory } from './factories/audio-worklet-node-renderer-factory';\nimport { createBaseAudioContextConstructor } from './factories/base-audio-context-constructor';\nimport { createBiquadFilterNodeConstructor } from './factories/biquad-filter-node-constructor';\nimport { createBiquadFilterNodeRendererFactory } from './factories/biquad-filter-node-renderer-factory';\nimport { createCacheTestResult } from './factories/cache-test-result';\nimport { createChannelMergerNodeConstructor } from './factories/channel-merger-node-constructor';\nimport { createChannelMergerNodeRendererFactory } from './factories/channel-merger-node-renderer-factory';\nimport { createChannelSplitterNodeConstructor } from './factories/channel-splitter-node-constructor';\nimport { createChannelSplitterNodeRendererFactory } from './factories/channel-splitter-node-renderer-factory';\nimport { createConnectAudioParam } from './factories/connect-audio-param';\nimport { createConnectMultipleOutputs } from './factories/connect-multiple-outputs';\nimport { createConnectedNativeAudioBufferSourceNodeFactory } from './factories/connected-native-audio-buffer-source-node-factory';\nimport { createConstantSourceNodeConstructor } from './factories/constant-source-node-constructor';\nimport { createConstantSourceNodeRendererFactory } from './factories/constant-source-node-renderer-factory';\nimport { createConvertNumberToUnsignedLong } from './factories/convert-number-to-unsigned-long';\nimport { createConvolverNodeConstructor } from './factories/convolver-node-constructor';\nimport { createConvolverNodeRendererFactory } from './factories/convolver-node-renderer-factory';\nimport { createCreateNativeOfflineAudioContext } from './factories/create-native-offline-audio-context';\nimport { createDataCloneError } from './factories/data-clone-error';\nimport { createDecodeAudioData } from './factories/decode-audio-data';\nimport { createDecrementCycleCounter } from './factories/decrement-cycle-counter';\nimport { createDelayNodeConstructor } from './factories/delay-node-constructor';\nimport { createDelayNodeRendererFactory } from './factories/delay-node-renderer-factory';\nimport { createDeleteActiveInputConnectionToAudioNode } from './factories/delete-active-input-connection-to-audio-node';\nimport { createDeleteUnrenderedAudioWorkletNode } from './factories/delete-unrendered-audio-worklet-node';\nimport { createDetectCycles } from './factories/detect-cycles';\nimport { createDisconnectMultipleOutputs } from './factories/disconnect-multiple-outputs';\nimport { createDynamicsCompressorNodeConstructor } from './factories/dynamics-compressor-node-constructor';\nimport { createDynamicsCompressorNodeRendererFactory } from './factories/dynamics-compressor-node-renderer-factory';\nimport { createEncodingError } from './factories/encoding-error';\nimport { createEvaluateSource } from './factories/evaluate-source';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createExposeCurrentFrameAndCurrentTime } from './factories/expose-current-frame-and-current-time';\nimport { createFetchSource } from './factories/fetch-source';\nimport { createGainNodeConstructor } from './factories/gain-node-constructor';\nimport { createGainNodeRendererFactory } from './factories/gain-node-renderer-factory';\nimport { createGetActiveAudioWorkletNodeInputs } from './factories/get-active-audio-worklet-node-inputs';\nimport { createGetAudioNodeRenderer } from './factories/get-audio-node-renderer';\nimport { createGetAudioNodeTailTime } from './factories/get-audio-node-tail-time';\nimport { createGetAudioParamRenderer } from './factories/get-audio-param-renderer';\nimport { createGetBackupOfflineAudioContext } from './factories/get-backup-offline-audio-context';\nimport { createGetNativeContext } from './factories/get-native-context';\nimport { createGetOrCreateBackupOfflineAudioContext } from './factories/get-or-create-backup-offline-audio-context';\nimport { createGetUnrenderedAudioWorkletNodes } from './factories/get-unrendered-audio-worklet-nodes';\nimport { createIIRFilterNodeConstructor } from './factories/iir-filter-node-constructor';\nimport { createIIRFilterNodeRendererFactory } from './factories/iir-filter-node-renderer-factory';\nimport { createIncrementCycleCounterFactory } from './factories/increment-cycle-counter-factory';\nimport { createIndexSizeError } from './factories/index-size-error';\nimport { createInvalidAccessError } from './factories/invalid-access-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsAnyAudioContext } from './factories/is-any-audio-context';\nimport { createIsAnyAudioNode } from './factories/is-any-audio-node';\nimport { createIsAnyAudioParam } from './factories/is-any-audio-param';\nimport { createIsAnyOfflineAudioContext } from './factories/is-any-offline-audio-context';\nimport { createIsNativeAudioContext } from './factories/is-native-audio-context';\nimport { createIsNativeAudioNode } from './factories/is-native-audio-node';\nimport { createIsNativeAudioParam } from './factories/is-native-audio-param';\nimport { createIsNativeContext } from './factories/is-native-context';\nimport { createIsNativeOfflineAudioContext } from './factories/is-native-offline-audio-context';\nimport { createIsSecureContext } from './factories/is-secure-context';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaElementAudioSourceNodeConstructor } from './factories/media-element-audio-source-node-constructor';\nimport { createMediaStreamAudioDestinationNodeConstructor } from './factories/media-stream-audio-destination-node-constructor';\nimport { createMediaStreamAudioSourceNodeConstructor } from './factories/media-stream-audio-source-node-constructor';\nimport { createMediaStreamTrackAudioSourceNodeConstructor } from './factories/media-stream-track-audio-source-node-constructor';\nimport { createMinimalAudioContextConstructor } from './factories/minimal-audio-context-constructor';\nimport { createMinimalBaseAudioContextConstructor } from './factories/minimal-base-audio-context-constructor';\nimport { createMinimalOfflineAudioContextConstructor } from './factories/minimal-offline-audio-context-constructor';\nimport { createMonitorConnections } from './factories/monitor-connections';\nimport { createNativeAnalyserNodeFactory } from './factories/native-analyser-node-factory';\nimport { createNativeAudioBufferConstructor } from './factories/native-audio-buffer-constructor';\nimport { createNativeAudioBufferSourceNodeFactory } from './factories/native-audio-buffer-source-node-factory';\nimport { createNativeAudioContextConstructor } from './factories/native-audio-context-constructor';\nimport { createNativeAudioDestinationNodeFactory } from './factories/native-audio-destination-node';\nimport { createNativeAudioWorkletNodeConstructor } from './factories/native-audio-worklet-node-constructor';\nimport { createNativeAudioWorkletNodeFactory } from './factories/native-audio-worklet-node-factory';\nimport { createNativeAudioWorkletNodeFakerFactory } from './factories/native-audio-worklet-node-faker-factory';\nimport { createNativeBiquadFilterNode } from './factories/native-biquad-filter-node';\nimport { createNativeChannelMergerNodeFactory } from './factories/native-channel-merger-node-factory';\nimport { createNativeChannelSplitterNode } from './factories/native-channel-splitter-node';\nimport { createNativeConstantSourceNodeFactory } from './factories/native-constant-source-node-factory';\nimport { createNativeConstantSourceNodeFakerFactory } from './factories/native-constant-source-node-faker-factory';\nimport { createNativeConvolverNodeFactory } from './factories/native-convolver-node-factory';\nimport { createNativeDelayNode } from './factories/native-delay-node';\nimport { createNativeDynamicsCompressorNodeFactory } from './factories/native-dynamics-compressor-node-factory';\nimport { createNativeGainNode } from './factories/native-gain-node';\nimport { createNativeIIRFilterNodeFactory } from './factories/native-iir-filter-node-factory';\nimport { createNativeIIRFilterNodeFakerFactory } from './factories/native-iir-filter-node-faker-factory';\nimport { createNativeMediaElementAudioSourceNode } from './factories/native-media-element-audio-source-node';\nimport { createNativeMediaStreamAudioDestinationNode } from './factories/native-media-stream-audio-destination-node';\nimport { createNativeMediaStreamAudioSourceNode } from './factories/native-media-stream-audio-source-node';\nimport { createNativeMediaStreamTrackAudioSourceNodeFactory } from './factories/native-media-stream-track-audio-source-node-factory';\nimport { createNativeOfflineAudioContextConstructor } from './factories/native-offline-audio-context-constructor';\nimport { createNativeOscillatorNodeFactory } from './factories/native-oscillator-node-factory';\nimport { createNativePannerNodeFactory } from './factories/native-panner-node-factory';\nimport { createNativePannerNodeFakerFactory } from './factories/native-panner-node-faker-factory';\nimport { createNativePeriodicWaveFactory } from './factories/native-periodic-wave-factory';\nimport { createNativeScriptProcessorNode } from './factories/native-script-processor-node';\nimport { createNativeStereoPannerNodeFactory } from './factories/native-stereo-panner-node-factory';\nimport { createNativeStereoPannerNodeFakerFactory } from './factories/native-stereo-panner-node-faker-factory';\nimport { createNativeWaveShaperNodeFactory } from './factories/native-wave-shaper-node-factory';\nimport { createNativeWaveShaperNodeFakerFactory } from './factories/native-wave-shaper-node-faker-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createOfflineAudioContextConstructor } from './factories/offline-audio-context-constructor';\nimport { createOscillatorNodeConstructor } from './factories/oscillator-node-constructor';\nimport { createOscillatorNodeRendererFactory } from './factories/oscillator-node-renderer-factory';\nimport { createPannerNodeConstructor } from './factories/panner-node-constructor';\nimport { createPannerNodeRendererFactory } from './factories/panner-node-renderer-factory';\nimport { createPeriodicWaveConstructor } from './factories/periodic-wave-constructor';\nimport { createRenderAutomation } from './factories/render-automation';\nimport { createRenderInputsOfAudioNode } from './factories/render-inputs-of-audio-node';\nimport { createRenderInputsOfAudioParam } from './factories/render-inputs-of-audio-param';\nimport { createRenderNativeOfflineAudioContext } from './factories/render-native-offline-audio-context';\nimport { createSetActiveAudioWorkletNodeInputs } from './factories/set-active-audio-worklet-node-inputs';\nimport { createSetAudioNodeTailTime } from './factories/set-audio-node-tail-time';\nimport { createStartRendering } from './factories/start-rendering';\nimport { createStereoPannerNodeConstructor } from './factories/stereo-panner-node-constructor';\nimport { createStereoPannerNodeRendererFactory } from './factories/stereo-panner-node-renderer-factory';\nimport { createTestAudioBufferConstructorSupport } from './factories/test-audio-buffer-constructor-support';\nimport { createTestAudioBufferCopyChannelMethodsSubarraySupport } from './factories/test-audio-buffer-copy-channel-methods-subarray-support';\nimport { createTestAudioContextCloseMethodSupport } from './factories/test-audio-context-close-method-support';\nimport { createTestAudioContextDecodeAudioDataMethodTypeErrorSupport } from './factories/test-audio-context-decode-audio-data-method-type-error-support';\nimport { createTestAudioContextOptionsSupport } from './factories/test-audio-context-options-support';\nimport { createTestAudioNodeConnectMethodSupport } from './factories/test-audio-node-connect-method-support';\nimport { createTestAudioWorkletProcessorNoOutputsSupport } from './factories/test-audio-worklet-processor-no-outputs-support';\nimport { createTestAudioWorkletProcessorPostMessageSupport } from './factories/test-audio-worklet-processor-post-message-support';\nimport { createTestChannelMergerNodeChannelCountSupport } from './factories/test-channel-merger-node-channel-count-support';\nimport { createTestConstantSourceNodeAccurateSchedulingSupport } from './factories/test-constant-source-node-accurate-scheduling-support';\nimport { createTestConvolverNodeBufferReassignabilitySupport } from './factories/test-convolver-node-buffer-reassignability-support';\nimport { createTestConvolverNodeChannelCountSupport } from './factories/test-convolver-node-channel-count-support';\nimport { createTestIsSecureContextSupport } from './factories/test-is-secure-context-support';\nimport { createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport } from './factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nimport { createTestOfflineAudioContextCurrentTimeSupport } from './factories/test-offline-audio-context-current-time-support';\nimport { createTestStereoPannerNodeDefaultValueSupport } from './factories/test-stereo-panner-node-default-value-support';\nimport { createUnknownError } from './factories/unknown-error';\nimport { createWaveShaperNodeConstructor } from './factories/wave-shaper-node-constructor';\nimport { createWaveShaperNodeRendererFactory } from './factories/wave-shaper-node-renderer-factory';\nimport { createWindow } from './factories/window';\nimport { createWrapAudioBufferCopyChannelMethods } from './factories/wrap-audio-buffer-copy-channel-methods';\nimport { createWrapAudioBufferCopyChannelMethodsOutOfBounds } from './factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds';\nimport { createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer } from './factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer';\nimport { createWrapChannelMergerNode } from './factories/wrap-channel-merger-node';\nimport { AUDIO_NODE_CONNECTIONS_STORE, AUDIO_NODE_STORE, AUDIO_PARAM_CONNECTIONS_STORE, AUDIO_PARAM_STORE, CONTEXT_STORE, CYCLE_COUNTERS } from './globals';\nimport { connectNativeAudioNodeToNativeAudioNode } from './helpers/connect-native-audio-node-to-native-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from './helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from './helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from './helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from './helpers/get-event-listeners-of-audio-node';\nimport { getFirstSample } from './helpers/get-first-sample';\nimport { getNativeAudioNode } from './helpers/get-native-audio-node';\nimport { getNativeAudioParam } from './helpers/get-native-audio-param';\nimport { getValueForKey } from './helpers/get-value-for-key';\nimport { insertElementInSet } from './helpers/insert-element-in-set';\nimport { isActiveAudioNode } from './helpers/is-active-audio-node';\nimport { isDCCurve } from './helpers/is-dc-curve';\nimport { isPartOfACycle } from './helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from './helpers/is-passive-audio-node';\nimport { overwriteAccessors } from './helpers/overwrite-accessors';\nimport { pickElementFromSet } from './helpers/pick-element-from-set';\nimport { sanitizeAudioWorkletNodeOptions } from './helpers/sanitize-audio-worklet-node-options';\nimport { sanitizeChannelSplitterOptions } from './helpers/sanitize-channel-splitter-options';\nimport { sanitizePeriodicWaveOptions } from './helpers/sanitize-periodic-wave-options';\nimport { setValueAtTimeUntilPossible } from './helpers/set-value-at-time-until-possible';\nimport { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from './helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport } from './helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support';\nimport { testAudioBufferSourceNodeStartMethodOffsetClampingSupport } from './helpers/test-audio-buffer-source-node-start-method-offset-clamping-support';\nimport { testAudioBufferSourceNodeStopMethodNullifiedBufferSupport } from './helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support';\nimport { testAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support';\nimport { testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport } from './helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support';\nimport { testAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support';\nimport { testAudioWorkletNodeOptionsClonability } from './helpers/test-audio-worklet-node-options-clonability';\nimport { testDomExceptionConstructorSupport } from './helpers/test-dom-exception-constructor-support';\nimport { testPromiseSupport } from './helpers/test-promise-support';\nimport { testTransferablesSupport } from './helpers/test-transferables-support';\nimport { wrapAudioBufferSourceNodeStartMethodOffsetClamping } from './helpers/wrap-audio-buffer-source-node-start-method-offset-clamping';\nimport { wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls } from './helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls';\nimport { wrapEventListener } from './helpers/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst addActiveInputConnectionToAudioNode = createAddActiveInputConnectionToAudioNode(insertElementInSet);\nconst addPassiveInputConnectionToAudioNode = createAddPassiveInputConnectionToAudioNode(insertElementInSet);\nconst deleteActiveInputConnectionToAudioNode = createDeleteActiveInputConnectionToAudioNode(pickElementFromSet);\nconst audioNodeTailTimeStore = new WeakMap();\nconst getAudioNodeTailTime = createGetAudioNodeTailTime(audioNodeTailTimeStore);\nconst cacheTestResult = createCacheTestResult(new Map(), new WeakMap());\nconst window = createWindow();\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst audioParamAudioNodeStore = new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window);\nconst isNativeAudioParam = createIsNativeAudioParam(window);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window);\nconst audioNodeConstructor = createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE), createAddConnectionToAudioNode(addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode), cacheTestResult, createIncrementCycleCounterFactory(CYCLE_COUNTERS, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode), createIndexSizeError, createInvalidAccessError, createNotSupportedError, createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, CYCLE_COUNTERS, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext), createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor);\nconst analyserNodeConstructor = createAnalyserNodeConstructor(audioNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);\nexport { analyserNodeConstructor as AnalyserNode };\nconst audioBufferStore = new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor = createAudioBufferConstructor(audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nexport { audioBufferConstructor as AudioBuffer };\nconst addSilentConnection = createAddSilentConnection(createNativeGainNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClamping, createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors), wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst createAudioParam = createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE), audioParamAudioNodeStore, AUDIO_PARAM_STORE, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible);\nconst audioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nexport { audioBufferSourceNodeConstructor as AudioBufferSourceNode };\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst setAudioNodeTailTime = createSetAudioNodeTailTime(audioNodeTailTimeStore);\nconst biquadFilterNodeConstructor = createBiquadFilterNodeConstructor(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(nativeAudioContextConstructor, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelMergerNodeConstructor = createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelSplitterNodeConstructor = createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst constantSourceNodeConstructor = createConstantSourceNodeConstructor(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst convolverNodeConstructor = createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst delayNodeConstructor = createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst dynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createGainNodeRenderer = createGainNodeRendererFactory(connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst gainNodeConstructor = createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor));\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor = createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createAudioListener = createAudioListenerFactory(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors);\nconst unrenderedAudioWorkletNodeStore = new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst oscillatorNodeConstructor = createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, getFirstSample, monitorConnections);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst pannerNodeConstructor = createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(createIndexSizeError);\nconst periodicWaveConstructor = createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, new WeakSet(), sanitizePeriodicWaveOptions);\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst stereoPannerNodeConstructor = createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst waveShaperNodeConstructor = createWaveShaperNodeConstructor(audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst isSecureContext = createIsSecureContext(window);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window);\nconst backupOfflineAudioContextStore = new WeakMap();\nconst getOrCreateBackupOfflineAudioContext = createGetOrCreateBackupOfflineAudioContext(backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor);\n// The addAudioWorkletModule() function is only available in a SecureContext.\nexport const addAudioWorkletModule = isSecureContext\n    ? createAddAudioWorkletModule(cacheTestResult, createNotSupportedError, createEvaluateSource(window), exposeCurrentFrameAndCurrentTime, createFetchSource(createAbortError), getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, new WeakMap(), new WeakMap(), createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), \n    // @todo window is guaranteed to be defined because isSecureContext checks that as well.\n    window)\n    : undefined;\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\nexport const decodeAudioData = createDecodeAudioData(audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, new WeakSet(), getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);\nconst mediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioDestinationNodeConstructor = createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, isNativeOfflineAudioContext);\nconst mediaStreamTrackAudioSourceNodeConstructor = createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);\nconst audioContextConstructor = createAudioContextConstructor(baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);\nexport { audioContextConstructor as AudioContext };\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst activeAudioWorkletNodeInputsStore = new WeakMap();\nconst getActiveAudioWorkletNodeInputs = createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore, getValueForKey);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst getBackupOfflineAudioContext = createGetBackupOfflineAudioContext(backupOfflineAudioContextStore);\nconst setActiveAudioWorkletNodeInputs = createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore);\n// The AudioWorkletNode constructor is only available in a SecureContext.\nconst audioWorkletNodeConstructor = isSecureContext\n    ? createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener)\n    : undefined;\nexport { audioWorkletNodeConstructor as AudioWorkletNode };\nexport { biquadFilterNodeConstructor as BiquadFilterNode };\nexport { channelMergerNodeConstructor as ChannelMergerNode };\nexport { channelSplitterNodeConstructor as ChannelSplitterNode };\nexport { convolverNodeConstructor as ConvolverNode };\nexport { constantSourceNodeConstructor as ConstantSourceNode };\nexport { delayNodeConstructor as DelayNode };\nexport { dynamicsCompressorNodeConstructor as DynamicsCompressorNode };\nexport { gainNodeConstructor as GainNode };\nexport { iIRFilterNodeConstructor as IIRFilterNode };\nexport { mediaElementAudioSourceNodeConstructor as MediaElementAudioSourceNode };\nexport { mediaStreamAudioDestinationNodeConstructor as MediaStreamAudioDestinationNode };\nexport { mediaStreamAudioSourceNodeConstructor as MediaStreamAudioSourceNode };\nexport { mediaStreamTrackAudioSourceNodeConstructor as MediaStreamTrackAudioSourceNode };\nconst minimalAudioContextConstructor = createMinimalAudioContextConstructor(createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor);\nexport { minimalAudioContextConstructor as MinimalAudioContext };\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(createNotSupportedError, nativeOfflineAudioContextConstructor);\nconst startRendering = createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst minimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);\nexport { minimalOfflineAudioContextConstructor as MinimalOfflineAudioContext };\nconst offlineAudioContextConstructor = createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering);\nexport { offlineAudioContextConstructor as OfflineAudioContext };\nexport { oscillatorNodeConstructor as OscillatorNode };\nexport { pannerNodeConstructor as PannerNode };\nexport { periodicWaveConstructor as PeriodicWave };\nexport { stereoPannerNodeConstructor as StereoPannerNode };\nexport { waveShaperNodeConstructor as WaveShaperNode };\nexport const isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\nexport const isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\nexport const isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\nexport const isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\nexport const isSupported = () => createIsSupportedPromise(cacheTestResult, createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor), createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor), createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor), createTestAudioContextOptionsSupport(nativeAudioContextConstructor), createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor), createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), createTestChannelMergerNodeChannelCountSupport(nativeOfflineAudioContextConstructor), createTestConstantSourceNodeAccurateSchedulingSupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeChannelCountSupport(nativeOfflineAudioContextConstructor), testDomExceptionConstructorSupport, createTestIsSecureContextSupport(window), createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor), createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor), testTransferablesSupport);\n//# sourceMappingURL=module.js.map","export class ReadOnlyMap {\n    constructor(parameters) {\n        this._map = new Map(parameters);\n    }\n    get size() {\n        return this._map.size;\n    }\n    entries() {\n        return this._map.entries();\n    }\n    forEach(callback, thisArg = null) {\n        return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));\n    }\n    get(name) {\n        return this._map.get(name);\n    }\n    has(name) {\n        return this._map.has(name);\n    }\n    keys() {\n        return this._map.keys();\n    }\n    values() {\n        return this._map.values();\n    }\n}\n//# sourceMappingURL=read-only-map.js.map","export {};\n//# sourceMappingURL=abort-error-factory.js.map","export {};\n//# sourceMappingURL=active-audio-worklet-node-inputs-store.js.map","export {};\n//# sourceMappingURL=active-input-connection.js.map","export {};\n//# sourceMappingURL=add-active-input-connection-to-audio-node-factory.js.map","export {};\n//# sourceMappingURL=add-active-input-connection-to-audio-node-function.js.map","export {};\n//# sourceMappingURL=add-audio-node-connections-factory.js.map","export {};\n//# sourceMappingURL=add-audio-node-connections-function.js.map","export {};\n//# sourceMappingURL=add-audio-param-connections-factory.js.map","export {};\n//# sourceMappingURL=add-audio-param-connections-function.js.map","export {};\n//# sourceMappingURL=add-audio-worklet-module-factory.js.map","export {};\n//# sourceMappingURL=add-audio-worklet-module-function.js.map","export {};\n//# sourceMappingURL=add-connection-to-audio-node-factory.js.map","export {};\n//# sourceMappingURL=add-connection-to-audio-node-function.js.map","export {};\n//# sourceMappingURL=add-passive-input-connection-to-audio-node-factory.js.map","export {};\n//# sourceMappingURL=add-passive-input-connection-to-audio-node-function.js.map","export {};\n//# sourceMappingURL=add-silent-connection-factory.js.map","export {};\n//# sourceMappingURL=add-silent-connection-function.js.map","export {};\n//# sourceMappingURL=add-unrendered-audio-worklet-node-factory.js.map","export {};\n//# sourceMappingURL=add-unrendered-audio-worklet-node-function.js.map","export {};\n//# sourceMappingURL=analyser-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=analyser-node-constructor.js.map","export {};\n//# sourceMappingURL=analyser-node-renderer-factory-factory.js.map","export {};\n//# sourceMappingURL=analyser-node-renderer-factory.js.map","export {};\n//# sourceMappingURL=any-audio-buffer.js.map","export {};\n//# sourceMappingURL=any-context.js.map","export {};\n//# sourceMappingURL=audio-buffer-constructor-factory.js.map","export {};\n//# sourceMappingURL=audio-buffer-constructor.js.map","export {};\n//# sourceMappingURL=audio-buffer-source-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=audio-buffer-source-node-constructor.js.map","export {};\n//# sourceMappingURL=audio-buffer-source-node-renderer-factory-factory.js.map","export {};\n//# sourceMappingURL=audio-buffer-source-node-renderer-factory.js.map","export {};\n//# sourceMappingURL=audio-buffer-source-node-renderer.js.map","export {};\n//# sourceMappingURL=audio-buffer-store.js.map","export {};\n//# sourceMappingURL=audio-context-constructor-factory.js.map","export {};\n//# sourceMappingURL=audio-context-constructor.js.map","export {};\n//# sourceMappingURL=audio-context-latency-category.js.map","export {};\n//# sourceMappingURL=audio-context-state.js.map","export {};\n//# sourceMappingURL=audio-destination-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=audio-destination-node-constructor.js.map","export {};\n//# sourceMappingURL=audio-destination-node-renderer-factory.js.map","export {};\n//# sourceMappingURL=audio-listener-factory-factory.js.map","export {};\n//# sourceMappingURL=audio-listener-factory.js.map","export {};\n//# sourceMappingURL=audio-node-connections-store.js.map","export {};\n//# sourceMappingURL=audio-node-connections.js.map","export {};\n//# sourceMappingURL=audio-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=audio-node-constructor.js.map","export {};\n//# sourceMappingURL=audio-node-output-connection.js.map","export {};\n//# sourceMappingURL=audio-node-renderer.js.map","export {};\n//# sourceMappingURL=audio-node-store.js.map","export {};\n//# sourceMappingURL=audio-node-tail-time-store.js.map","export {};\n//# sourceMappingURL=audio-param-audio-node-store.js.map","export {};\n//# sourceMappingURL=audio-param-connections-store.js.map","export {};\n//# sourceMappingURL=audio-param-connections.js.map","export {};\n//# sourceMappingURL=audio-param-factory-factory.js.map","export {};\n//# sourceMappingURL=audio-param-factory.js.map","export {};\n//# sourceMappingURL=audio-param-map.js.map","export {};\n//# sourceMappingURL=audio-param-output-connection.js.map","export {};\n//# sourceMappingURL=audio-param-renderer-factory.js.map","export {};\n//# sourceMappingURL=audio-param-store.js.map","export {};\n//# sourceMappingURL=audio-worklet-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=audio-worklet-node-constructor.js.map","export {};\n//# sourceMappingURL=audio-worklet-node-renderer-factory-factory.js.map","export {};\n//# sourceMappingURL=audio-worklet-node-renderer-factory.js.map","export {};\n//# sourceMappingURL=backup-offline-audio-context-store.js.map","export {};\n//# sourceMappingURL=base-audio-context-constructor-factory.js.map","export {};\n//# sourceMappingURL=base-audio-context-constructor.js.map","export {};\n//# sourceMappingURL=biquad-filter-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=biquad-filter-node-constructor.js.map","export {};\n//# sourceMappingURL=biquad-filter-node-renderer-factory-factory.js.map","export {};\n//# sourceMappingURL=biquad-filter-node-renderer-factory.js.map","export {};\n//# sourceMappingURL=biquad-filter-type.js.map","export {};\n//# sourceMappingURL=cache-test-result-factory.js.map","export {};\n//# sourceMappingURL=cache-test-result-function.js.map","export {};\n//# sourceMappingURL=channel-count-mode.js.map","export {};\n//# sourceMappingURL=channel-interpretation.js.map","export {};\n//# sourceMappingURL=channel-merger-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=channel-merger-node-constructor.js.map","export {};\n//# sourceMappingURL=channel-merger-node-renderer-factory-factory.js.map","export {};\n//# sourceMappingURL=channel-merger-node-renderer-factory.js.map","export {};\n//# sourceMappingURL=channel-splitter-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=channel-splitter-node-constructor.js.map","export {};\n//# sourceMappingURL=channel-splitter-node-renderer-factory-factory.js.map","export {};\n//# sourceMappingURL=channel-splitter-node-renderer-factory.js.map","export {};\n//# sourceMappingURL=connect-audio-param-factory.js.map","export {};\n//# sourceMappingURL=connect-audio-param-function.js.map","export {};\n//# sourceMappingURL=connect-multiple-outputs-factory.js.map","export {};\n//# sourceMappingURL=connect-multiple-outputs-function.js.map","export {};\n//# sourceMappingURL=connect-native-audio-node-to-native-audio-node-function.js.map","export {};\n//# sourceMappingURL=connected-native-audio-buffer-source-node-factory-factory.js.map","export {};\n//# sourceMappingURL=connected-native-audio-buffer-source-node-factory.js.map","export {};\n//# sourceMappingURL=constant-source-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=constant-source-node-constructor.js.map","export {};\n//# sourceMappingURL=constant-source-node-renderer-factory-factory.js.map","export {};\n//# sourceMappingURL=constant-source-node-renderer-factory.js.map","export {};\n//# sourceMappingURL=constant-source-node-renderer.js.map","export {};\n//# sourceMappingURL=constructor.js.map","export {};\n//# sourceMappingURL=context-store.js.map","export {};\n//# sourceMappingURL=context.js.map","export {};\n//# sourceMappingURL=convert-number-to-unsigned-long-factory.js.map","export {};\n//# sourceMappingURL=convert-number-to-unsigned-long-function.js.map","export {};\n//# sourceMappingURL=convolver-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=convolver-node-constructor.js.map","export {};\n//# sourceMappingURL=convolver-node-renderer-factory-factory.js.map","export {};\n//# sourceMappingURL=convolver-node-renderer-factory.js.map","export {};\n//# sourceMappingURL=create-native-offline-audio-context-factory.js.map","export {};\n//# sourceMappingURL=create-native-offline-audio-context-function.js.map","export {};\n//# sourceMappingURL=cycle-counters.js.map","export {};\n//# sourceMappingURL=data-clone-error-factory.js.map","export {};\n//# sourceMappingURL=decode-audio-data-factory.js.map","export {};\n//# sourceMappingURL=decode-audio-data-function.js.map","export {};\n//# sourceMappingURL=decode-error-callback.js.map","export {};\n//# sourceMappingURL=decode-success-callback.js.map","export {};\n//# sourceMappingURL=decrement-cycle-counter-factory.js.map","export {};\n//# sourceMappingURL=decrement-cycle-counter-function.js.map","export {};\n//# sourceMappingURL=delay-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=delay-node-constructor.js.map","export {};\n//# sourceMappingURL=delay-node-renderer-factory-factory.js.map","export {};\n//# sourceMappingURL=delay-node-renderer-factory.js.map","export {};\n//# sourceMappingURL=delete-active-input-connection-to-audio-node-factory.js.map","export {};\n//# sourceMappingURL=delete-active-input-connection-to-audio-node-function.js.map","export {};\n//# sourceMappingURL=delete-unrendered-audio-worklet-node-factory.js.map","export {};\n//# sourceMappingURL=delete-unrendered-audio-worklet-node-function.js.map","export {};\n//# sourceMappingURL=detect-cycles-factory.js.map","export {};\n//# sourceMappingURL=detect-cycles-function.js.map","export {};\n//# sourceMappingURL=disconnect-multiple-outputs-factory.js.map","export {};\n//# sourceMappingURL=disconnect-multiple-outputs-function.js.map","export {};\n//# sourceMappingURL=disconnect-native-audio-node-from-native-audio-node-function.js.map","export {};\n//# sourceMappingURL=distance-model-type.js.map","export {};\n//# sourceMappingURL=dynamics-compressor-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=dynamics-compressor-node-constructor.js.map","export {};\n//# sourceMappingURL=dynamics-compressor-node-renderer-factory-factory.js.map","export {};\n//# sourceMappingURL=dynamics-compressor-node-renderer-factory.js.map","export {};\n//# sourceMappingURL=encoding-error-factory.js.map","export {};\n//# sourceMappingURL=error-event-handler.js.map","export {};\n//# sourceMappingURL=evaluate-audio-worklet-global-scope-function.js.map","export {};\n//# sourceMappingURL=evaluate-source-factory.js.map","export {};\n//# sourceMappingURL=evaluate-source-function.js.map","export {};\n//# sourceMappingURL=event-handler.js.map","export {};\n//# sourceMappingURL=event-target-constructor-factory.js.map","export {};\n//# sourceMappingURL=event-target-constructor.js.map","export {};\n//# sourceMappingURL=expose-current-frame-and-current-time-factory.js.map","export {};\n//# sourceMappingURL=expose-current-frame-and-current-time-function.js.map","export {};\n//# sourceMappingURL=fetch-source-factory.js.map","export {};\n//# sourceMappingURL=fetch-source-function.js.map","export {};\n//# sourceMappingURL=gain-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=gain-node-constructor.js.map","export {};\n//# sourceMappingURL=gain-node-renderer-factory-factory.js.map","export {};\n//# sourceMappingURL=gain-node-renderer-factory.js.map","export {};\n//# sourceMappingURL=get-active-audio-worklet-node-inputs-factory.js.map","export {};\n//# sourceMappingURL=get-active-audio-worklet-node-inputs-function.js.map","export {};\n//# sourceMappingURL=get-audio-node-connections-function.js.map","export {};\n//# sourceMappingURL=get-audio-node-renderer-factory.js.map","export {};\n//# sourceMappingURL=get-audio-node-renderer-function.js.map","export {};\n//# sourceMappingURL=get-audio-node-tail-time-factory.js.map","export {};\n//# sourceMappingURL=get-audio-node-tail-time-function.js.map","export {};\n//# sourceMappingURL=get-audio-param-connections-function.js.map","export {};\n//# sourceMappingURL=get-audio-param-renderer-factory.js.map","export {};\n//# sourceMappingURL=get-audio-param-renderer-function.js.map","export {};\n//# sourceMappingURL=get-backup-offline-audio-context-factory.js.map","export {};\n//# sourceMappingURL=get-backup-offline-audio-context-function.js.map","export {};\n//# sourceMappingURL=get-event-listeners-of-audio-node-function.js.map","export {};\n//# sourceMappingURL=get-first-sample-function.js.map","export {};\n//# sourceMappingURL=get-native-audio-node-function.js.map","export {};\n//# sourceMappingURL=get-native-audio-param-function.js.map","export {};\n//# sourceMappingURL=get-native-context-factory.js.map","export {};\n//# sourceMappingURL=get-native-context-function.js.map","export {};\n//# sourceMappingURL=get-or-create-backup-offline-audio-context-factory.js.map","export {};\n//# sourceMappingURL=get-or-create-backup-offline-audio-context-function.js.map","export {};\n//# sourceMappingURL=get-unrendered-audio-worklet-nodes-factory.js.map","export {};\n//# sourceMappingURL=get-unrendered-audio-worklet-nodes-function.js.map","export {};\n//# sourceMappingURL=get-value-for-key-function.js.map","export {};\n//# sourceMappingURL=iir-filter-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=iir-filter-node-constructor.js.map","export {};\n//# sourceMappingURL=iir-filter-node-renderer-factory-factory.js.map","export {};\n//# sourceMappingURL=iir-filter-node-renderer-factory.js.map","export {};\n//# sourceMappingURL=increment-cycle-counter-factory-factory.js.map","export {};\n//# sourceMappingURL=increment-cycle-counter-factory.js.map","export {};\n//# sourceMappingURL=increment-cycle-counter-function.js.map","export {};\n//# sourceMappingURL=index-size-error-factory.js.map","export * from './abort-error-factory';\nexport * from './active-audio-worklet-node-inputs-store';\nexport * from './active-input-connection';\nexport * from './add-active-input-connection-to-audio-node-factory';\nexport * from './add-active-input-connection-to-audio-node-function';\nexport * from './add-audio-node-connections-factory';\nexport * from './add-audio-node-connections-function';\nexport * from './add-audio-param-connections-factory';\nexport * from './add-audio-param-connections-function';\nexport * from './add-audio-worklet-module-factory';\nexport * from './add-audio-worklet-module-function';\nexport * from './add-connection-to-audio-node-factory';\nexport * from './add-connection-to-audio-node-function';\nexport * from './add-passive-input-connection-to-audio-node-factory';\nexport * from './add-passive-input-connection-to-audio-node-function';\nexport * from './add-silent-connection-factory';\nexport * from './add-silent-connection-function';\nexport * from './add-unrendered-audio-worklet-node-factory';\nexport * from './add-unrendered-audio-worklet-node-function';\nexport * from './analyser-node-constructor';\nexport * from './analyser-node-constructor-factory';\nexport * from './analyser-node-renderer-factory';\nexport * from './analyser-node-renderer-factory-factory';\nexport * from './any-audio-buffer';\nexport * from './any-context';\nexport * from './audio-buffer-constructor';\nexport * from './audio-buffer-constructor-factory';\nexport * from './audio-buffer-source-node-constructor';\nexport * from './audio-buffer-source-node-constructor-factory';\nexport * from './audio-buffer-source-node-renderer';\nexport * from './audio-buffer-source-node-renderer-factory';\nexport * from './audio-buffer-source-node-renderer-factory-factory';\nexport * from './audio-buffer-store';\nexport * from './audio-context-constructor';\nexport * from './audio-context-constructor-factory';\nexport * from './audio-context-latency-category';\nexport * from './audio-context-state';\nexport * from './audio-destination-node-constructor';\nexport * from './audio-destination-node-constructor-factory';\nexport * from './audio-destination-node-renderer-factory';\nexport * from './audio-listener-factory';\nexport * from './audio-listener-factory-factory';\nexport * from './audio-node-connections';\nexport * from './audio-node-connections-store';\nexport * from './audio-node-constructor';\nexport * from './audio-node-constructor-factory';\nexport * from './audio-node-output-connection';\nexport * from './audio-node-renderer';\nexport * from './audio-node-store';\nexport * from './audio-node-tail-time-store';\nexport * from './audio-param-audio-node-store';\nexport * from './audio-param-connections';\nexport * from './audio-param-connections-store';\nexport * from './audio-param-factory';\nexport * from './audio-param-factory-factory';\nexport * from './audio-param-map';\nexport * from './audio-param-output-connection';\nexport * from './audio-param-renderer-factory';\nexport * from './audio-param-store';\nexport * from './audio-worklet-node-constructor';\nexport * from './audio-worklet-node-constructor-factory';\nexport * from './audio-worklet-node-renderer-factory';\nexport * from './audio-worklet-node-renderer-factory-factory';\nexport * from './backup-offline-audio-context-store';\nexport * from './base-audio-context-constructor';\nexport * from './base-audio-context-constructor-factory';\nexport * from './biquad-filter-node-constructor';\nexport * from './biquad-filter-node-constructor-factory';\nexport * from './biquad-filter-node-renderer-factory';\nexport * from './biquad-filter-node-renderer-factory-factory';\nexport * from './biquad-filter-type';\nexport * from './channel-count-mode';\nexport * from './channel-interpretation';\nexport * from './channel-merger-node-constructor';\nexport * from './channel-merger-node-constructor-factory';\nexport * from './channel-merger-node-renderer-factory';\nexport * from './channel-merger-node-renderer-factory-factory';\nexport * from './channel-splitter-node-constructor';\nexport * from './channel-splitter-node-constructor-factory';\nexport * from './channel-splitter-node-renderer-factory';\nexport * from './channel-splitter-node-renderer-factory-factory';\nexport * from './cache-test-result-factory';\nexport * from './cache-test-result-function';\nexport * from './connect-audio-param-factory';\nexport * from './connect-audio-param-function';\nexport * from './connect-multiple-outputs-factory';\nexport * from './connect-multiple-outputs-function';\nexport * from './connect-native-audio-node-to-native-audio-node-function';\nexport * from './connected-native-audio-buffer-source-node-factory';\nexport * from './connected-native-audio-buffer-source-node-factory-factory';\nexport * from './constant-source-node-constructor';\nexport * from './constant-source-node-constructor-factory';\nexport * from './constant-source-node-renderer';\nexport * from './constant-source-node-renderer-factory';\nexport * from './constant-source-node-renderer-factory-factory';\nexport * from './constructor';\nexport * from './context';\nexport * from './context-store';\nexport * from './convert-number-to-unsigned-long-factory';\nexport * from './convert-number-to-unsigned-long-function';\nexport * from './convolver-node-constructor';\nexport * from './convolver-node-constructor-factory';\nexport * from './convolver-node-renderer-factory';\nexport * from './convolver-node-renderer-factory-factory';\nexport * from './create-native-offline-audio-context-factory';\nexport * from './create-native-offline-audio-context-function';\nexport * from './cycle-counters';\nexport * from './data-clone-error-factory';\nexport * from './decode-audio-data-factory';\nexport * from './decode-audio-data-function';\nexport * from './decode-error-callback';\nexport * from './decode-success-callback';\nexport * from './decrement-cycle-counter-factory';\nexport * from './decrement-cycle-counter-function';\nexport * from './delay-node-constructor';\nexport * from './delay-node-constructor-factory';\nexport * from './delay-node-renderer-factory';\nexport * from './delay-node-renderer-factory-factory';\nexport * from './delete-active-input-connection-to-audio-node-factory';\nexport * from './delete-active-input-connection-to-audio-node-function';\nexport * from './delete-unrendered-audio-worklet-node-factory';\nexport * from './delete-unrendered-audio-worklet-node-function';\nexport * from './detect-cycles-factory';\nexport * from './detect-cycles-function';\nexport * from './disconnect-multiple-outputs-factory';\nexport * from './disconnect-multiple-outputs-function';\nexport * from './disconnect-native-audio-node-from-native-audio-node-function';\nexport * from './distance-model-type';\nexport * from './dynamics-compressor-node-constructor';\nexport * from './dynamics-compressor-node-constructor-factory';\nexport * from './dynamics-compressor-node-renderer-factory';\nexport * from './dynamics-compressor-node-renderer-factory-factory';\nexport * from './encoding-error-factory';\nexport * from './error-event-handler';\nexport * from './evaluate-audio-worklet-global-scope-function';\nexport * from './evaluate-source-factory';\nexport * from './evaluate-source-function';\nexport * from './event-handler';\nexport * from './event-target-constructor';\nexport * from './event-target-constructor-factory';\nexport * from './expose-current-frame-and-current-time-factory';\nexport * from './expose-current-frame-and-current-time-function';\nexport * from './fetch-source-factory';\nexport * from './fetch-source-function';\nexport * from './gain-node-constructor';\nexport * from './gain-node-constructor-factory';\nexport * from './gain-node-renderer-factory';\nexport * from './gain-node-renderer-factory-factory';\nexport * from './get-active-audio-worklet-node-inputs-factory';\nexport * from './get-active-audio-worklet-node-inputs-function';\nexport * from './get-audio-node-connections-function';\nexport * from './get-audio-node-renderer-factory';\nexport * from './get-audio-node-renderer-function';\nexport * from './get-audio-node-tail-time-factory';\nexport * from './get-audio-node-tail-time-function';\nexport * from './get-audio-param-connections-function';\nexport * from './get-audio-param-renderer-factory';\nexport * from './get-audio-param-renderer-function';\nexport * from './get-backup-offline-audio-context-factory';\nexport * from './get-backup-offline-audio-context-function';\nexport * from './get-event-listeners-of-audio-node-function';\nexport * from './get-first-sample-function';\nexport * from './get-native-audio-node-function';\nexport * from './get-native-audio-param-function';\nexport * from './get-native-context-factory';\nexport * from './get-native-context-function';\nexport * from './get-or-create-backup-offline-audio-context-factory';\nexport * from './get-or-create-backup-offline-audio-context-function';\nexport * from './get-unrendered-audio-worklet-nodes-factory';\nexport * from './get-unrendered-audio-worklet-nodes-function';\nexport * from './get-value-for-key-function';\nexport * from './iir-filter-node-constructor';\nexport * from './iir-filter-node-constructor-factory';\nexport * from './iir-filter-node-renderer-factory';\nexport * from './iir-filter-node-renderer-factory-factory';\nexport * from './increment-cycle-counter-factory';\nexport * from './increment-cycle-counter-factory-factory';\nexport * from './increment-cycle-counter-function';\nexport * from './index-size-error-factory';\nexport * from './insert-element-in-set-function';\nexport * from './internal-state-event-listener';\nexport * from './invalid-access-error-factory';\nexport * from './invalid-state-error-factory';\nexport * from './is-active-audio-node-function';\nexport * from './is-any-audio-context-factory';\nexport * from './is-any-audio-context-function';\nexport * from './is-any-audio-node-factory';\nexport * from './is-any-audio-node-function';\nexport * from './is-any-audio-param-factory';\nexport * from './is-any-audio-param-function';\nexport * from './is-any-offline-audio-context-factory';\nexport * from './is-any-offline-audio-context-function';\nexport * from './is-dc-curve-function';\nexport * from './is-native-audio-context-factory';\nexport * from './is-native-audio-context-function';\nexport * from './is-native-audio-node-factory';\nexport * from './is-native-audio-node-function';\nexport * from './is-native-audio-param-factory';\nexport * from './is-native-audio-param-function';\nexport * from './is-native-context-factory';\nexport * from './is-native-context-function';\nexport * from './is-native-offline-audio-context-factory';\nexport * from './is-native-offline-audio-context-function';\nexport * from './is-part-of-a-cycle-function';\nexport * from './is-passive-audio-node-function';\nexport * from './is-secure-context-factory';\nexport * from './is-supported-promise-factory';\nexport * from './media-element-audio-source-node-constructor';\nexport * from './media-element-audio-source-node-constructor-factory';\nexport * from './media-stream-audio-destination-node-constructor';\nexport * from './media-stream-audio-destination-node-constructor-factory';\nexport * from './media-stream-audio-source-node-constructor';\nexport * from './media-stream-audio-source-node-constructor-factory';\nexport * from './media-stream-track-audio-source-node-constructor';\nexport * from './media-stream-track-audio-source-node-constructor-factory';\nexport * from './minimal-audio-context-constructor';\nexport * from './minimal-audio-context-constructor-factory';\nexport * from './minimal-base-audio-context-constructor';\nexport * from './minimal-base-audio-context-constructor-factory';\nexport * from './minimal-offline-audio-context-constructor';\nexport * from './minimal-offline-audio-context-constructor-factory';\nexport * from './monitor-connections-factory';\nexport * from './monitor-connections-function';\nexport * from './native-analyser-node';\nexport * from './native-analyser-node-factory';\nexport * from './native-analyser-node-factory-factory';\nexport * from './native-audio-buffer';\nexport * from './native-audio-buffer-constructor';\nexport * from './native-audio-buffer-constructor-factory';\nexport * from './native-audio-buffer-source-node';\nexport * from './native-audio-buffer-source-node-factory';\nexport * from './native-audio-buffer-source-node-factory-factory';\nexport * from './native-audio-context';\nexport * from './native-audio-context-constructor';\nexport * from './native-audio-context-constructor-factory';\nexport * from './native-audio-destination-node';\nexport * from './native-audio-destination-node-factory';\nexport * from './native-audio-destination-node-factory-factory';\nexport * from './native-audio-listener';\nexport * from './native-audio-node';\nexport * from './native-audio-param';\nexport * from './native-audio-param-map';\nexport * from './native-audio-worklet';\nexport * from './native-audio-worklet-node';\nexport * from './native-audio-worklet-node-constructor';\nexport * from './native-audio-worklet-node-constructor-factory';\nexport * from './native-audio-worklet-node-factory';\nexport * from './native-audio-worklet-node-factory-factory';\nexport * from './native-audio-worklet-node-faker-factory';\nexport * from './native-audio-worklet-node-faker-factory-factory';\nexport * from './native-audio-worklet-node-options';\nexport * from './native-biquad-filter-node';\nexport * from './native-biquad-filter-node-factory';\nexport * from './native-channel-merger-node';\nexport * from './native-channel-merger-node-factory';\nexport * from './native-channel-merger-node-factory-factory';\nexport * from './native-channel-splitter-node';\nexport * from './native-channel-splitter-node-factory';\nexport * from './native-constant-source-node';\nexport * from './native-constant-source-node-factory';\nexport * from './native-constant-source-node-factory-factory';\nexport * from './native-constant-source-node-faker-factory';\nexport * from './native-constant-source-node-faker-factory-factory';\nexport * from './native-context';\nexport * from './native-convolver-node';\nexport * from './native-convolver-node-factory';\nexport * from './native-convolver-node-factory-factory';\nexport * from './native-delay-node-factory';\nexport * from './native-delay-node';\nexport * from './native-dynamics-compressor-node';\nexport * from './native-dynamics-compressor-node-factory';\nexport * from './native-dynamics-compressor-node-factory-factory';\nexport * from './native-event-target';\nexport * from './native-gain-node';\nexport * from './native-gain-node-factory';\nexport * from './native-iir-filter-node';\nexport * from './native-iir-filter-node-factory';\nexport * from './native-iir-filter-node-factory-factory';\nexport * from './native-iir-filter-node-faker-factory';\nexport * from './native-iir-filter-node-faker-factory-factory';\nexport * from './native-media-element-audio-source-node';\nexport * from './native-media-element-audio-source-node-factory';\nexport * from './native-media-stream-audio-destination-node';\nexport * from './native-media-stream-audio-destination-node-factory';\nexport * from './native-media-stream-audio-source-node';\nexport * from './native-media-stream-audio-source-node-factory';\nexport * from './native-media-stream-track-audio-source-node';\nexport * from './native-media-stream-track-audio-source-node-factory';\nexport * from './native-media-stream-track-audio-source-node-factory-factory';\nexport * from './native-offline-audio-context';\nexport * from './native-offline-audio-context-constructor';\nexport * from './native-offline-audio-context-constructor-factory';\nexport * from './native-oscillator-node';\nexport * from './native-oscillator-node-factory';\nexport * from './native-oscillator-node-factory-factory';\nexport * from './native-panner-node';\nexport * from './native-panner-node-factory';\nexport * from './native-panner-node-factory-factory';\nexport * from './native-panner-node-faker-factory';\nexport * from './native-panner-node-faker-factory-factory';\nexport * from './native-periodic-wave';\nexport * from './native-periodic-wave-factory';\nexport * from './native-periodic-wave-factory-factory';\nexport * from './native-script-processor-node';\nexport * from './native-script-processor-node-factory';\nexport * from './native-stereo-panner-node';\nexport * from './native-stereo-panner-node-factory';\nexport * from './native-stereo-panner-node-factory-factory';\nexport * from './native-stereo-panner-node-faker-factory';\nexport * from './native-stereo-panner-node-faker-factory-factory';\nexport * from './native-wave-shaper-node';\nexport * from './native-wave-shaper-node-factory';\nexport * from './native-wave-shaper-node-factory-factory';\nexport * from './native-wave-shaper-node-faker-factory';\nexport * from './native-wave-shaper-node-faker-factory-factory';\nexport * from './not-supported-error-factory';\nexport * from './offline-audio-context-constructor-factory';\nexport * from './oscillator-node-constructor';\nexport * from './oscillator-node-constructor-factory';\nexport * from './oscillator-node-renderer';\nexport * from './oscillator-node-renderer-factory';\nexport * from './oscillator-node-renderer-factory-factory';\nexport * from './oscillator-type';\nexport * from './output-connection';\nexport * from './over-sample-type';\nexport * from './overwrite-accessors-function';\nexport * from './panner-node-constructor';\nexport * from './panner-node-constructor-factory';\nexport * from './panner-node-renderer-factory';\nexport * from './panner-node-renderer-factory-factory';\nexport * from './panning-model-type';\nexport * from './passive-audio-node-input-connection';\nexport * from './passive-audio-param-input-connection';\nexport * from './periodic-wave-constructor';\nexport * from './periodic-wave-constructor-factory';\nexport * from './pick-element-from-set-function';\nexport * from './render-automation-factory';\nexport * from './render-automation-function';\nexport * from './render-inputs-of-audio-node-factory';\nexport * from './render-inputs-of-audio-node-function';\nexport * from './render-inputs-of-audio-param-factory';\nexport * from './render-inputs-of-audio-param-function';\nexport * from './render-native-offline-audio-context-factory';\nexport * from './render-native-offline-audio-context-function';\nexport * from './sanitize-audio-worklet-node-options-function';\nexport * from './sanitize-channel-splitter-options-function';\nexport * from './sanitize-periodic-wave-options-function';\nexport * from './set-active-audio-worklet-node-inputs-factory';\nexport * from './set-active-audio-worklet-node-inputs-function';\nexport * from './set-audio-node-tail-time-factory';\nexport * from './set-audio-node-tail-time-function';\nexport * from './set-value-at-time-until-possible-function';\nexport * from './start-rendering-factory';\nexport * from './start-rendering-function';\nexport * from './stereo-panner-node-constructor';\nexport * from './stereo-panner-node-constructor-factory';\nexport * from './stereo-panner-node-renderer-factory-factory';\nexport * from './stereo-panner-node-renderer-factory';\nexport * from './test-audio-buffer-copy-channel-methods-subarray-support-factory';\nexport * from './test-audio-buffer-constructor-support-factory';\nexport * from './test-audio-context-close-method-support-factory';\nexport * from './test-audio-context-decode-audio-data-method-type-error-support-factory';\nexport * from './test-audio-context-options-support-factory';\nexport * from './test-audio-node-connect-method-support-factory';\nexport * from './test-audio-worklet-node-options-clonability-function';\nexport * from './test-audio-worklet-processor-no-outputs-support-factory';\nexport * from './test-audio-worklet-processor-post-message-support-factory';\nexport * from './test-channel-merger-node-channel-count-support-factory';\nexport * from './test-constant-source-node-accurate-scheduling-support-factory';\nexport * from './test-convolver-node-buffer-reassignability-support-factory';\nexport * from './test-convolver-node-channel-count-support-factory';\nexport * from './test-is-secure-context-support-factory';\nexport * from './test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nexport * from './test-offline-audio-context-current-time-support-factory';\nexport * from './test-stereo-panner-node-default-value-support-factory';\nexport * from './unknown-error-factory';\nexport * from './unrendered-audio-worklet-node-store';\nexport * from './unrendered-audio-worklet-nodes';\nexport * from './wave-shaper-node-constructor';\nexport * from './wave-shaper-node-constructor-factory';\nexport * from './wave-shaper-node-renderer-factory-factory';\nexport * from './wave-shaper-node-renderer-factory';\nexport * from './window';\nexport * from './window-factory';\nexport * from './wrap-audio-buffer-copy-channel-methods-factory';\nexport * from './wrap-audio-buffer-copy-channel-methods-function';\nexport * from './wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory';\nexport * from './wrap-audio-buffer-copy-channel-methods-out-of-bounds-function';\nexport * from './wrap-audio-buffer-source-node-start-method-offset-clamping-function';\nexport * from './wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory';\nexport * from './wrap-audio-buffer-source-node-stop-method-nullified-buffer-function';\nexport * from './wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function';\nexport * from './wrap-channel-merger-node-factory';\nexport * from './wrap-channel-merger-node-function';\nexport * from './wrap-event-listener-function';\n//# sourceMappingURL=index.js.map","export {};\n//# sourceMappingURL=insert-element-in-set-function.js.map","export {};\n//# sourceMappingURL=internal-state-event-listener.js.map","export {};\n//# sourceMappingURL=invalid-access-error-factory.js.map","export {};\n//# sourceMappingURL=invalid-state-error-factory.js.map","export {};\n//# sourceMappingURL=is-active-audio-node-function.js.map","export {};\n//# sourceMappingURL=is-any-audio-context-factory.js.map","export {};\n//# sourceMappingURL=is-any-audio-context-function.js.map","export {};\n//# sourceMappingURL=is-any-audio-node-factory.js.map","export {};\n//# sourceMappingURL=is-any-audio-node-function.js.map","export {};\n//# sourceMappingURL=is-any-audio-param-factory.js.map","export {};\n//# sourceMappingURL=is-any-audio-param-function.js.map","export {};\n//# sourceMappingURL=is-any-offline-audio-context-factory.js.map","export {};\n//# sourceMappingURL=is-any-offline-audio-context-function.js.map","export {};\n//# sourceMappingURL=is-dc-curve-function.js.map","export {};\n//# sourceMappingURL=is-native-audio-context-factory.js.map","export {};\n//# sourceMappingURL=is-native-audio-context-function.js.map","export {};\n//# sourceMappingURL=is-native-audio-node-factory.js.map","export {};\n//# sourceMappingURL=is-native-audio-node-function.js.map","export {};\n//# sourceMappingURL=is-native-audio-param-factory.js.map","export {};\n//# sourceMappingURL=is-native-audio-param-function.js.map","export {};\n//# sourceMappingURL=is-native-context-factory.js.map","export {};\n//# sourceMappingURL=is-native-context-function.js.map","export {};\n//# sourceMappingURL=is-native-offline-audio-context-factory.js.map","export {};\n//# sourceMappingURL=is-native-offline-audio-context-function.js.map","export {};\n//# sourceMappingURL=is-part-of-a-cycle-function.js.map","export {};\n//# sourceMappingURL=is-passive-audio-node-function.js.map","export {};\n//# sourceMappingURL=is-secure-context-factory.js.map","export {};\n//# sourceMappingURL=is-supported-promise-factory.js.map","export {};\n//# sourceMappingURL=media-element-audio-source-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=media-element-audio-source-node-constructor.js.map","export {};\n//# sourceMappingURL=media-stream-audio-destination-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=media-stream-audio-destination-node-constructor.js.map","export {};\n//# sourceMappingURL=media-stream-audio-source-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=media-stream-audio-source-node-constructor.js.map","export {};\n//# sourceMappingURL=media-stream-track-audio-source-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=media-stream-track-audio-source-node-constructor.js.map","export {};\n//# sourceMappingURL=minimal-audio-context-constructor-factory.js.map","export {};\n//# sourceMappingURL=minimal-audio-context-constructor.js.map","export {};\n//# sourceMappingURL=minimal-base-audio-context-constructor-factory.js.map","export {};\n//# sourceMappingURL=minimal-base-audio-context-constructor.js.map","export {};\n//# sourceMappingURL=minimal-offline-audio-context-constructor-factory.js.map","export {};\n//# sourceMappingURL=minimal-offline-audio-context-constructor.js.map","export {};\n//# sourceMappingURL=monitor-connections-factory.js.map","export {};\n//# sourceMappingURL=monitor-connections-function.js.map","export {};\n//# sourceMappingURL=native-analyser-node-factory-factory.js.map","export {};\n//# sourceMappingURL=native-analyser-node-factory.js.map","export {};\n//# sourceMappingURL=native-analyser-node.js.map","export {};\n//# sourceMappingURL=native-audio-buffer-constructor-factory.js.map","export {};\n//# sourceMappingURL=native-audio-buffer-constructor.js.map","export {};\n//# sourceMappingURL=native-audio-buffer-source-node-factory-factory.js.map","export {};\n//# sourceMappingURL=native-audio-buffer-source-node-factory.js.map","export {};\n//# sourceMappingURL=native-audio-buffer-source-node.js.map","export {};\n//# sourceMappingURL=native-audio-buffer.js.map","export {};\n//# sourceMappingURL=native-audio-context-constructor-factory.js.map","export {};\n//# sourceMappingURL=native-audio-context-constructor.js.map","export {};\n//# sourceMappingURL=native-audio-context.js.map","export {};\n//# sourceMappingURL=native-audio-destination-node-factory-factory.js.map","export {};\n//# sourceMappingURL=native-audio-destination-node-factory.js.map","export {};\n//# sourceMappingURL=native-audio-destination-node.js.map","export {};\n//# sourceMappingURL=native-audio-listener.js.map","export {};\n//# sourceMappingURL=native-audio-node.js.map","export {};\n//# sourceMappingURL=native-audio-param-map.js.map","export {};\n//# sourceMappingURL=native-audio-param.js.map","export {};\n//# sourceMappingURL=native-audio-worklet-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=native-audio-worklet-node-constructor.js.map","export {};\n//# sourceMappingURL=native-audio-worklet-node-factory-factory.js.map","export {};\n//# sourceMappingURL=native-audio-worklet-node-factory.js.map","export {};\n//# sourceMappingURL=native-audio-worklet-node-faker-factory-factory.js.map","export {};\n//# sourceMappingURL=native-audio-worklet-node-faker-factory.js.map","export {};\n//# sourceMappingURL=native-audio-worklet-node-options.js.map","export {};\n//# sourceMappingURL=native-audio-worklet-node.js.map","export {};\n//# sourceMappingURL=native-audio-worklet.js.map","export {};\n//# sourceMappingURL=native-biquad-filter-node-factory.js.map","export {};\n//# sourceMappingURL=native-biquad-filter-node.js.map","export {};\n//# sourceMappingURL=native-channel-merger-node-factory-factory.js.map","export {};\n//# sourceMappingURL=native-channel-merger-node-factory.js.map","export {};\n//# sourceMappingURL=native-channel-merger-node.js.map","export {};\n//# sourceMappingURL=native-channel-splitter-node-factory.js.map","export {};\n//# sourceMappingURL=native-channel-splitter-node.js.map","export {};\n//# sourceMappingURL=native-constant-source-node-factory-factory.js.map","export {};\n//# sourceMappingURL=native-constant-source-node-factory.js.map","export {};\n//# sourceMappingURL=native-constant-source-node-faker-factory-factory.js.map","export {};\n//# sourceMappingURL=native-constant-source-node-faker-factory.js.map","export {};\n//# sourceMappingURL=native-constant-source-node.js.map","export {};\n//# sourceMappingURL=native-context.js.map","export {};\n//# sourceMappingURL=native-convolver-node-factory-factory.js.map","export {};\n//# sourceMappingURL=native-convolver-node-factory.js.map","export {};\n//# sourceMappingURL=native-convolver-node.js.map","export {};\n//# sourceMappingURL=native-delay-node-factory.js.map","export {};\n//# sourceMappingURL=native-delay-node.js.map","export {};\n//# sourceMappingURL=native-dynamics-compressor-node-factory-factory.js.map","export {};\n//# sourceMappingURL=native-dynamics-compressor-node-factory.js.map","export {};\n//# sourceMappingURL=native-dynamics-compressor-node.js.map","export {};\n//# sourceMappingURL=native-event-target.js.map","export {};\n//# sourceMappingURL=native-gain-node-factory.js.map","export {};\n//# sourceMappingURL=native-gain-node.js.map","export {};\n//# sourceMappingURL=native-iir-filter-node-factory-factory.js.map","export {};\n//# sourceMappingURL=native-iir-filter-node-factory.js.map","export {};\n//# sourceMappingURL=native-iir-filter-node-faker-factory-factory.js.map","export {};\n//# sourceMappingURL=native-iir-filter-node-faker-factory.js.map","export {};\n//# sourceMappingURL=native-iir-filter-node.js.map","export {};\n//# sourceMappingURL=native-media-element-audio-source-node-factory.js.map","export {};\n//# sourceMappingURL=native-media-element-audio-source-node.js.map","export {};\n//# sourceMappingURL=native-media-stream-audio-destination-node-factory.js.map","export {};\n//# sourceMappingURL=native-media-stream-audio-destination-node.js.map","export {};\n//# sourceMappingURL=native-media-stream-audio-source-node-factory.js.map","export {};\n//# sourceMappingURL=native-media-stream-audio-source-node.js.map","export {};\n//# sourceMappingURL=native-media-stream-track-audio-source-node-factory-factory.js.map","export {};\n//# sourceMappingURL=native-media-stream-track-audio-source-node-factory.js.map","export {};\n//# sourceMappingURL=native-media-stream-track-audio-source-node.js.map","export {};\n//# sourceMappingURL=native-offline-audio-context-constructor-factory.js.map","export {};\n//# sourceMappingURL=native-offline-audio-context-constructor.js.map","export {};\n//# sourceMappingURL=native-offline-audio-context.js.map","export {};\n//# sourceMappingURL=native-oscillator-node-factory-factory.js.map","export {};\n//# sourceMappingURL=native-oscillator-node-factory.js.map","export {};\n//# sourceMappingURL=native-oscillator-node.js.map","export {};\n//# sourceMappingURL=native-panner-node-factory-factory.js.map","export {};\n//# sourceMappingURL=native-panner-node-factory.js.map","export {};\n//# sourceMappingURL=native-panner-node-faker-factory-factory.js.map","export {};\n//# sourceMappingURL=native-panner-node-faker-factory.js.map","export {};\n//# sourceMappingURL=native-panner-node.js.map","export {};\n//# sourceMappingURL=native-periodic-wave-factory-factory.js.map","export {};\n//# sourceMappingURL=native-periodic-wave-factory.js.map","export {};\n//# sourceMappingURL=native-periodic-wave.js.map","export {};\n//# sourceMappingURL=native-script-processor-node-factory.js.map","export {};\n//# sourceMappingURL=native-script-processor-node.js.map","export {};\n//# sourceMappingURL=native-stereo-panner-node-factory-factory.js.map","export {};\n//# sourceMappingURL=native-stereo-panner-node-factory.js.map","export {};\n//# sourceMappingURL=native-stereo-panner-node-faker-factory-factory.js.map","export {};\n//# sourceMappingURL=native-stereo-panner-node-faker-factory.js.map","export {};\n//# sourceMappingURL=native-stereo-panner-node.js.map","export {};\n//# sourceMappingURL=native-wave-shaper-node-factory-factory.js.map","export {};\n//# sourceMappingURL=native-wave-shaper-node-factory.js.map","export {};\n//# sourceMappingURL=native-wave-shaper-node-faker-factory-factory.js.map","export {};\n//# sourceMappingURL=native-wave-shaper-node-faker-factory.js.map","export {};\n//# sourceMappingURL=native-wave-shaper-node.js.map","export {};\n//# sourceMappingURL=not-supported-error-factory.js.map","export {};\n//# sourceMappingURL=offline-audio-context-constructor-factory.js.map","export {};\n//# sourceMappingURL=oscillator-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=oscillator-node-constructor.js.map","export {};\n//# sourceMappingURL=oscillator-node-renderer-factory-factory.js.map","export {};\n//# sourceMappingURL=oscillator-node-renderer-factory.js.map","export {};\n//# sourceMappingURL=oscillator-node-renderer.js.map","export {};\n//# sourceMappingURL=oscillator-type.js.map","export {};\n//# sourceMappingURL=output-connection.js.map","export {};\n//# sourceMappingURL=over-sample-type.js.map","export {};\n//# sourceMappingURL=overwrite-accessors-function.js.map","export {};\n//# sourceMappingURL=panner-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=panner-node-constructor.js.map","export {};\n//# sourceMappingURL=panner-node-renderer-factory-factory.js.map","export {};\n//# sourceMappingURL=panner-node-renderer-factory.js.map","export {};\n//# sourceMappingURL=panning-model-type.js.map","export {};\n//# sourceMappingURL=passive-audio-node-input-connection.js.map","export {};\n//# sourceMappingURL=passive-audio-param-input-connection.js.map","export {};\n//# sourceMappingURL=periodic-wave-constructor-factory.js.map","export {};\n//# sourceMappingURL=periodic-wave-constructor.js.map","export {};\n//# sourceMappingURL=pick-element-from-set-function.js.map","export {};\n//# sourceMappingURL=render-automation-factory.js.map","export {};\n//# sourceMappingURL=render-automation-function.js.map","export {};\n//# sourceMappingURL=render-inputs-of-audio-node-factory.js.map","export {};\n//# sourceMappingURL=render-inputs-of-audio-node-function.js.map","export {};\n//# sourceMappingURL=render-inputs-of-audio-param-factory.js.map","export {};\n//# sourceMappingURL=render-inputs-of-audio-param-function.js.map","export {};\n//# sourceMappingURL=render-native-offline-audio-context-factory.js.map","export {};\n//# sourceMappingURL=render-native-offline-audio-context-function.js.map","export {};\n//# sourceMappingURL=sanitize-audio-worklet-node-options-function.js.map","export {};\n//# sourceMappingURL=sanitize-channel-splitter-options-function.js.map","export {};\n//# sourceMappingURL=sanitize-periodic-wave-options-function.js.map","export {};\n//# sourceMappingURL=set-active-audio-worklet-node-inputs-factory.js.map","export {};\n//# sourceMappingURL=set-active-audio-worklet-node-inputs-function.js.map","export {};\n//# sourceMappingURL=set-audio-node-tail-time-factory.js.map","export {};\n//# sourceMappingURL=set-audio-node-tail-time-function.js.map","export {};\n//# sourceMappingURL=set-value-at-time-until-possible-function.js.map","export {};\n//# sourceMappingURL=start-rendering-factory.js.map","export {};\n//# sourceMappingURL=start-rendering-function.js.map","export {};\n//# sourceMappingURL=stereo-panner-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=stereo-panner-node-constructor.js.map","export {};\n//# sourceMappingURL=stereo-panner-node-renderer-factory-factory.js.map","export {};\n//# sourceMappingURL=stereo-panner-node-renderer-factory.js.map","export {};\n//# sourceMappingURL=test-audio-buffer-constructor-support-factory.js.map","export {};\n//# sourceMappingURL=test-audio-buffer-copy-channel-methods-subarray-support-factory.js.map","export {};\n//# sourceMappingURL=test-audio-context-close-method-support-factory.js.map","export {};\n//# sourceMappingURL=test-audio-context-decode-audio-data-method-type-error-support-factory.js.map","export {};\n//# sourceMappingURL=test-audio-context-options-support-factory.js.map","export {};\n//# sourceMappingURL=test-audio-node-connect-method-support-factory.js.map","export {};\n//# sourceMappingURL=test-audio-worklet-node-options-clonability-function.js.map","export {};\n//# sourceMappingURL=test-audio-worklet-processor-no-outputs-support-factory.js.map","export {};\n//# sourceMappingURL=test-audio-worklet-processor-post-message-support-factory.js.map","export {};\n//# sourceMappingURL=test-channel-merger-node-channel-count-support-factory.js.map","export {};\n//# sourceMappingURL=test-constant-source-node-accurate-scheduling-support-factory.js.map","export {};\n//# sourceMappingURL=test-convolver-node-buffer-reassignability-support-factory.js.map","export {};\n//# sourceMappingURL=test-convolver-node-channel-count-support-factory.js.map","export {};\n//# sourceMappingURL=test-is-secure-context-support-factory.js.map","export {};\n//# sourceMappingURL=test-media-stream-audio-source-node-media-stream-without-audio-track-support.js.map","export {};\n//# sourceMappingURL=test-offline-audio-context-current-time-support-factory.js.map","export {};\n//# sourceMappingURL=test-stereo-panner-node-default-value-support-factory.js.map","export {};\n//# sourceMappingURL=unknown-error-factory.js.map","export {};\n//# sourceMappingURL=unrendered-audio-worklet-node-store.js.map","export {};\n//# sourceMappingURL=unrendered-audio-worklet-nodes.js.map","export {};\n//# sourceMappingURL=wave-shaper-node-constructor-factory.js.map","export {};\n//# sourceMappingURL=wave-shaper-node-constructor.js.map","export {};\n//# sourceMappingURL=wave-shaper-node-renderer-factory-factory.js.map","export {};\n//# sourceMappingURL=wave-shaper-node-renderer-factory.js.map","export {};\n//# sourceMappingURL=window-factory.js.map","export {};\n//# sourceMappingURL=window.js.map","export {};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods-factory.js.map","export {};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods-function.js.map","export {};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory.js.map","export {};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods-out-of-bounds-function.js.map","export {};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-offset-clamping-function.js.map","export {};\n//# sourceMappingURL=wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory.js.map","export {};\n//# sourceMappingURL=wrap-audio-buffer-source-node-stop-method-nullified-buffer-function.js.map","export {};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function.js.map","export {};\n//# sourceMappingURL=wrap-channel-merger-node-factory.js.map","export {};\n//# sourceMappingURL=wrap-channel-merger-node-function.js.map","export {};\n//# sourceMappingURL=wrap-event-listener-function.js.map","export const createAnimationFrame = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return () => wrapSubscribeFunction((observer) => {\n        if (window === null || window.cancelAnimationFrame === undefined || window.requestAnimationFrame === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        let animationFrameHandle = window.requestAnimationFrame(function animationFrameCallback(timestamp) {\n            animationFrameHandle = window.requestAnimationFrame(animationFrameCallback);\n            observer.next(timestamp);\n        });\n        return () => window.cancelAnimationFrame(animationFrameHandle);\n    });\n};\n//# sourceMappingURL=animation-frame.js.map","export const createAttribute = (mapSubscribableThing, mutations, prependSubscribableThing) => {\n    return (htmlElement, name) => {\n        const getAttribute = () => htmlElement.getAttribute(name);\n        return prependSubscribableThing(mapSubscribableThing(mutations(htmlElement, {\n            attributeFilter: [name],\n            childList: false,\n            subtree: false\n        }), () => getAttribute()), getAttribute());\n    };\n};\n//# sourceMappingURL=attribute.js.map","export const createGeolocation = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (options) => wrapSubscribeFunction((observer) => {\n        if (window === null ||\n            window.navigator === undefined ||\n            window.navigator.geolocation === undefined ||\n            window.navigator.geolocation.clearWatch === undefined ||\n            window.navigator.geolocation.watchPosition === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const watchId = window.navigator.geolocation.watchPosition((position) => observer.next(position), (err) => observer.error(err), options);\n        return () => window.navigator.geolocation.clearWatch(watchId);\n    });\n};\n//# sourceMappingURL=geolocation.js.map","export const createIntersections = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (htmlElement, options) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.IntersectionObserver === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const intersectionObserverObserver = new window.IntersectionObserver((entries) => observer.next(entries), options);\n        try {\n            intersectionObserverObserver.observe(htmlElement);\n        }\n        catch (err) {\n            observer.error(err);\n        }\n        return () => intersectionObserverObserver.disconnect();\n    });\n};\n//# sourceMappingURL=intersections.js.map","export const createMapSubscribableThing = (wrapSubscribeFunction) => (subscribableThing, map) => wrapSubscribeFunction((observer) => subscribableThing({ ...observer, next: (value) => observer.next(map(value)) }));\n//# sourceMappingURL=map-subscribable-thing.js.map","export const createMediaDevices = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return () => wrapSubscribeFunction((observer) => {\n        if (window === null ||\n            window.navigator === undefined ||\n            window.navigator.mediaDevices === undefined ||\n            window.navigator.mediaDevices.enumerateDevices === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        let isActive = true;\n        const enumerateDevices = () => {\n            window.navigator.mediaDevices.enumerateDevices().then((mediaDevices) => {\n                if (isActive) {\n                    observer.next(mediaDevices);\n                }\n            }, (err) => {\n                if (isActive) {\n                    unsubscribe();\n                    observer.error(err);\n                }\n            });\n        };\n        const unsubscribe = () => {\n            isActive = false;\n            window.navigator.mediaDevices.removeEventListener('devicechange', enumerateDevices);\n        };\n        enumerateDevices();\n        window.navigator.mediaDevices.addEventListener('devicechange', enumerateDevices);\n        return unsubscribe;\n    });\n};\n//# sourceMappingURL=media-devices.js.map","export const createMediaQueryMatch = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (mediaQueryString) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.matchMedia === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const mediaQueryList = window.matchMedia(mediaQueryString);\n        observer.next(mediaQueryList.matches);\n        mediaQueryList.onchange = () => observer.next(mediaQueryList.matches);\n        return () => {\n            mediaQueryList.onchange = null;\n        };\n    });\n};\n//# sourceMappingURL=media-query-match.js.map","export const createMetrics = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (options) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.PerformanceObserver === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const performanceObserver = new window.PerformanceObserver((entryList) => observer.next(entryList.getEntries()));\n        try {\n            performanceObserver.observe(options);\n        }\n        catch (err) {\n            observer.error(err);\n        }\n        return () => performanceObserver.disconnect();\n    });\n};\n//# sourceMappingURL=metrics.js.map","export const createMidiInputs = (wrapSubscribeFunction) => {\n    return (midiAccess) => wrapSubscribeFunction((observer) => {\n        let midiInputs = Array.from(midiAccess.inputs.values());\n        const emitMidiInputs = () => {\n            const midiAccessInputs = midiAccess.inputs;\n            if (midiInputs.length !== midiAccessInputs.size || midiInputs.some(({ id }) => !midiAccessInputs.has(id))) {\n                midiInputs = Array.from(midiAccessInputs.values());\n                observer.next(midiInputs);\n            }\n        };\n        observer.next(midiInputs);\n        midiAccess.addEventListener('statechange', emitMidiInputs);\n        return () => midiAccess.removeEventListener('statechange', emitMidiInputs);\n    });\n};\n//# sourceMappingURL=midi-inputs.js.map","export const createMidiOutputs = (wrapSubscribeFunction) => {\n    return (midiAccess) => wrapSubscribeFunction((observer) => {\n        let midiOutputs = Array.from(midiAccess.outputs.values());\n        const emitMidiOutputs = () => {\n            const midiAccessOutputs = midiAccess.outputs;\n            if (midiOutputs.length !== midiAccessOutputs.size || midiOutputs.some(({ id }) => !midiAccessOutputs.has(id))) {\n                midiOutputs = Array.from(midiAccessOutputs.values());\n                observer.next(midiOutputs);\n            }\n        };\n        observer.next(midiOutputs);\n        midiAccess.addEventListener('statechange', emitMidiOutputs);\n        return () => midiAccess.removeEventListener('statechange', emitMidiOutputs);\n    });\n};\n//# sourceMappingURL=midi-outputs.js.map","export const createMutations = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (htmlElement, options) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.MutationObserver === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const mutationObserver = new window.MutationObserver((records) => observer.next(records));\n        try {\n            mutationObserver.observe(htmlElement, options);\n        }\n        catch (err) {\n            observer.error(err);\n        }\n        return () => mutationObserver.disconnect();\n    });\n};\n//# sourceMappingURL=mutations.js.map","export const createOn = (wrapSubscribeFunction) => {\n    return (target, type, options) => wrapSubscribeFunction((observer) => {\n        const listener = (event) => observer.next(event);\n        target.addEventListener(type, listener, options);\n        return () => target.removeEventListener(type, listener, options);\n    });\n};\n//# sourceMappingURL=on.js.map","export const createOnline = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return () => wrapSubscribeFunction((observer) => {\n        if (window === null || window.navigator === undefined || window.navigator.onLine === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const emitFalse = () => observer.next(false);\n        const emitTrue = () => observer.next(true);\n        window.addEventListener('offline', emitFalse);\n        window.addEventListener('online', emitTrue);\n        observer.next(window.navigator.onLine);\n        return () => {\n            window.removeEventListener('offline', emitFalse);\n            window.removeEventListener('online', emitTrue);\n        };\n    });\n};\n//# sourceMappingURL=online.js.map","export const createPermissionState = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (permissionDescriptor) => wrapSubscribeFunction((observer) => {\n        if (window === null ||\n            window.navigator === undefined ||\n            window.navigator.permissions === undefined ||\n            window.navigator.permissions.query === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        let isActive = true;\n        let unsubscribe = () => {\n            isActive = false;\n        };\n        window.navigator.permissions.query(permissionDescriptor).then((permissionStatus) => {\n            if (isActive) {\n                observer.next(permissionStatus.state);\n            }\n            if (isActive) {\n                permissionStatus.onchange = () => observer.next(permissionStatus.state);\n                unsubscribe = () => {\n                    permissionStatus.onchange = null;\n                };\n            }\n        }, (err) => {\n            if (isActive) {\n                observer.error(err);\n            }\n        });\n        return () => unsubscribe();\n    });\n};\n//# sourceMappingURL=permission-state.js.map","export const createPrependSubscribableThing = (wrapSubscribeFunction) => (subscribableThing, prependedValue) => wrapSubscribeFunction((observer) => {\n    observer.next(prependedValue);\n    return subscribableThing(observer);\n});\n//# sourceMappingURL=prepend-subscribable-thing.js.map","export const createReports = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (options) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.ReportingObserver === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const reportingObserver = new window.ReportingObserver((reportList) => observer.next(reportList), options);\n        reportingObserver.observe();\n        return () => reportingObserver.disconnect();\n    });\n};\n//# sourceMappingURL=reports.js.map","export const createResizes = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (htmlElement, options) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.ResizeObserver === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const resizeObserver = new window.ResizeObserver((entries) => observer.next(entries));\n        try {\n            resizeObserver.observe(htmlElement, options);\n        }\n        catch (err) {\n            observer.error(err);\n        }\n        return () => resizeObserver.disconnect();\n    });\n};\n//# sourceMappingURL=resizes.js.map","export const createUnhandledRejection = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (coolingOffPeriod) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.clearInterval === undefined || window.setInterval === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const possiblyUnhandledRejections = new Map();\n        let intervalId = null;\n        const deletePossiblyUnhandledRejection = ({ promise }) => possiblyUnhandledRejections.delete(promise);\n        const emitUnhandledRejection = () => {\n            const latestTimestampToEmit = Date.now() - coolingOffPeriod;\n            possiblyUnhandledRejections.forEach(({ reason, timestamp }, promise) => {\n                if (timestamp > latestTimestampToEmit) {\n                    return;\n                }\n                possiblyUnhandledRejections.delete(promise);\n                observer.next(reason);\n            });\n            if (intervalId !== null && possiblyUnhandledRejections.size === 0) {\n                window.clearInterval(intervalId);\n                intervalId = null;\n            }\n        };\n        const registerPossiblyUnhandledRejection = (event) => {\n            event.preventDefault();\n            possiblyUnhandledRejections.set(event.promise, {\n                reason: event.reason,\n                timestamp: Date.now()\n            });\n            if (intervalId === null) {\n                intervalId = window.setInterval(emitUnhandledRejection, coolingOffPeriod / 2);\n            }\n        };\n        window.addEventListener('rejectionhandled', deletePossiblyUnhandledRejection);\n        window.addEventListener('unhandledrejection', registerPossiblyUnhandledRejection);\n        return () => {\n            if (intervalId !== null) {\n                window.clearInterval(intervalId);\n            }\n            window.removeEventListener('rejectionhandled', deletePossiblyUnhandledRejection);\n            window.removeEventListener('unhandledrejection', registerPossiblyUnhandledRejection);\n        };\n    });\n};\n//# sourceMappingURL=unhandled-rejection.js.map","export const createVideoFrame = (emitNotSupportedError, wrapSubscribeFunction) => {\n    return (videoElement) => wrapSubscribeFunction((observer) => {\n        if (videoElement.cancelVideoFrameCallback === undefined || videoElement.requestVideoFrameCallback === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        let videoFrameHandle = videoElement.requestVideoFrameCallback(function videoFrameCallback(now, metadata) {\n            videoFrameHandle = videoElement.requestVideoFrameCallback(videoFrameCallback);\n            observer.next({ ...metadata, now });\n        });\n        return () => videoElement.cancelVideoFrameCallback(videoFrameHandle);\n    });\n};\n//# sourceMappingURL=video-frame.js.map","export const createWakeLock = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (type) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.navigator === undefined || window.navigator.wakeLock === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const releaseWakeLock = (wakeLockSentinel) => wakeLockSentinel.release().catch(() => {\n            // Ignore errors.\n        });\n        const removeReleaseEventListener = (wakeLockSentinel) => {\n            wakeLockSentinel.onrelease = null;\n        };\n        let isActive = true;\n        const unsubscribeWhileRequesting = () => {\n            isActive = false;\n        };\n        let unsubscribe = unsubscribeWhileRequesting;\n        const requestWakeLock = () => window.navigator.wakeLock.request(type).then((wakeLockSentinel) => {\n            if (isActive) {\n                observer.next(true);\n            }\n            if (isActive) {\n                wakeLockSentinel.onrelease = () => {\n                    observer.next(false);\n                    unsubscribe = unsubscribeWhileRequesting;\n                    removeReleaseEventListener(wakeLockSentinel);\n                    requestWakeLock();\n                };\n                unsubscribe = () => {\n                    removeReleaseEventListener(wakeLockSentinel);\n                    releaseWakeLock(wakeLockSentinel);\n                };\n            }\n            else {\n                releaseWakeLock(wakeLockSentinel);\n            }\n        }, (err) => {\n            if (isActive) {\n                observer.error(err);\n            }\n        });\n        requestWakeLock();\n        return () => unsubscribe();\n    });\n};\n//# sourceMappingURL=wake-lock.js.map","// @todo TypeScript does not include type definitions for the Reporting API yet.\nexport const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","export const createWrapSubscribeFunction = (patch, toObserver) => {\n    const emptyFunction = () => { }; // tslint:disable-line:no-empty\n    const isNextFunction = (args) => typeof args[0] === 'function';\n    return (innerSubscribe) => {\n        const subscribe = ((...args) => {\n            const unsubscribe = innerSubscribe(isNextFunction(args) ? toObserver({ next: args[0] }) : toObserver(...args));\n            if (unsubscribe !== undefined) {\n                return unsubscribe;\n            }\n            return emptyFunction;\n        });\n        subscribe[Symbol.observable] = () => ({\n            subscribe: (...args) => ({ unsubscribe: subscribe(...args) })\n        });\n        return patch(subscribe);\n    };\n};\n//# sourceMappingURL=wrap-subscribe-function.js.map","export const emitNotSupportedError = (observer) => {\n    observer.error(new Error('The required browser API seems to be not supported.'));\n    return () => { }; // tslint:disable-line:no-empty\n};\n//# sourceMappingURL=emit-not-supported-error.js.map","export {};\n//# sourceMappingURL=html-video-element.js.map","export * from './html-video-element';\nexport * from './midi-access';\nexport * from './midi-connection-event';\nexport * from './midi-input';\nexport * from './midi-input-event-map';\nexport * from './midi-message-event';\nexport * from './midi-output';\nexport * from './midi-output-event-map';\nexport * from './midi-port';\nexport * from './report';\nexport * from './report-body';\nexport * from './reporting-observer';\nexport * from './reporting-observer-options';\nexport * from './resize-observer';\nexport * from './resize-observer-entry';\nexport * from './resize-observer-options';\nexport * from './resize-observer-size';\nexport * from './video-frame-metadata';\nexport * from './wake-lock';\nexport * from './wake-lock-sentinel';\nexport * from './wake-lock-sentinel-event-map';\n//# sourceMappingURL=index.js.map","export {};\n//# sourceMappingURL=midi-access.js.map","export {};\n//# sourceMappingURL=midi-connection-event.js.map","export {};\n//# sourceMappingURL=midi-input-event-map.js.map","export {};\n//# sourceMappingURL=midi-input.js.map","export {};\n//# sourceMappingURL=midi-message-event.js.map","export {};\n//# sourceMappingURL=midi-output-event-map.js.map","export {};\n//# sourceMappingURL=midi-output.js.map","export {};\n//# sourceMappingURL=midi-port.js.map","export {};\n//# sourceMappingURL=report-body.js.map","export {};\n//# sourceMappingURL=report.js.map","export {};\n//# sourceMappingURL=reporting-observer-options.js.map","export {};\n//# sourceMappingURL=reporting-observer.js.map","export {};\n//# sourceMappingURL=resize-observer-entry.js.map","export {};\n//# sourceMappingURL=resize-observer-options.js.map","export {};\n//# sourceMappingURL=resize-observer-size.js.map","export {};\n//# sourceMappingURL=resize-observer.js.map","export {};\n//# sourceMappingURL=video-frame-metadata.js.map","export {};\n//# sourceMappingURL=wake-lock-sentinel-event-map.js.map","export {};\n//# sourceMappingURL=wake-lock-sentinel.js.map","export {};\n//# sourceMappingURL=wake-lock.js.map","import { patch, toObserver } from 'rxjs-interop';\nimport { createAnimationFrame } from './factories/animation-frame';\nimport { createAttribute } from './factories/attribute';\nimport { createGeolocation } from './factories/geolocation';\nimport { createIntersections } from './factories/intersections';\nimport { createMapSubscribableThing } from './factories/map-subscribable-thing';\nimport { createMediaDevices } from './factories/media-devices';\nimport { createMediaQueryMatch } from './factories/media-query-match';\nimport { createMetrics } from './factories/metrics';\nimport { createMidiInputs } from './factories/midi-inputs';\nimport { createMidiOutputs } from './factories/midi-outputs';\nimport { createMutations } from './factories/mutations';\nimport { createOn } from './factories/on';\nimport { createOnline } from './factories/online';\nimport { createPermissionState } from './factories/permission-state';\nimport { createPrependSubscribableThing } from './factories/prepend-subscribable-thing';\nimport { createReports } from './factories/reports';\nimport { createResizes } from './factories/resizes';\nimport { createUnhandledRejection } from './factories/unhandled-rejection';\nimport { createVideoFrame } from './factories/video-frame';\nimport { createWakeLock } from './factories/wake-lock';\nimport { createWindow } from './factories/window';\nimport { createWrapSubscribeFunction } from './factories/wrap-subscribe-function';\nimport { emitNotSupportedError } from './functions/emit-not-supported-error';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst window = createWindow();\nconst wrapSubscribeFunction = createWrapSubscribeFunction(patch, toObserver);\nexport const animationFrame = createAnimationFrame(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mutations = createMutations(emitNotSupportedError, window, wrapSubscribeFunction);\nconst mapSubscribableThing = createMapSubscribableThing(wrapSubscribeFunction);\nconst prependSubscribableThing = createPrependSubscribableThing(wrapSubscribeFunction);\nexport const attribute = createAttribute(mapSubscribableThing, mutations, prependSubscribableThing);\nexport const geolocation = createGeolocation(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const intersections = createIntersections(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mediaDevices = createMediaDevices(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mediaQueryMatch = createMediaQueryMatch(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const metrics = createMetrics(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const midiInputs = createMidiInputs(wrapSubscribeFunction);\nexport const midiOutputs = createMidiOutputs(wrapSubscribeFunction);\nexport const on = createOn(wrapSubscribeFunction);\nexport const online = createOnline(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const permissionState = createPermissionState(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const reports = createReports(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const resizes = createResizes(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const unhandledRejection = createUnhandledRejection(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const videoFrame = createVideoFrame(emitNotSupportedError, wrapSubscribeFunction);\nexport const wakeLock = createWakeLock(emitNotSupportedError, window, wrapSubscribeFunction);\n//# sourceMappingURL=module.js.map","export {};\n//# sourceMappingURL=animation-frame-factory.js.map","export {};\n//# sourceMappingURL=animation-frame-function.js.map","export {};\n//# sourceMappingURL=emit-not-supported-error-function.js.map","export {};\n//# sourceMappingURL=event-handler.js.map","export {};\n//# sourceMappingURL=event-target-with-property-handler.js.map","export {};\n//# sourceMappingURL=event-type.js.map","export {};\n//# sourceMappingURL=flexible-subscribe-function.js.map","export * from './animation-frame-factory';\nexport * from './animation-frame-function';\nexport * from './emit-not-supported-error-function';\nexport * from './event-handler';\nexport * from './event-target-with-property-handler';\nexport * from './event-type';\nexport * from './flexible-subscribe-function';\nexport * from './intersections-factory';\nexport * from './intersections-function';\nexport * from './media-devices-factory';\nexport * from './media-devices-function';\nexport * from './media-query-match-factory';\nexport * from './media-query-match-function';\nexport * from './metrics-factory';\nexport * from './metrics-function';\nexport * from './midi-connection-event-handler';\nexport * from './midi-inputs-factory';\nexport * from './midi-inputs-function';\nexport * from './midi-message-event-handler';\nexport * from './midi-outputs-factory';\nexport * from './midi-outputs-function';\nexport * from './midi-port-connection-state';\nexport * from './midi-port-device-state';\nexport * from './midi-port-type';\nexport * from './mutations-factory';\nexport * from './mutations-function';\nexport * from './observer-parameters';\nexport * from './online-factory';\nexport * from './online-function';\nexport * from './on-factory';\nexport * from './on-function';\nexport * from './optional-unsubscribe-function';\nexport * from './permission-state-factory';\nexport * from './permission-state-function';\nexport * from './release-event-handler';\nexport * from './reports-factory';\nexport * from './reports-function';\nexport * from './resize-observer-box-options';\nexport * from './resizes-factory';\nexport * from './resizes-function';\nexport * from './subscribable-thing';\nexport * from './subscribe-function';\nexport * from './unhandled-rejection-factory';\nexport * from './unhandled-rejection-function';\nexport * from './unsubscribe-function';\nexport * from './video-frame-factory';\nexport * from './video-frame-function';\nexport * from './video-frame-request-callback';\nexport * from './wake-lock-factory';\nexport * from './wake-lock-function';\nexport * from './wake-lock-type';\nexport * from './window';\nexport * from './window-factory';\nexport * from './wrap-subscribe-function-factory';\nexport * from './wrap-subscribe-function-function';\n//# sourceMappingURL=index.js.map","export {};\n//# sourceMappingURL=intersections-factory.js.map","export {};\n//# sourceMappingURL=intersections-function.js.map","export {};\n//# sourceMappingURL=media-devices-factory.js.map","export {};\n//# sourceMappingURL=media-devices-function.js.map","export {};\n//# sourceMappingURL=media-query-match-factory.js.map","export {};\n//# sourceMappingURL=media-query-match-function.js.map","export {};\n//# sourceMappingURL=metrics-factory.js.map","export {};\n//# sourceMappingURL=metrics-function.js.map","export {};\n//# sourceMappingURL=midi-connection-event-handler.js.map","export {};\n//# sourceMappingURL=midi-inputs-factory.js.map","export {};\n//# sourceMappingURL=midi-inputs-function.js.map","export {};\n//# sourceMappingURL=midi-message-event-handler.js.map","export {};\n//# sourceMappingURL=midi-outputs-factory.js.map","export {};\n//# sourceMappingURL=midi-outputs-function.js.map","export {};\n//# sourceMappingURL=midi-port-connection-state.js.map","export {};\n//# sourceMappingURL=midi-port-device-state.js.map","export {};\n//# sourceMappingURL=midi-port-type.js.map","export {};\n//# sourceMappingURL=mutations-factory.js.map","export {};\n//# sourceMappingURL=mutations-function.js.map","export {};\n//# sourceMappingURL=observer-parameters.js.map","export {};\n//# sourceMappingURL=on-factory.js.map","export {};\n//# sourceMappingURL=on-function.js.map","export {};\n//# sourceMappingURL=online-factory.js.map","export {};\n//# sourceMappingURL=online-function.js.map","export {};\n//# sourceMappingURL=optional-unsubscribe-function.js.map","export {};\n//# sourceMappingURL=permission-state-factory.js.map","export {};\n//# sourceMappingURL=permission-state-function.js.map","export {};\n//# sourceMappingURL=release-event-handler.js.map","export {};\n//# sourceMappingURL=reports-factory.js.map","export {};\n//# sourceMappingURL=reports-function.js.map","export {};\n//# sourceMappingURL=resize-observer-box-options.js.map","export {};\n//# sourceMappingURL=resizes-factory.js.map","export {};\n//# sourceMappingURL=resizes-function.js.map","export {};\n//# sourceMappingURL=subscribable-thing.js.map","export {};\n//# sourceMappingURL=subscribe-function.js.map","export {};\n//# sourceMappingURL=unhandled-rejection-factory.js.map","export {};\n//# sourceMappingURL=unhandled-rejection-function.js.map","export {};\n//# sourceMappingURL=unsubscribe-function.js.map","export {};\n//# sourceMappingURL=video-frame-factory.js.map","export {};\n//# sourceMappingURL=video-frame-function.js.map","export {};\n//# sourceMappingURL=video-frame-request-callback.js.map","export {};\n//# sourceMappingURL=wake-lock-factory.js.map","export {};\n//# sourceMappingURL=wake-lock-function.js.map","export {};\n//# sourceMappingURL=wake-lock-type.js.map","export {};\n//# sourceMappingURL=window-factory.js.map","export {};\n//# sourceMappingURL=window.js.map","export {};\n//# sourceMappingURL=wrap-subscribe-function-factory.js.map","export {};\n//# sourceMappingURL=wrap-subscribe-function-function.js.map","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"element\"];","function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return arrayLikeToArray(r);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(r, e) {\n  return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(r) {\n  return arrayWithoutHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;\n  }\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nexport class MultipartBody {\n    constructor(body) {\n        this.body = body;\n    }\n    get [Symbol.toStringTag]() {\n        return 'MultipartBody';\n    }\n}\n//# sourceMappingURL=MultipartBody.mjs.map","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport * as shims from './registry.mjs';\nimport * as auto from 'openai/_shims/auto/runtime';\nif (!shims.kind) shims.setShims(auto.getRuntime(), { auto: true });\nexport * from './registry.mjs';\n","export let auto = false;\nexport let kind = undefined;\nexport let fetch = undefined;\nexport let Request = undefined;\nexport let Response = undefined;\nexport let Headers = undefined;\nexport let FormData = undefined;\nexport let Blob = undefined;\nexport let File = undefined;\nexport let ReadableStream = undefined;\nexport let getMultipartRequestOptions = undefined;\nexport let getDefaultAgent = undefined;\nexport let fileFromPath = undefined;\nexport let isFsReadStream = undefined;\nexport function setShims(shims, options = { auto: false }) {\n    if (auto) {\n        throw new Error(`you must \\`import 'openai/shims/${shims.kind}'\\` before importing anything else from openai`);\n    }\n    if (kind) {\n        throw new Error(`can't \\`import 'openai/shims/${shims.kind}'\\` after \\`import 'openai/shims/${kind}'\\``);\n    }\n    auto = options.auto;\n    kind = shims.kind;\n    fetch = shims.fetch;\n    Request = shims.Request;\n    Response = shims.Response;\n    Headers = shims.Headers;\n    FormData = shims.FormData;\n    Blob = shims.Blob;\n    File = shims.File;\n    ReadableStream = shims.ReadableStream;\n    getMultipartRequestOptions = shims.getMultipartRequestOptions;\n    getDefaultAgent = shims.getDefaultAgent;\n    fileFromPath = shims.fileFromPath;\n    isFsReadStream = shims.isFsReadStream;\n}\n//# sourceMappingURL=registry.mjs.map","import { MultipartBody } from \"./MultipartBody.mjs\";\nexport function getRuntime({ manuallyImported } = {}) {\n    const recommendation = manuallyImported ?\n        `You may need to use polyfills`\n        : `Add one of these imports before your first \\`import … from 'openai'\\`:\n- \\`import 'openai/shims/node'\\` (if you're running on Node)\n- \\`import 'openai/shims/web'\\` (otherwise)\n`;\n    let _fetch, _Request, _Response, _Headers;\n    try {\n        // @ts-ignore\n        _fetch = fetch;\n        // @ts-ignore\n        _Request = Request;\n        // @ts-ignore\n        _Response = Response;\n        // @ts-ignore\n        _Headers = Headers;\n    }\n    catch (error) {\n        throw new Error(`this environment is missing the following Web Fetch API type: ${error.message}. ${recommendation}`);\n    }\n    return {\n        kind: 'web',\n        fetch: _fetch,\n        Request: _Request,\n        Response: _Response,\n        Headers: _Headers,\n        FormData: \n        // @ts-ignore\n        typeof FormData !== 'undefined' ? FormData : (class FormData {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'FormData' is undefined. ${recommendation}`);\n            }\n        }),\n        Blob: typeof Blob !== 'undefined' ? Blob : (class Blob {\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'Blob' is undefined. ${recommendation}`);\n            }\n        }),\n        File: \n        // @ts-ignore\n        typeof File !== 'undefined' ? File : (class File {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'File' is undefined. ${recommendation}`);\n            }\n        }),\n        ReadableStream: \n        // @ts-ignore\n        typeof ReadableStream !== 'undefined' ? ReadableStream : (class ReadableStream {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`streaming isn't supported in this environment yet as 'ReadableStream' is undefined. ${recommendation}`);\n            }\n        }),\n        getMultipartRequestOptions: async (\n        // @ts-ignore\n        form, opts) => ({\n            ...opts,\n            body: new MultipartBody(form),\n        }),\n        getDefaultAgent: (url) => undefined,\n        fileFromPath: () => {\n            throw new Error('The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/openai/openai-node#file-uploads');\n        },\n        isFsReadStream: (value) => false,\n    };\n}\n//# sourceMappingURL=web-runtime.mjs.map","const STR = 0b000000001;\nconst NUM = 0b000000010;\nconst ARR = 0b000000100;\nconst OBJ = 0b000001000;\nconst NULL = 0b000010000;\nconst BOOL = 0b000100000;\nconst NAN = 0b001000000;\nconst INFINITY = 0b010000000;\nconst MINUS_INFINITY = 0b100000000;\nconst INF = INFINITY | MINUS_INFINITY;\nconst SPECIAL = NULL | BOOL | INF | NAN;\nconst ATOM = STR | NUM | SPECIAL;\nconst COLLECTION = ARR | OBJ;\nconst ALL = ATOM | COLLECTION;\nconst Allow = {\n    STR,\n    NUM,\n    ARR,\n    OBJ,\n    NULL,\n    BOOL,\n    NAN,\n    INFINITY,\n    MINUS_INFINITY,\n    INF,\n    SPECIAL,\n    ATOM,\n    COLLECTION,\n    ALL,\n};\n// The JSON string segment was unable to be parsed completely\nclass PartialJSON extends Error {\n}\nclass MalformedJSON extends Error {\n}\n/**\n * Parse incomplete JSON\n * @param {string} jsonString Partial JSON to be parsed\n * @param {number} allowPartial Specify what types are allowed to be partial, see {@link Allow} for details\n * @returns The parsed JSON\n * @throws {PartialJSON} If the JSON is incomplete (related to the `allow` parameter)\n * @throws {MalformedJSON} If the JSON is malformed\n */\nfunction parseJSON(jsonString, allowPartial = Allow.ALL) {\n    if (typeof jsonString !== 'string') {\n        throw new TypeError(`expecting str, got ${typeof jsonString}`);\n    }\n    if (!jsonString.trim()) {\n        throw new Error(`${jsonString} is empty`);\n    }\n    return _parseJSON(jsonString.trim(), allowPartial);\n}\nconst _parseJSON = (jsonString, allow) => {\n    const length = jsonString.length;\n    let index = 0;\n    const markPartialJSON = (msg) => {\n        throw new PartialJSON(`${msg} at position ${index}`);\n    };\n    const throwMalformedError = (msg) => {\n        throw new MalformedJSON(`${msg} at position ${index}`);\n    };\n    const parseAny = () => {\n        skipBlank();\n        if (index >= length)\n            markPartialJSON('Unexpected end of input');\n        if (jsonString[index] === '\"')\n            return parseStr();\n        if (jsonString[index] === '{')\n            return parseObj();\n        if (jsonString[index] === '[')\n            return parseArr();\n        if (jsonString.substring(index, index + 4) === 'null' ||\n            (Allow.NULL & allow && length - index < 4 && 'null'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return null;\n        }\n        if (jsonString.substring(index, index + 4) === 'true' ||\n            (Allow.BOOL & allow && length - index < 4 && 'true'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return true;\n        }\n        if (jsonString.substring(index, index + 5) === 'false' ||\n            (Allow.BOOL & allow && length - index < 5 && 'false'.startsWith(jsonString.substring(index)))) {\n            index += 5;\n            return false;\n        }\n        if (jsonString.substring(index, index + 8) === 'Infinity' ||\n            (Allow.INFINITY & allow && length - index < 8 && 'Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 8;\n            return Infinity;\n        }\n        if (jsonString.substring(index, index + 9) === '-Infinity' ||\n            (Allow.MINUS_INFINITY & allow &&\n                1 < length - index &&\n                length - index < 9 &&\n                '-Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 9;\n            return -Infinity;\n        }\n        if (jsonString.substring(index, index + 3) === 'NaN' ||\n            (Allow.NAN & allow && length - index < 3 && 'NaN'.startsWith(jsonString.substring(index)))) {\n            index += 3;\n            return NaN;\n        }\n        return parseNum();\n    };\n    const parseStr = () => {\n        const start = index;\n        let escape = false;\n        index++; // skip initial quote\n        while (index < length && (jsonString[index] !== '\"' || (escape && jsonString[index - 1] === '\\\\'))) {\n            escape = jsonString[index] === '\\\\' ? !escape : false;\n            index++;\n        }\n        if (jsonString.charAt(index) == '\"') {\n            try {\n                return JSON.parse(jsonString.substring(start, ++index - Number(escape)));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n        else if (Allow.STR & allow) {\n            try {\n                return JSON.parse(jsonString.substring(start, index - Number(escape)) + '\"');\n            }\n            catch (e) {\n                // SyntaxError: Invalid escape sequence\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('\\\\')) + '\"');\n            }\n        }\n        markPartialJSON('Unterminated string literal');\n    };\n    const parseObj = () => {\n        index++; // skip initial brace\n        skipBlank();\n        const obj = {};\n        try {\n            while (jsonString[index] !== '}') {\n                skipBlank();\n                if (index >= length && Allow.OBJ & allow)\n                    return obj;\n                const key = parseStr();\n                skipBlank();\n                index++; // skip colon\n                try {\n                    const value = parseAny();\n                    Object.defineProperty(obj, key, { value, writable: true, enumerable: true, configurable: true });\n                }\n                catch (e) {\n                    if (Allow.OBJ & allow)\n                        return obj;\n                    else\n                        throw e;\n                }\n                skipBlank();\n                if (jsonString[index] === ',')\n                    index++; // skip comma\n            }\n        }\n        catch (e) {\n            if (Allow.OBJ & allow)\n                return obj;\n            else\n                markPartialJSON(\"Expected '}' at end of object\");\n        }\n        index++; // skip final brace\n        return obj;\n    };\n    const parseArr = () => {\n        index++; // skip initial bracket\n        const arr = [];\n        try {\n            while (jsonString[index] !== ']') {\n                arr.push(parseAny());\n                skipBlank();\n                if (jsonString[index] === ',') {\n                    index++; // skip comma\n                }\n            }\n        }\n        catch (e) {\n            if (Allow.ARR & allow) {\n                return arr;\n            }\n            markPartialJSON(\"Expected ']' at end of array\");\n        }\n        index++; // skip final bracket\n        return arr;\n    };\n    const parseNum = () => {\n        if (index === 0) {\n            if (jsonString === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString);\n            }\n            catch (e) {\n                if (Allow.NUM & allow) {\n                    try {\n                        if ('.' === jsonString[jsonString.length - 1])\n                            return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('.')));\n                        return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('e')));\n                    }\n                    catch (e) { }\n                }\n                throwMalformedError(String(e));\n            }\n        }\n        const start = index;\n        if (jsonString[index] === '-')\n            index++;\n        while (jsonString[index] && !',]}'.includes(jsonString[index]))\n            index++;\n        if (index == length && !(Allow.NUM & allow))\n            markPartialJSON('Unterminated number literal');\n        try {\n            return JSON.parse(jsonString.substring(start, index));\n        }\n        catch (e) {\n            if (jsonString.substring(start, index) === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('e')));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n    };\n    const skipBlank = () => {\n        while (index < length && ' \\n\\r\\t'.includes(jsonString[index])) {\n            index++;\n        }\n    };\n    return parseAny();\n};\n// using this function with malformed JSON is undefined behavior\nconst partialParse = (input) => parseJSON(input, Allow.ALL ^ Allow.NUM);\nexport { partialParse, PartialJSON, MalformedJSON };\n//# sourceMappingURL=parser.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nimport { VERSION } from \"./version.mjs\";\nimport { Stream } from \"./streaming.mjs\";\nimport { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, } from \"./error.mjs\";\nimport { kind as shimsKind, getDefaultAgent, fetch, } from \"./_shims/index.mjs\";\nimport { isBlobLike, isMultipartBody } from \"./uploads.mjs\";\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm, } from \"./uploads.mjs\";\nasync function defaultParseResponse(props) {\n    const { response } = props;\n    if (props.options.stream) {\n        debug('response', response.status, response.url, response.headers, response.body);\n        // Note: there is an invariant here that isn't represented in the type system\n        // that if you set `stream: true` the response type must also be `Stream<T>`\n        if (props.options.__streamClass) {\n            return props.options.__streamClass.fromSSEResponse(response, props.controller);\n        }\n        return Stream.fromSSEResponse(response, props.controller);\n    }\n    // fetch refuses to read the body when the status code is 204.\n    if (response.status === 204) {\n        return null;\n    }\n    if (props.options.__binaryResponse) {\n        return response;\n    }\n    const contentType = response.headers.get('content-type');\n    const isJSON = contentType?.includes('application/json') || contentType?.includes('application/vnd.api+json');\n    if (isJSON) {\n        const json = await response.json();\n        debug('response', response.status, response.url, response.headers, json);\n        return _addRequestID(json, response);\n    }\n    const text = await response.text();\n    debug('response', response.status, response.url, response.headers, text);\n    // TODO handle blob, arraybuffer, other content types, etc.\n    return text;\n}\nfunction _addRequestID(value, response) {\n    if (!value || typeof value !== 'object' || Array.isArray(value)) {\n        return value;\n    }\n    return Object.defineProperty(value, '_request_id', {\n        value: response.headers.get('x-request-id'),\n        enumerable: false,\n    });\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n    constructor(responsePromise, parseResponse = defaultParseResponse) {\n        super((resolve) => {\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(this.responsePromise, async (props) => _addRequestID(transform(await this.parseResponse(props), props), props.response));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    asResponse() {\n        return this.responsePromise.then((p) => p.response);\n    }\n    /**\n     * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n     * returned via the X-Request-ID header which is useful for debugging requests and reporting\n     * issues to OpenAI.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    async withResponse() {\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n        return { data, response, request_id: response.headers.get('x-request-id') };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then(this.parseResponse);\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\nexport class APIClient {\n    constructor({ baseURL, maxRetries = 2, timeout = 600000, // 10 minutes\n    httpAgent, fetch: overridenFetch, }) {\n        this.baseURL = baseURL;\n        this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n        this.timeout = validatePositiveInteger('timeout', timeout);\n        this.httpAgent = httpAgent;\n        this.fetch = overridenFetch ?? fetch;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    /**\n     * Override this to add your own default headers, for example:\n     *\n     *  {\n     *    ...super.defaultHeaders(),\n     *    Authorization: 'Bearer 123',\n     *  }\n     */\n    defaultHeaders(opts) {\n        return {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'User-Agent': this.getUserAgent(),\n            ...getPlatformHeaders(),\n            ...this.authHeaders(opts),\n        };\n    }\n    /**\n     * Override this to add your own headers validation:\n     */\n    validateHeaders(headers, customHeaders) { }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    get(path, opts) {\n        return this.methodRequest('get', path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest('post', path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest('patch', path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest('put', path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest('delete', path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then(async (opts) => {\n            const body = opts && isBlobLike(opts?.body) ? new DataView(await opts.body.arrayBuffer())\n                : opts?.body instanceof DataView ? opts.body\n                    : opts?.body instanceof ArrayBuffer ? new DataView(opts.body)\n                        : opts && ArrayBuffer.isView(opts?.body) ? new DataView(opts.body.buffer)\n                            : opts?.body;\n            return { method, path, ...opts, body };\n        }));\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\n    }\n    calculateContentLength(body) {\n        if (typeof body === 'string') {\n            if (typeof Buffer !== 'undefined') {\n                return Buffer.byteLength(body, 'utf8').toString();\n            }\n            if (typeof TextEncoder !== 'undefined') {\n                const encoder = new TextEncoder();\n                const encoded = encoder.encode(body);\n                return encoded.length.toString();\n            }\n        }\n        else if (ArrayBuffer.isView(body)) {\n            return body.byteLength.toString();\n        }\n        return null;\n    }\n    buildRequest(options, { retryCount = 0 } = {}) {\n        const { method, path, query, headers: headers = {} } = options;\n        const body = ArrayBuffer.isView(options.body) || (options.__binaryRequest && typeof options.body === 'string') ?\n            options.body\n            : isMultipartBody(options.body) ? options.body.body\n                : options.body ? JSON.stringify(options.body, null, 2)\n                    : null;\n        const contentLength = this.calculateContentLength(body);\n        const url = this.buildURL(path, query);\n        if ('timeout' in options)\n            validatePositiveInteger('timeout', options.timeout);\n        const timeout = options.timeout ?? this.timeout;\n        const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n        const minAgentTimeout = timeout + 1000;\n        if (typeof httpAgent?.options?.timeout === 'number' &&\n            minAgentTimeout > (httpAgent.options.timeout ?? 0)) {\n            // Allow any given request to bump our agent active socket timeout.\n            // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n            // and without mutating agent we would need to create more of them.\n            // This tradeoff optimizes for performance.\n            httpAgent.options.timeout = minAgentTimeout;\n        }\n        if (this.idempotencyHeader && method !== 'get') {\n            if (!options.idempotencyKey)\n                options.idempotencyKey = this.defaultIdempotencyKey();\n            headers[this.idempotencyHeader] = options.idempotencyKey;\n        }\n        const reqHeaders = this.buildHeaders({ options, headers, contentLength, retryCount });\n        const req = {\n            method,\n            ...(body && { body: body }),\n            headers: reqHeaders,\n            ...(httpAgent && { agent: httpAgent }),\n            // @ts-ignore node-fetch uses a custom AbortSignal type that is\n            // not compatible with standard web types\n            signal: options.signal ?? null,\n        };\n        return { req, url, timeout };\n    }\n    buildHeaders({ options, headers, contentLength, retryCount, }) {\n        const reqHeaders = {};\n        if (contentLength) {\n            reqHeaders['content-length'] = contentLength;\n        }\n        const defaultHeaders = this.defaultHeaders(options);\n        applyHeadersMut(reqHeaders, defaultHeaders);\n        applyHeadersMut(reqHeaders, headers);\n        // let builtin fetch set the Content-Type for multipart bodies\n        if (isMultipartBody(options.body) && shimsKind !== 'node') {\n            delete reqHeaders['content-type'];\n        }\n        // Don't set the retry count header if it was already set or removed through default headers or by the\n        // caller. We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to\n        // account for the removal case.\n        if (getHeader(defaultHeaders, 'x-stainless-retry-count') === undefined &&\n            getHeader(headers, 'x-stainless-retry-count') === undefined) {\n            reqHeaders['x-stainless-retry-count'] = String(retryCount);\n        }\n        this.validateHeaders(reqHeaders, headers);\n        return reqHeaders;\n    }\n    /**\n     * Used as a callback for mutating the given `FinalRequestOptions` object.\n     */\n    async prepareOptions(options) { }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n    async prepareRequest(request, { url, options }) { }\n    parseHeaders(headers) {\n        return (!headers ? {}\n            : Symbol.iterator in headers ?\n                Object.fromEntries(Array.from(headers).map((header) => [...header]))\n                : { ...headers });\n    }\n    makeStatusError(status, error, message, headers) {\n        return APIError.generate(status, error, message, headers);\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this.makeRequest(options, remainingRetries));\n    }\n    async makeRequest(optionsInput, retriesRemaining) {\n        const options = await optionsInput;\n        const maxRetries = options.maxRetries ?? this.maxRetries;\n        if (retriesRemaining == null) {\n            retriesRemaining = maxRetries;\n        }\n        await this.prepareOptions(options);\n        const { req, url, timeout } = this.buildRequest(options, { retryCount: maxRetries - retriesRemaining });\n        await this.prepareRequest(req, { url, options });\n        debug('request', url, options, req.headers);\n        if (options.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        if (response instanceof Error) {\n            if (options.signal?.aborted) {\n                throw new APIUserAbortError();\n            }\n            if (retriesRemaining) {\n                return this.retryRequest(options, retriesRemaining);\n            }\n            if (response.name === 'AbortError') {\n                throw new APIConnectionTimeoutError();\n            }\n            throw new APIConnectionError({ cause: response });\n        }\n        const responseHeaders = createResponseHeaders(response.headers);\n        if (!response.ok) {\n            if (retriesRemaining && this.shouldRetry(response)) {\n                const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n                debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n                return this.retryRequest(options, retriesRemaining, responseHeaders);\n            }\n            const errText = await response.text().catch((e) => castToError(e).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n            debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n            const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n            throw err;\n        }\n        return { response, options, controller };\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null);\n        return new PagePromise(this, request, Page);\n    }\n    buildURL(path, query) {\n        const url = isAbsoluteURL(path) ?\n            new URL(path)\n            : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = { ...defaultQuery, ...query };\n        }\n        if (typeof query === 'object' && query && !Array.isArray(query)) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    stringifyQuery(query) {\n        return Object.entries(query)\n            .filter(([_, value]) => typeof value !== 'undefined')\n            .map(([key, value]) => {\n            if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n            }\n            if (value === null) {\n                return `${encodeURIComponent(key)}=`;\n            }\n            throw new OpenAIError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n        })\n            .join('&');\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, ...options } = init || {};\n        if (signal)\n            signal.addEventListener('abort', () => controller.abort());\n        const timeout = setTimeout(() => controller.abort(), ms);\n        return (this.getRequestClient()\n            // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n            .fetch.call(undefined, url, { signal: controller.signal, ...options })\n            .finally(() => {\n            clearTimeout(timeout);\n        }));\n    }\n    getRequestClient() {\n        return { fetch: this.fetch };\n    }\n    shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get('x-should-retry');\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === 'true')\n            return true;\n        if (shouldRetryHeader === 'false')\n            return false;\n        // Retry on request timeouts.\n        if (response.status === 408)\n            return true;\n        // Retry on lock timeouts.\n        if (response.status === 409)\n            return true;\n        // Retry on rate limits.\n        if (response.status === 429)\n            return true;\n        // Retry internal errors.\n        if (response.status >= 500)\n            return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, responseHeaders) {\n        let timeoutMillis;\n        // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n        const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\n        if (retryAfterMillisHeader) {\n            const timeoutMs = parseFloat(retryAfterMillisHeader);\n            if (!Number.isNaN(timeoutMs)) {\n                timeoutMillis = timeoutMs;\n            }\n        }\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        const retryAfterHeader = responseHeaders?.['retry-after'];\n        if (retryAfterHeader && !timeoutMillis) {\n            const timeoutSeconds = parseFloat(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            }\n            else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${VERSION}`;\n    }\n}\nexport class AbstractPage {\n    constructor(client, response, body, options) {\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length)\n            return false;\n        return this.nextPageInfo() != null;\n    }\n    async getNextPage() {\n        const nextInfo = this.nextPageInfo();\n        if (!nextInfo) {\n            throw new OpenAIError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n        }\n        const nextOptions = { ...this.options };\n        if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n            nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n        }\n        else if ('url' in nextInfo) {\n            const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n            for (const [key, value] of params) {\n                nextInfo.url.searchParams.set(key, value);\n            }\n            nextOptions.query = undefined;\n            nextOptions.path = nextInfo.url.toString();\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let page = this;\n        yield page;\n        while (page.hasNextPage()) {\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()) {\n            for (const item of page.getPaginatedItems()) {\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n    constructor(client, request, Page) {\n        super(request, async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */\n    async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page) {\n            yield item;\n        }\n    }\n}\nexport const createResponseHeaders = (headers) => {\n    return new Proxy(Object.fromEntries(\n    // @ts-ignore\n    headers.entries()), {\n        get(target, name) {\n            const key = name.toString();\n            return target[key.toLowerCase()] || target[key];\n        },\n    });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n    method: true,\n    path: true,\n    query: true,\n    body: true,\n    headers: true,\n    maxRetries: true,\n    stream: true,\n    timeout: true,\n    httpAgent: true,\n    signal: true,\n    idempotencyKey: true,\n    __binaryRequest: true,\n    __binaryResponse: true,\n    __streamClass: true,\n};\nexport const isRequestOptions = (obj) => {\n    return (typeof obj === 'object' &&\n        obj !== null &&\n        !isEmptyObj(obj) &&\n        Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k)));\n};\nconst getPlatformProperties = () => {\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n            'X-Stainless-Runtime': 'deno',\n            'X-Stainless-Runtime-Version': typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n        };\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\n            'X-Stainless-Runtime': 'edge',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    // Check if Node.js\n    if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(process.platform),\n            'X-Stainless-Arch': normalizeArch(process.arch),\n            'X-Stainless-Runtime': 'node',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': 'unknown',\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n            'X-Stainless-Runtime-Version': browserInfo.version,\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        'X-Stainless-Lang': 'js',\n        'X-Stainless-Package-Version': VERSION,\n        'X-Stainless-OS': 'Unknown',\n        'X-Stainless-Arch': 'unknown',\n        'X-Stainless-Runtime': 'unknown',\n        'X-Stainless-Runtime-Version': 'unknown',\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === 'undefined' || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns) {\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return { browser: key, version: `${major}.${minor}.${patch}` };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch) => {\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === 'x32')\n        return 'x32';\n    if (arch === 'x86_64' || arch === 'x64')\n        return 'x64';\n    if (arch === 'arm')\n        return 'arm';\n    if (arch === 'aarch64' || arch === 'arm64')\n        return 'arm64';\n    if (arch)\n        return `other:${arch}`;\n    return 'unknown';\n};\nconst normalizePlatform = (platform) => {\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes('ios'))\n        return 'iOS';\n    if (platform === 'android')\n        return 'Android';\n    if (platform === 'darwin')\n        return 'MacOS';\n    if (platform === 'win32')\n        return 'Windows';\n    if (platform === 'freebsd')\n        return 'FreeBSD';\n    if (platform === 'openbsd')\n        return 'OpenBSD';\n    if (platform === 'linux')\n        return 'Linux';\n    if (platform)\n        return `Other:${platform}`;\n    return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\n};\nexport const safeJSON = (text) => {\n    try {\n        return JSON.parse(text);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n// https://stackoverflow.com/a/19709846\nconst startsWithSchemeRegexp = new RegExp('^(?:[a-z]+:)?//', 'i');\nconst isAbsoluteURL = (url) => {\n    return startsWithSchemeRegexp.test(url);\n};\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst validatePositiveInteger = (name, n) => {\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\n        throw new OpenAIError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new OpenAIError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nexport const castToError = (err) => {\n    if (err instanceof Error)\n        return err;\n    if (typeof err === 'object' && err !== null) {\n        try {\n            return new Error(JSON.stringify(err));\n        }\n        catch { }\n    }\n    return new Error(err);\n};\nexport const ensurePresent = (value) => {\n    if (value == null)\n        throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n    return value;\n};\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env) => {\n    if (typeof process !== 'undefined') {\n        return process.env?.[env]?.trim() ?? undefined;\n    }\n    if (typeof Deno !== 'undefined') {\n        return Deno.env?.get?.(env)?.trim();\n    }\n    return undefined;\n};\nexport const coerceInteger = (value) => {\n    if (typeof value === 'number')\n        return Math.round(value);\n    if (typeof value === 'string')\n        return parseInt(value, 10);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = (value) => {\n    if (typeof value === 'number')\n        return value;\n    if (typeof value === 'string')\n        return parseFloat(value);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = (value) => {\n    if (typeof value === 'boolean')\n        return value;\n    if (typeof value === 'string')\n        return value === 'true';\n    return Boolean(value);\n};\nexport const maybeCoerceInteger = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nexport const maybeCoerceFloat = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */\nfunction applyHeadersMut(targetHeaders, newHeaders) {\n    for (const k in newHeaders) {\n        if (!hasOwn(newHeaders, k))\n            continue;\n        const lowerKey = k.toLowerCase();\n        if (!lowerKey)\n            continue;\n        const val = newHeaders[k];\n        if (val === null) {\n            delete targetHeaders[lowerKey];\n        }\n        else if (val !== undefined) {\n            targetHeaders[lowerKey] = val;\n        }\n    }\n}\nexport function debug(action, ...args) {\n    if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\n        console.log(`OpenAI:DEBUG:${action}`, ...args);\n    }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16) | 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\nexport const isRunningInBrowser = () => {\n    return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n        // @ts-ignore\n        typeof window.document !== 'undefined' &&\n        // @ts-ignore\n        typeof navigator !== 'undefined');\n};\nexport const isHeadersProtocol = (headers) => {\n    return typeof headers?.get === 'function';\n};\nexport const getRequiredHeader = (headers, header) => {\n    const foundHeader = getHeader(headers, header);\n    if (foundHeader === undefined) {\n        throw new Error(`Could not find ${header} header`);\n    }\n    return foundHeader;\n};\nexport const getHeader = (headers, header) => {\n    const lowerCasedHeader = header.toLowerCase();\n    if (isHeadersProtocol(headers)) {\n        // to deal with the case where the header looks like Stainless-Event-Id\n        const intercapsHeader = header[0]?.toUpperCase() +\n            header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n        for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n            const value = headers.get(key);\n            if (value) {\n                return value;\n            }\n        }\n    }\n    for (const [key, value] of Object.entries(headers)) {\n        if (key.toLowerCase() === lowerCasedHeader) {\n            if (Array.isArray(value)) {\n                if (value.length <= 1)\n                    return value[0];\n                console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n                return value[0];\n            }\n            return value;\n        }\n    }\n    return undefined;\n};\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str) => {\n    if (!str)\n        return '';\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str).toString('base64');\n    }\n    if (typeof btoa !== 'undefined') {\n        return btoa(str);\n    }\n    throw new OpenAIError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\nexport function isObj(obj) {\n    return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n//# sourceMappingURL=core.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { castToError } from \"./core.mjs\";\nexport class OpenAIError extends Error {\n}\nexport class APIError extends OpenAIError {\n    constructor(status, error, message, headers) {\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        this.request_id = headers?.['x-request-id'];\n        const data = error;\n        this.error = data;\n        this.code = data?.['code'];\n        this.param = data?.['param'];\n        this.type = data?.['type'];\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ?\n            typeof error.message === 'string' ?\n                error.message\n                : JSON.stringify(error.message)\n            : error ? JSON.stringify(error)\n                : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return '(no status code or body)';\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status) {\n            return new APIConnectionError({ message, cause: castToError(errorResponse) });\n        }\n        const error = errorResponse?.['error'];\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nexport class APIUserAbortError extends APIError {\n    constructor({ message } = {}) {\n        super(undefined, undefined, message || 'Request was aborted.', undefined);\n        this.status = undefined;\n    }\n}\nexport class APIConnectionError extends APIError {\n    constructor({ message, cause }) {\n        super(undefined, undefined, message || 'Connection error.', undefined);\n        this.status = undefined;\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause)\n            this.cause = cause;\n    }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}) {\n        super({ message: message ?? 'Request timed out.' });\n    }\n}\nexport class BadRequestError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 400;\n    }\n}\nexport class AuthenticationError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 401;\n    }\n}\nexport class PermissionDeniedError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 403;\n    }\n}\nexport class NotFoundError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 404;\n    }\n}\nexport class ConflictError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 409;\n    }\n}\nexport class UnprocessableEntityError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 422;\n    }\n}\nexport class RateLimitError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 429;\n    }\n}\nexport class InternalServerError extends APIError {\n}\nexport class LengthFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the length limit was reached`);\n    }\n}\nexport class ContentFilterFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the request was rejected by the content filter`);\n    }\n}\n//# sourceMappingURL=error.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _a;\nimport * as qs from \"./internal/qs/index.mjs\";\nimport * as Core from \"./core.mjs\";\nimport * as Errors from \"./error.mjs\";\nimport * as Pagination from \"./pagination.mjs\";\nimport * as Uploads from \"./uploads.mjs\";\nimport * as API from \"./resources/index.mjs\";\nimport { Batches, BatchesPage, } from \"./resources/batches.mjs\";\nimport { Completions, } from \"./resources/completions.mjs\";\nimport { Embeddings, } from \"./resources/embeddings.mjs\";\nimport { FileObjectsPage, Files, } from \"./resources/files.mjs\";\nimport { Images, } from \"./resources/images.mjs\";\nimport { Models, ModelsPage } from \"./resources/models.mjs\";\nimport { Moderations, } from \"./resources/moderations.mjs\";\nimport { Audio } from \"./resources/audio/audio.mjs\";\nimport { Beta } from \"./resources/beta/beta.mjs\";\nimport { Chat } from \"./resources/chat/chat.mjs\";\nimport { FineTuning } from \"./resources/fine-tuning/fine-tuning.mjs\";\nimport { Uploads as UploadsAPIUploads, } from \"./resources/uploads/uploads.mjs\";\n/**\n * API Client for interfacing with the OpenAI API.\n */\nexport class OpenAI extends Core.APIClient {\n    /**\n     * API Client for interfacing with the OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiKey=process.env['OPENAI_API_KEY'] ?? undefined]\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string | null | undefined} [opts.project=process.env['OPENAI_PROJECT_ID'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL'] ?? https://api.openai.com/v1] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = Core.readEnv('OPENAI_BASE_URL'), apiKey = Core.readEnv('OPENAI_API_KEY'), organization = Core.readEnv('OPENAI_ORG_ID') ?? null, project = Core.readEnv('OPENAI_PROJECT_ID') ?? null, ...opts } = {}) {\n        if (apiKey === undefined) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).\");\n        }\n        const options = {\n            apiKey,\n            organization,\n            project,\n            ...opts,\n            baseURL: baseURL || `https://api.openai.com/v1`,\n        };\n        if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n            throw new Errors.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n        }\n        super({\n            baseURL: options.baseURL,\n            timeout: options.timeout ?? 600000 /* 10 minutes */,\n            httpAgent: options.httpAgent,\n            maxRetries: options.maxRetries,\n            fetch: options.fetch,\n        });\n        this.completions = new API.Completions(this);\n        this.chat = new API.Chat(this);\n        this.embeddings = new API.Embeddings(this);\n        this.files = new API.Files(this);\n        this.images = new API.Images(this);\n        this.audio = new API.Audio(this);\n        this.moderations = new API.Moderations(this);\n        this.models = new API.Models(this);\n        this.fineTuning = new API.FineTuning(this);\n        this.beta = new API.Beta(this);\n        this.batches = new API.Batches(this);\n        this.uploads = new API.Uploads(this);\n        this._options = options;\n        this.apiKey = apiKey;\n        this.organization = organization;\n        this.project = project;\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    defaultHeaders(opts) {\n        return {\n            ...super.defaultHeaders(opts),\n            'OpenAI-Organization': this.organization,\n            'OpenAI-Project': this.project,\n            ...this._options.defaultHeaders,\n        };\n    }\n    authHeaders(opts) {\n        return { Authorization: `Bearer ${this.apiKey}` };\n    }\n    stringifyQuery(query) {\n        return qs.stringify(query, { arrayFormat: 'brackets' });\n    }\n}\n_a = OpenAI;\nOpenAI.OpenAI = _a;\nOpenAI.DEFAULT_TIMEOUT = 600000; // 10 minutes\nOpenAI.OpenAIError = Errors.OpenAIError;\nOpenAI.APIError = Errors.APIError;\nOpenAI.APIConnectionError = Errors.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = Errors.APIUserAbortError;\nOpenAI.NotFoundError = Errors.NotFoundError;\nOpenAI.ConflictError = Errors.ConflictError;\nOpenAI.RateLimitError = Errors.RateLimitError;\nOpenAI.BadRequestError = Errors.BadRequestError;\nOpenAI.AuthenticationError = Errors.AuthenticationError;\nOpenAI.InternalServerError = Errors.InternalServerError;\nOpenAI.PermissionDeniedError = Errors.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = Errors.UnprocessableEntityError;\nOpenAI.toFile = Uploads.toFile;\nOpenAI.fileFromPath = Uploads.fileFromPath;\nOpenAI.Completions = Completions;\nOpenAI.Chat = Chat;\nOpenAI.Embeddings = Embeddings;\nOpenAI.Files = Files;\nOpenAI.FileObjectsPage = FileObjectsPage;\nOpenAI.Images = Images;\nOpenAI.Audio = Audio;\nOpenAI.Moderations = Moderations;\nOpenAI.Models = Models;\nOpenAI.ModelsPage = ModelsPage;\nOpenAI.FineTuning = FineTuning;\nOpenAI.Beta = Beta;\nOpenAI.Batches = Batches;\nOpenAI.BatchesPage = BatchesPage;\nOpenAI.Uploads = UploadsAPIUploads;\n/** API Client for interfacing with the Azure OpenAI API. */\nexport class AzureOpenAI extends OpenAI {\n    /**\n     * API Client for interfacing with the Azure OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiVersion=process.env['OPENAI_API_VERSION'] ?? undefined]\n     * @param {string | undefined} [opts.endpoint=process.env['AZURE_OPENAI_ENDPOINT'] ?? undefined] - Your Azure endpoint, including the resource, e.g. `https://example-resource.azure.openai.com/`\n     * @param {string | undefined} [opts.apiKey=process.env['AZURE_OPENAI_API_KEY'] ?? undefined]\n     * @param {string | undefined} opts.deployment - A model deployment, if given, sets the base client URL to include `/deployments/{deployment}`.\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL']] - Sets the base URL for the API, e.g. `https://example-resource.azure.openai.com/openai/`.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = Core.readEnv('OPENAI_BASE_URL'), apiKey = Core.readEnv('AZURE_OPENAI_API_KEY'), apiVersion = Core.readEnv('OPENAI_API_VERSION'), endpoint, deployment, azureADTokenProvider, dangerouslyAllowBrowser, ...opts } = {}) {\n        if (!apiVersion) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_VERSION environment variable is missing or empty; either provide it, or instantiate the AzureOpenAI client with an apiVersion option, like new AzureOpenAI({ apiVersion: 'My API Version' }).\");\n        }\n        if (typeof azureADTokenProvider === 'function') {\n            dangerouslyAllowBrowser = true;\n        }\n        if (!azureADTokenProvider && !apiKey) {\n            throw new Errors.OpenAIError('Missing credentials. Please pass one of `apiKey` and `azureADTokenProvider`, or set the `AZURE_OPENAI_API_KEY` environment variable.');\n        }\n        if (azureADTokenProvider && apiKey) {\n            throw new Errors.OpenAIError('The `apiKey` and `azureADTokenProvider` arguments are mutually exclusive; only one can be passed at a time.');\n        }\n        // define a sentinel value to avoid any typing issues\n        apiKey ?? (apiKey = API_KEY_SENTINEL);\n        opts.defaultQuery = { ...opts.defaultQuery, 'api-version': apiVersion };\n        if (!baseURL) {\n            if (!endpoint) {\n                endpoint = process.env['AZURE_OPENAI_ENDPOINT'];\n            }\n            if (!endpoint) {\n                throw new Errors.OpenAIError('Must provide one of the `baseURL` or `endpoint` arguments, or the `AZURE_OPENAI_ENDPOINT` environment variable');\n            }\n            baseURL = `${endpoint}/openai`;\n        }\n        else {\n            if (endpoint) {\n                throw new Errors.OpenAIError('baseURL and endpoint are mutually exclusive');\n            }\n        }\n        super({\n            apiKey,\n            baseURL,\n            ...opts,\n            ...(dangerouslyAllowBrowser !== undefined ? { dangerouslyAllowBrowser } : {}),\n        });\n        this.apiVersion = '';\n        this._azureADTokenProvider = azureADTokenProvider;\n        this.apiVersion = apiVersion;\n        this._deployment = deployment;\n    }\n    buildRequest(options) {\n        if (_deployments_endpoints.has(options.path) && options.method === 'post' && options.body !== undefined) {\n            if (!Core.isObj(options.body)) {\n                throw new Error('Expected request body to be an object');\n            }\n            const model = this._deployment || options.body['model'];\n            if (model !== undefined && !this.baseURL.includes('/deployments')) {\n                options.path = `/deployments/${model}${options.path}`;\n            }\n        }\n        return super.buildRequest(options);\n    }\n    async _getAzureADToken() {\n        if (typeof this._azureADTokenProvider === 'function') {\n            const token = await this._azureADTokenProvider();\n            if (!token || typeof token !== 'string') {\n                throw new Errors.OpenAIError(`Expected 'azureADTokenProvider' argument to return a string but it returned ${token}`);\n            }\n            return token;\n        }\n        return undefined;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    async prepareOptions(opts) {\n        /**\n         * The user should provide a bearer token provider if they want\n         * to use Azure AD authentication. The user shouldn't set the\n         * Authorization header manually because the header is overwritten\n         * with the Azure AD token if a bearer token provider is provided.\n         */\n        if (opts.headers?.['api-key']) {\n            return super.prepareOptions(opts);\n        }\n        const token = await this._getAzureADToken();\n        opts.headers ?? (opts.headers = {});\n        if (token) {\n            opts.headers['Authorization'] = `Bearer ${token}`;\n        }\n        else if (this.apiKey !== API_KEY_SENTINEL) {\n            opts.headers['api-key'] = this.apiKey;\n        }\n        else {\n            throw new Errors.OpenAIError('Unable to handle auth');\n        }\n        return super.prepareOptions(opts);\n    }\n}\nconst _deployments_endpoints = new Set([\n    '/completions',\n    '/chat/completions',\n    '/embeddings',\n    '/audio/transcriptions',\n    '/audio/translations',\n    '/audio/speech',\n    '/images/generations',\n]);\nconst API_KEY_SENTINEL = '<Missing Key>';\nexport { toFile, fileFromPath } from \"./uploads.mjs\";\nexport { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, NotFoundError, ConflictError, RateLimitError, BadRequestError, AuthenticationError, InternalServerError, PermissionDeniedError, UnprocessableEntityError, } from \"./error.mjs\";\nexport default OpenAI;\n//# sourceMappingURL=index.mjs.map","import { OpenAIError } from \"../../error.mjs\";\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nexport class LineDecoder {\n    constructor() {\n        this.buffer = [];\n        this.trailingCR = false;\n    }\n    decode(chunk) {\n        let text = this.decodeText(chunk);\n        if (this.trailingCR) {\n            text = '\\r' + text;\n            this.trailingCR = false;\n        }\n        if (text.endsWith('\\r')) {\n            this.trailingCR = true;\n            text = text.slice(0, -1);\n        }\n        if (!text) {\n            return [];\n        }\n        const trailingNewline = LineDecoder.NEWLINE_CHARS.has(text[text.length - 1] || '');\n        let lines = text.split(LineDecoder.NEWLINE_REGEXP);\n        // if there is a trailing new line then the last entry will be an empty\n        // string which we don't care about\n        if (trailingNewline) {\n            lines.pop();\n        }\n        if (lines.length === 1 && !trailingNewline) {\n            this.buffer.push(lines[0]);\n            return [];\n        }\n        if (this.buffer.length > 0) {\n            lines = [this.buffer.join('') + lines[0], ...lines.slice(1)];\n            this.buffer = [];\n        }\n        if (!trailingNewline) {\n            this.buffer = [lines.pop() || ''];\n        }\n        return lines;\n    }\n    decodeText(bytes) {\n        if (bytes == null)\n            return '';\n        if (typeof bytes === 'string')\n            return bytes;\n        // Node:\n        if (typeof Buffer !== 'undefined') {\n            if (bytes instanceof Buffer) {\n                return bytes.toString();\n            }\n            if (bytes instanceof Uint8Array) {\n                return Buffer.from(bytes).toString();\n            }\n            throw new OpenAIError(`Unexpected: received non-Uint8Array (${bytes.constructor.name}) stream chunk in an environment with a global \"Buffer\" defined, which this library assumes to be Node. Please report this error.`);\n        }\n        // Browser\n        if (typeof TextDecoder !== 'undefined') {\n            if (bytes instanceof Uint8Array || bytes instanceof ArrayBuffer) {\n                this.textDecoder ?? (this.textDecoder = new TextDecoder('utf8'));\n                return this.textDecoder.decode(bytes);\n            }\n            throw new OpenAIError(`Unexpected: received non-Uint8Array/ArrayBuffer (${bytes.constructor.name}) in a web platform. Please report this error.`);\n        }\n        throw new OpenAIError(`Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.`);\n    }\n    flush() {\n        if (!this.buffer.length && !this.trailingCR) {\n            return [];\n        }\n        const lines = [this.buffer.join('')];\n        this.buffer = [];\n        this.trailingCR = false;\n        return lines;\n    }\n}\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set(['\\n', '\\r']);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n//# sourceMappingURL=line.mjs.map","export const default_format = 'RFC3986';\nexport const formatters = {\n    RFC1738: (v) => String(v).replace(/%20/g, '+'),\n    RFC3986: (v) => String(v),\n};\nexport const RFC1738 = 'RFC1738';\nexport const RFC3986 = 'RFC3986';\n//# sourceMappingURL=formats.mjs.map","import { encode, is_buffer, maybe_map } from \"./utils.mjs\";\nimport { default_format, formatters } from \"./formats.mjs\";\nconst has = Object.prototype.hasOwnProperty;\nconst array_prefix_generators = {\n    brackets(prefix) {\n        return String(prefix) + '[]';\n    },\n    comma: 'comma',\n    indices(prefix, key) {\n        return String(prefix) + '[' + key + ']';\n    },\n    repeat(prefix) {\n        return String(prefix);\n    },\n};\nconst is_array = Array.isArray;\nconst push = Array.prototype.push;\nconst push_to_array = function (arr, value_or_array) {\n    push.apply(arr, is_array(value_or_array) ? value_or_array : [value_or_array]);\n};\nconst to_ISO = Date.prototype.toISOString;\nconst defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: encode,\n    encodeValuesOnly: false,\n    format: default_format,\n    formatter: formatters[default_format],\n    /** @deprecated */\n    indices: false,\n    serializeDate(date) {\n        return to_ISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false,\n};\nfunction is_non_nullish_primitive(v) {\n    return (typeof v === 'string' ||\n        typeof v === 'number' ||\n        typeof v === 'boolean' ||\n        typeof v === 'symbol' ||\n        typeof v === 'bigint');\n}\nconst sentinel = {};\nfunction inner_stringify(object, prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {\n    let obj = object;\n    let tmp_sc = sideChannel;\n    let step = 0;\n    let find_flag = false;\n    while ((tmp_sc = tmp_sc.get(sentinel)) !== void undefined && !find_flag) {\n        // Where object last appeared in the ref tree\n        const pos = tmp_sc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            }\n            else {\n                find_flag = true; // Break while\n            }\n        }\n        if (typeof tmp_sc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    }\n    else if (obj instanceof Date) {\n        obj = serializeDate?.(obj);\n    }\n    else if (generateArrayPrefix === 'comma' && is_array(obj)) {\n        obj = maybe_map(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate?.(value);\n            }\n            return value;\n        });\n    }\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ?\n                // @ts-expect-error\n                encoder(prefix, defaults.encoder, charset, 'key', format)\n                : prefix;\n        }\n        obj = '';\n    }\n    if (is_non_nullish_primitive(obj) || is_buffer(obj)) {\n        if (encoder) {\n            const key_value = encodeValuesOnly ? prefix\n                // @ts-expect-error\n                : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [\n                formatter?.(key_value) +\n                    '=' +\n                    // @ts-expect-error\n                    formatter?.(encoder(obj, defaults.encoder, charset, 'value', format)),\n            ];\n        }\n        return [formatter?.(prefix) + '=' + formatter?.(String(obj))];\n    }\n    const values = [];\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n    let obj_keys;\n    if (generateArrayPrefix === 'comma' && is_array(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            // @ts-expect-error values only\n            obj = maybe_map(obj, encoder);\n        }\n        obj_keys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    }\n    else if (is_array(filter)) {\n        obj_keys = filter;\n    }\n    else {\n        const keys = Object.keys(obj);\n        obj_keys = sort ? keys.sort(sort) : keys;\n    }\n    const encoded_prefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n    const adjusted_prefix = commaRoundTrip && is_array(obj) && obj.length === 1 ? encoded_prefix + '[]' : encoded_prefix;\n    if (allowEmptyArrays && is_array(obj) && obj.length === 0) {\n        return adjusted_prefix + '[]';\n    }\n    for (let j = 0; j < obj_keys.length; ++j) {\n        const key = obj_keys[j];\n        const value = \n        // @ts-ignore\n        typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n        if (skipNulls && value === null) {\n            continue;\n        }\n        // @ts-ignore\n        const encoded_key = allowDots && encodeDotInKeys ? key.replace(/\\./g, '%2E') : key;\n        const key_prefix = is_array(obj) ?\n            typeof generateArrayPrefix === 'function' ?\n                generateArrayPrefix(adjusted_prefix, encoded_key)\n                : adjusted_prefix\n            : adjusted_prefix + (allowDots ? '.' + encoded_key : '[' + encoded_key + ']');\n        sideChannel.set(object, step);\n        const valueSideChannel = new WeakMap();\n        valueSideChannel.set(sentinel, sideChannel);\n        push_to_array(values, inner_stringify(value, key_prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, \n        // @ts-ignore\n        generateArrayPrefix === 'comma' && encodeValuesOnly && is_array(obj) ? null : encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, valueSideChannel));\n    }\n    return values;\n}\nfunction normalize_stringify_options(opts = defaults) {\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n    const charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    let format = default_format;\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    const formatter = formatters[format];\n    let filter = defaults.filter;\n    if (typeof opts.filter === 'function' || is_array(opts.filter)) {\n        filter = opts.filter;\n    }\n    let arrayFormat;\n    if (opts.arrayFormat && opts.arrayFormat in array_prefix_generators) {\n        arrayFormat = opts.arrayFormat;\n    }\n    else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    }\n    else {\n        arrayFormat = defaults.arrayFormat;\n    }\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    const allowDots = typeof opts.allowDots === 'undefined' ?\n        !!opts.encodeDotInKeys === true ?\n            true\n            : defaults.allowDots\n        : !!opts.allowDots;\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        // @ts-ignore\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        // @ts-ignore\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n    };\n}\nexport function stringify(object, opts = {}) {\n    let obj = object;\n    const options = normalize_stringify_options(opts);\n    let obj_keys;\n    let filter;\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    }\n    else if (is_array(options.filter)) {\n        filter = options.filter;\n        obj_keys = filter;\n    }\n    const keys = [];\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n    const generateArrayPrefix = array_prefix_generators[options.arrayFormat];\n    const commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n    if (!obj_keys) {\n        obj_keys = Object.keys(obj);\n    }\n    if (options.sort) {\n        obj_keys.sort(options.sort);\n    }\n    const sideChannel = new WeakMap();\n    for (let i = 0; i < obj_keys.length; ++i) {\n        const key = obj_keys[i];\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        push_to_array(keys, inner_stringify(obj[key], key, \n        // @ts-expect-error\n        generateArrayPrefix, commaRoundTrip, options.allowEmptyArrays, options.strictNullHandling, options.skipNulls, options.encodeDotInKeys, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset, sideChannel));\n    }\n    const joined = keys.join(options.delimiter);\n    let prefix = options.addQueryPrefix === true ? '?' : '';\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        }\n        else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n    return joined.length > 0 ? prefix + joined : '';\n}\n//# sourceMappingURL=stringify.mjs.map","import { RFC1738 } from \"./formats.mjs\";\nconst has = Object.prototype.hasOwnProperty;\nconst is_array = Array.isArray;\nconst hex_table = (() => {\n    const array = [];\n    for (let i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n    return array;\n})();\nfunction compact_queue(queue) {\n    while (queue.length > 1) {\n        const item = queue.pop();\n        if (!item)\n            continue;\n        const obj = item.obj[item.prop];\n        if (is_array(obj)) {\n            const compacted = [];\n            for (let j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n            // @ts-ignore\n            item.obj[item.prop] = compacted;\n        }\n    }\n}\nfunction array_to_object(source, options) {\n    const obj = options && options.plainObjects ? Object.create(null) : {};\n    for (let i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n    return obj;\n}\nexport function merge(target, source, options = {}) {\n    if (!source) {\n        return target;\n    }\n    if (typeof source !== 'object') {\n        if (is_array(target)) {\n            target.push(source);\n        }\n        else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) ||\n                !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        }\n        else {\n            return [target, source];\n        }\n        return target;\n    }\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n    let mergeTarget = target;\n    if (is_array(target) && !is_array(source)) {\n        // @ts-ignore\n        mergeTarget = array_to_object(target, options);\n    }\n    if (is_array(target) && is_array(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                const targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                }\n                else {\n                    target.push(item);\n                }\n            }\n            else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n    return Object.keys(source).reduce(function (acc, key) {\n        const value = source[key];\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        }\n        else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n}\nexport function assign_single_source(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n}\nexport function decode(str, _, charset) {\n    const strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    }\n    catch (e) {\n        return strWithoutPlus;\n    }\n}\nconst limit = 1024;\nexport const encode = (str, _defaultEncoder, charset, _kind, format) => {\n    // This code was originally written by Brian White for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n    let string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    }\n    else if (typeof str !== 'string') {\n        string = String(str);\n    }\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n    let out = '';\n    for (let j = 0; j < string.length; j += limit) {\n        const segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        const arr = [];\n        for (let i = 0; i < segment.length; ++i) {\n            let c = segment.charCodeAt(i);\n            if (c === 0x2d || // -\n                c === 0x2e || // .\n                c === 0x5f || // _\n                c === 0x7e || // ~\n                (c >= 0x30 && c <= 0x39) || // 0-9\n                (c >= 0x41 && c <= 0x5a) || // a-z\n                (c >= 0x61 && c <= 0x7a) || // A-Z\n                (format === RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n            if (c < 0x80) {\n                arr[arr.length] = hex_table[c];\n                continue;\n            }\n            if (c < 0x800) {\n                arr[arr.length] = hex_table[0xc0 | (c >> 6)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            if (c < 0xd800 || c >= 0xe000) {\n                arr[arr.length] =\n                    hex_table[0xe0 | (c >> 12)] + hex_table[0x80 | ((c >> 6) & 0x3f)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            i += 1;\n            c = 0x10000 + (((c & 0x3ff) << 10) | (segment.charCodeAt(i) & 0x3ff));\n            arr[arr.length] =\n                hex_table[0xf0 | (c >> 18)] +\n                    hex_table[0x80 | ((c >> 12) & 0x3f)] +\n                    hex_table[0x80 | ((c >> 6) & 0x3f)] +\n                    hex_table[0x80 | (c & 0x3f)];\n        }\n        out += arr.join('');\n    }\n    return out;\n};\nexport function compact(value) {\n    const queue = [{ obj: { o: value }, prop: 'o' }];\n    const refs = [];\n    for (let i = 0; i < queue.length; ++i) {\n        const item = queue[i];\n        // @ts-ignore\n        const obj = item.obj[item.prop];\n        const keys = Object.keys(obj);\n        for (let j = 0; j < keys.length; ++j) {\n            const key = keys[j];\n            const val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n    compact_queue(queue);\n    return value;\n}\nexport function is_regexp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\nexport function is_buffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n}\nexport function combine(a, b) {\n    return [].concat(a, b);\n}\nexport function maybe_map(val, fn) {\n    if (is_array(val)) {\n        const mapped = [];\n        for (let i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n}\n//# sourceMappingURL=utils.mjs.map","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractChatCompletionRunner_instances, _AbstractChatCompletionRunner_getFinalContent, _AbstractChatCompletionRunner_getFinalMessage, _AbstractChatCompletionRunner_getFinalFunctionCall, _AbstractChatCompletionRunner_getFinalFunctionCallResult, _AbstractChatCompletionRunner_calculateTotalUsage, _AbstractChatCompletionRunner_validateParams, _AbstractChatCompletionRunner_stringifyFunctionCallResult;\nimport { OpenAIError } from \"../error.mjs\";\nimport { isRunnableFunctionWithParse, } from \"./RunnableFunction.mjs\";\nimport { isAssistantMessage, isFunctionMessage, isToolMessage } from \"./chatCompletionUtils.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nimport { isAutoParsableTool, parseChatCompletion } from \"../lib/parser.mjs\";\nconst DEFAULT_MAX_CHAT_COMPLETIONS = 10;\nexport class AbstractChatCompletionRunner extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AbstractChatCompletionRunner_instances.add(this);\n        this._chatCompletions = [];\n        this.messages = [];\n    }\n    _addChatCompletion(chatCompletion) {\n        this._chatCompletions.push(chatCompletion);\n        this._emit('chatCompletion', chatCompletion);\n        const message = chatCompletion.choices[0]?.message;\n        if (message)\n            this._addMessage(message);\n        return chatCompletion;\n    }\n    _addMessage(message, emit = true) {\n        if (!('content' in message))\n            message.content = null;\n        this.messages.push(message);\n        if (emit) {\n            this._emit('message', message);\n            if ((isFunctionMessage(message) || isToolMessage(message)) && message.content) {\n                // Note, this assumes that {role: 'tool', content: …} is always the result of a call of tool of type=function.\n                this._emit('functionCallResult', message.content);\n            }\n            else if (isAssistantMessage(message) && message.function_call) {\n                this._emit('functionCall', message.function_call);\n            }\n            else if (isAssistantMessage(message) && message.tool_calls) {\n                for (const tool_call of message.tool_calls) {\n                    if (tool_call.type === 'function') {\n                        this._emit('functionCall', tool_call.function);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * @returns a promise that resolves with the final ChatCompletion, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletion.\n     */\n    async finalChatCompletion() {\n        await this.done();\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (!completion)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return completion;\n    }\n    /**\n     * @returns a promise that resolves with the content of the final ChatCompletionMessage, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalContent() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant ChatCompletionMessage response,\n     * or rejects if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalMessage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the content of the final FunctionCall, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalFunctionCall() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n    }\n    async finalFunctionCallResult() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n    }\n    async totalUsage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this);\n    }\n    allChatCompletions() {\n        return [...this._chatCompletions];\n    }\n    _emitFinal() {\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (completion)\n            this._emit('finalChatCompletion', completion);\n        const finalMessage = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n        if (finalMessage)\n            this._emit('finalMessage', finalMessage);\n        const finalContent = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n        if (finalContent)\n            this._emit('finalContent', finalContent);\n        const finalFunctionCall = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n        if (finalFunctionCall)\n            this._emit('finalFunctionCall', finalFunctionCall);\n        const finalFunctionCallResult = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n        if (finalFunctionCallResult != null)\n            this._emit('finalFunctionCallResult', finalFunctionCallResult);\n        if (this._chatCompletions.some((c) => c.usage)) {\n            this._emit('totalUsage', __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this));\n        }\n    }\n    async _createChatCompletion(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_validateParams).call(this, params);\n        const chatCompletion = await client.chat.completions.create({ ...params, stream: false }, { ...options, signal: this.controller.signal });\n        this._connected();\n        return this._addChatCompletion(parseChatCompletion(chatCompletion, params));\n    }\n    async _runChatCompletion(client, params, options) {\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        return await this._createChatCompletion(client, params, options);\n    }\n    async _runFunctions(client, params, options) {\n        const role = 'function';\n        const { function_call = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof function_call !== 'string' && function_call?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        const functionsByName = {};\n        for (const f of params.functions) {\n            functionsByName[f.name || f.function.name] = f;\n        }\n        const functions = params.functions.map((f) => ({\n            name: f.name || f.function.name,\n            parameters: f.parameters,\n            description: f.description,\n        }));\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(client, {\n                ...restParams,\n                function_call,\n                functions,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.function_call)\n                return;\n            const { name, arguments: args } = message.function_call;\n            const fn = functionsByName[name];\n            if (!fn) {\n                const content = `Invalid function_call: ${JSON.stringify(name)}. Available options are: ${functions\n                    .map((f) => JSON.stringify(f.name))\n                    .join(', ')}. Please try again`;\n                this._addMessage({ role, name, content });\n                continue;\n            }\n            else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                const content = `Invalid function_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                this._addMessage({ role, name, content });\n                continue;\n            }\n            let parsed;\n            try {\n                parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n            }\n            catch (error) {\n                this._addMessage({\n                    role,\n                    name,\n                    content: error instanceof Error ? error.message : String(error),\n                });\n                continue;\n            }\n            // @ts-expect-error it can't rule out `never` type.\n            const rawContent = await fn.function(parsed, this);\n            const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n            this._addMessage({ role, name, content });\n            if (singleFunctionToCall)\n                return;\n        }\n    }\n    async _runTools(client, params, options) {\n        const role = 'tool';\n        const { tool_choice = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof tool_choice !== 'string' && tool_choice?.function?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        // TODO(someday): clean this logic up\n        const inputTools = params.tools.map((tool) => {\n            if (isAutoParsableTool(tool)) {\n                if (!tool.$callback) {\n                    throw new OpenAIError('Tool given to `.runTools()` that does not have an associated function');\n                }\n                return {\n                    type: 'function',\n                    function: {\n                        function: tool.$callback,\n                        name: tool.function.name,\n                        description: tool.function.description || '',\n                        parameters: tool.function.parameters,\n                        parse: tool.$parseRaw,\n                        strict: true,\n                    },\n                };\n            }\n            return tool;\n        });\n        const functionsByName = {};\n        for (const f of inputTools) {\n            if (f.type === 'function') {\n                functionsByName[f.function.name || f.function.function.name] = f.function;\n            }\n        }\n        const tools = 'tools' in params ?\n            inputTools.map((t) => t.type === 'function' ?\n                {\n                    type: 'function',\n                    function: {\n                        name: t.function.name || t.function.function.name,\n                        parameters: t.function.parameters,\n                        description: t.function.description,\n                        strict: t.function.strict,\n                    },\n                }\n                : t)\n            : undefined;\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(client, {\n                ...restParams,\n                tool_choice,\n                tools,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.tool_calls?.length) {\n                return;\n            }\n            for (const tool_call of message.tool_calls) {\n                if (tool_call.type !== 'function')\n                    continue;\n                const tool_call_id = tool_call.id;\n                const { name, arguments: args } = tool_call.function;\n                const fn = functionsByName[name];\n                if (!fn) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. Available options are: ${Object.keys(functionsByName)\n                        .map((name) => JSON.stringify(name))\n                        .join(', ')}. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                let parsed;\n                try {\n                    parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n                }\n                catch (error) {\n                    const content = error instanceof Error ? error.message : String(error);\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                // @ts-expect-error it can't rule out `never` type.\n                const rawContent = await fn.function(parsed, this);\n                const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n                this._addMessage({ role, tool_call_id, content });\n                if (singleFunctionToCall) {\n                    return;\n                }\n            }\n        }\n        return;\n    }\n}\n_AbstractChatCompletionRunner_instances = new WeakSet(), _AbstractChatCompletionRunner_getFinalContent = function _AbstractChatCompletionRunner_getFinalContent() {\n    return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this).content ?? null;\n}, _AbstractChatCompletionRunner_getFinalMessage = function _AbstractChatCompletionRunner_getFinalMessage() {\n    let i = this.messages.length;\n    while (i-- > 0) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message)) {\n            const { function_call, ...rest } = message;\n            // TODO: support audio here\n            const ret = {\n                ...rest,\n                content: message.content ?? null,\n                refusal: message.refusal ?? null,\n            };\n            if (function_call) {\n                ret.function_call = function_call;\n            }\n            return ret;\n        }\n    }\n    throw new OpenAIError('stream ended without producing a ChatCompletionMessage with role=assistant');\n}, _AbstractChatCompletionRunner_getFinalFunctionCall = function _AbstractChatCompletionRunner_getFinalFunctionCall() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message) && message?.function_call) {\n            return message.function_call;\n        }\n        if (isAssistantMessage(message) && message?.tool_calls?.length) {\n            return message.tool_calls.at(-1)?.function;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_getFinalFunctionCallResult = function _AbstractChatCompletionRunner_getFinalFunctionCallResult() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isFunctionMessage(message) && message.content != null) {\n            return message.content;\n        }\n        if (isToolMessage(message) &&\n            message.content != null &&\n            typeof message.content === 'string' &&\n            this.messages.some((x) => x.role === 'assistant' &&\n                x.tool_calls?.some((y) => y.type === 'function' && y.id === message.tool_call_id))) {\n            return message.content;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_calculateTotalUsage = function _AbstractChatCompletionRunner_calculateTotalUsage() {\n    const total = {\n        completion_tokens: 0,\n        prompt_tokens: 0,\n        total_tokens: 0,\n    };\n    for (const { usage } of this._chatCompletions) {\n        if (usage) {\n            total.completion_tokens += usage.completion_tokens;\n            total.prompt_tokens += usage.prompt_tokens;\n            total.total_tokens += usage.total_tokens;\n        }\n    }\n    return total;\n}, _AbstractChatCompletionRunner_validateParams = function _AbstractChatCompletionRunner_validateParams(params) {\n    if (params.n != null && params.n > 1) {\n        throw new OpenAIError('ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.');\n    }\n}, _AbstractChatCompletionRunner_stringifyFunctionCallResult = function _AbstractChatCompletionRunner_stringifyFunctionCallResult(rawContent) {\n    return (typeof rawContent === 'string' ? rawContent\n        : rawContent === undefined ? 'undefined'\n            : JSON.stringify(rawContent));\n};\n//# sourceMappingURL=AbstractChatCompletionRunner.mjs.map","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _AssistantStream_instances, _AssistantStream_events, _AssistantStream_runStepSnapshots, _AssistantStream_messageSnapshots, _AssistantStream_messageSnapshot, _AssistantStream_finalRun, _AssistantStream_currentContentIndex, _AssistantStream_currentContent, _AssistantStream_currentToolCallIndex, _AssistantStream_currentToolCall, _AssistantStream_currentEvent, _AssistantStream_currentRunSnapshot, _AssistantStream_currentRunStepSnapshot, _AssistantStream_addEvent, _AssistantStream_endRequest, _AssistantStream_handleMessage, _AssistantStream_handleRunStep, _AssistantStream_handleEvent, _AssistantStream_accumulateRunStep, _AssistantStream_accumulateMessage, _AssistantStream_accumulateContent, _AssistantStream_handleRun;\nimport * as Core from \"../core.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nexport class AssistantStream extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AssistantStream_instances.add(this);\n        //Track all events in a single list for reference\n        _AssistantStream_events.set(this, []);\n        //Used to accumulate deltas\n        //We are accumulating many types so the value here is not strict\n        _AssistantStream_runStepSnapshots.set(this, {});\n        _AssistantStream_messageSnapshots.set(this, {});\n        _AssistantStream_messageSnapshot.set(this, void 0);\n        _AssistantStream_finalRun.set(this, void 0);\n        _AssistantStream_currentContentIndex.set(this, void 0);\n        _AssistantStream_currentContent.set(this, void 0);\n        _AssistantStream_currentToolCallIndex.set(this, void 0);\n        _AssistantStream_currentToolCall.set(this, void 0);\n        //For current snapshot methods\n        _AssistantStream_currentEvent.set(this, void 0);\n        _AssistantStream_currentRunSnapshot.set(this, void 0);\n        _AssistantStream_currentRunStepSnapshot.set(this, void 0);\n    }\n    [(_AssistantStream_events = new WeakMap(), _AssistantStream_runStepSnapshots = new WeakMap(), _AssistantStream_messageSnapshots = new WeakMap(), _AssistantStream_messageSnapshot = new WeakMap(), _AssistantStream_finalRun = new WeakMap(), _AssistantStream_currentContentIndex = new WeakMap(), _AssistantStream_currentContent = new WeakMap(), _AssistantStream_currentToolCallIndex = new WeakMap(), _AssistantStream_currentToolCall = new WeakMap(), _AssistantStream_currentEvent = new WeakMap(), _AssistantStream_currentRunSnapshot = new WeakMap(), _AssistantStream_currentRunStepSnapshot = new WeakMap(), _AssistantStream_instances = new WeakSet(), Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        //Catch all for passing along all events\n        this.on('event', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    static fromReadableStream(stream) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n    static createToolAssistantStream(threadId, runId, runs, params, options) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._runToolAssistantStream(threadId, runId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    async _createToolAssistantStream(run, threadId, runId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.submitToolOutputs(threadId, runId, body, {\n            ...options,\n            signal: this.controller.signal,\n        });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static createThreadAssistantStream(params, thread, options) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._threadAssistantStream(params, thread, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    static createAssistantStream(threadId, runs, params, options) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._runAssistantStream(threadId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    currentEvent() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentEvent, \"f\");\n    }\n    currentRun() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunSnapshot, \"f\");\n    }\n    currentMessageSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\");\n    }\n    currentRunStepSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunStepSnapshot, \"f\");\n    }\n    async finalRunSteps() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\"));\n    }\n    async finalMessages() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\"));\n    }\n    async finalRun() {\n        await this.done();\n        if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n            throw Error('Final run was not received.');\n        return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n    }\n    async _createThreadAssistantStream(thread, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await thread.createAndRun(body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    async _createAssistantStream(run, threadId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.create(threadId, body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static accumulateDelta(acc, delta) {\n        for (const [key, deltaValue] of Object.entries(delta)) {\n            if (!acc.hasOwnProperty(key)) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            let accValue = acc[key];\n            if (accValue === null || accValue === undefined) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // We don't accumulate these special properties\n            if (key === 'index' || key === 'type') {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // Type-specific accumulation logic\n            if (typeof accValue === 'string' && typeof deltaValue === 'string') {\n                accValue += deltaValue;\n            }\n            else if (typeof accValue === 'number' && typeof deltaValue === 'number') {\n                accValue += deltaValue;\n            }\n            else if (Core.isObj(accValue) && Core.isObj(deltaValue)) {\n                accValue = this.accumulateDelta(accValue, deltaValue);\n            }\n            else if (Array.isArray(accValue) && Array.isArray(deltaValue)) {\n                if (accValue.every((x) => typeof x === 'string' || typeof x === 'number')) {\n                    accValue.push(...deltaValue); // Use spread syntax for efficient addition\n                    continue;\n                }\n                for (const deltaEntry of deltaValue) {\n                    if (!Core.isObj(deltaEntry)) {\n                        throw new Error(`Expected array delta entry to be an object but got: ${deltaEntry}`);\n                    }\n                    const index = deltaEntry['index'];\n                    if (index == null) {\n                        console.error(deltaEntry);\n                        throw new Error('Expected array delta entry to have an `index` property');\n                    }\n                    if (typeof index !== 'number') {\n                        throw new Error(`Expected array delta entry \\`index\\` property to be a number but got ${index}`);\n                    }\n                    const accEntry = accValue[index];\n                    if (accEntry == null) {\n                        accValue.push(deltaEntry);\n                    }\n                    else {\n                        accValue[index] = this.accumulateDelta(accEntry, deltaEntry);\n                    }\n                }\n                continue;\n            }\n            else {\n                throw Error(`Unhandled record type: ${key}, deltaValue: ${deltaValue}, accValue: ${accValue}`);\n            }\n            acc[key] = accValue;\n        }\n        return acc;\n    }\n    _addRun(run) {\n        return run;\n    }\n    async _threadAssistantStream(params, thread, options) {\n        return await this._createThreadAssistantStream(thread, params, options);\n    }\n    async _runAssistantStream(threadId, runs, params, options) {\n        return await this._createAssistantStream(runs, threadId, params, options);\n    }\n    async _runToolAssistantStream(threadId, runId, runs, params, options) {\n        return await this._createToolAssistantStream(runs, threadId, runId, params, options);\n    }\n}\n_AssistantStream_addEvent = function _AssistantStream_addEvent(event) {\n    if (this.ended)\n        return;\n    __classPrivateFieldSet(this, _AssistantStream_currentEvent, event, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleEvent).call(this, event);\n    switch (event.event) {\n        case 'thread.created':\n            //No action on this event.\n            break;\n        case 'thread.run.created':\n        case 'thread.run.queued':\n        case 'thread.run.in_progress':\n        case 'thread.run.requires_action':\n        case 'thread.run.completed':\n        case 'thread.run.failed':\n        case 'thread.run.cancelling':\n        case 'thread.run.cancelled':\n        case 'thread.run.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRun).call(this, event);\n            break;\n        case 'thread.run.step.created':\n        case 'thread.run.step.in_progress':\n        case 'thread.run.step.delta':\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRunStep).call(this, event);\n            break;\n        case 'thread.message.created':\n        case 'thread.message.in_progress':\n        case 'thread.message.delta':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleMessage).call(this, event);\n            break;\n        case 'error':\n            //This is included for completeness, but errors are processed in the SSE event processing so this should not occur\n            throw new Error('Encountered an error event in event processing - errors should be processed earlier');\n    }\n}, _AssistantStream_endRequest = function _AssistantStream_endRequest() {\n    if (this.ended) {\n        throw new OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n    if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n        throw Error('Final run has not been received');\n    return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n}, _AssistantStream_handleMessage = function _AssistantStream_handleMessage(event) {\n    const [accumulatedMessage, newContent] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateMessage).call(this, event, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n    __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, accumulatedMessage, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\")[accumulatedMessage.id] = accumulatedMessage;\n    for (const content of newContent) {\n        const snapshotContent = accumulatedMessage.content[content.index];\n        if (snapshotContent?.type == 'text') {\n            this._emit('textCreated', snapshotContent.text);\n        }\n    }\n    switch (event.event) {\n        case 'thread.message.created':\n            this._emit('messageCreated', event.data);\n            break;\n        case 'thread.message.in_progress':\n            break;\n        case 'thread.message.delta':\n            this._emit('messageDelta', event.data.delta, accumulatedMessage);\n            if (event.data.delta.content) {\n                for (const content of event.data.delta.content) {\n                    //If it is text delta, emit a text delta event\n                    if (content.type == 'text' && content.text) {\n                        let textDelta = content.text;\n                        let snapshot = accumulatedMessage.content[content.index];\n                        if (snapshot && snapshot.type == 'text') {\n                            this._emit('textDelta', textDelta, snapshot.text);\n                        }\n                        else {\n                            throw Error('The snapshot associated with this text delta is not text or missing');\n                        }\n                    }\n                    if (content.index != __classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")) {\n                        //See if we have in progress content\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\")) {\n                            switch (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").type) {\n                                case 'text':\n                                    this._emit('textDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                                case 'image_file':\n                                    this._emit('imageFileDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                            }\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentContentIndex, content.index, \"f\");\n                    }\n                    __classPrivateFieldSet(this, _AssistantStream_currentContent, accumulatedMessage.content[content.index], \"f\");\n                }\n            }\n            break;\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //We emit the latest content we were working on on completion (including incomplete)\n            if (__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\") !== undefined) {\n                const currentContent = event.data.content[__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")];\n                if (currentContent) {\n                    switch (currentContent.type) {\n                        case 'image_file':\n                            this._emit('imageFileDone', currentContent.image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                        case 'text':\n                            this._emit('textDone', currentContent.text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                    }\n                }\n            }\n            if (__classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\")) {\n                this._emit('messageDone', event.data);\n            }\n            __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, undefined, \"f\");\n    }\n}, _AssistantStream_handleRunStep = function _AssistantStream_handleRunStep(event) {\n    const accumulatedRunStep = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateRunStep).call(this, event);\n    __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, accumulatedRunStep, \"f\");\n    switch (event.event) {\n        case 'thread.run.step.created':\n            this._emit('runStepCreated', event.data);\n            break;\n        case 'thread.run.step.delta':\n            const delta = event.data.delta;\n            if (delta.step_details &&\n                delta.step_details.type == 'tool_calls' &&\n                delta.step_details.tool_calls &&\n                accumulatedRunStep.step_details.type == 'tool_calls') {\n                for (const toolCall of delta.step_details.tool_calls) {\n                    if (toolCall.index == __classPrivateFieldGet(this, _AssistantStream_currentToolCallIndex, \"f\")) {\n                        this._emit('toolCallDelta', toolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index]);\n                    }\n                    else {\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                            this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCallIndex, toolCall.index, \"f\");\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index], \"f\");\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"))\n                            this._emit('toolCallCreated', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    }\n                }\n            }\n            this._emit('runStepDelta', event.data.delta, accumulatedRunStep);\n            break;\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, undefined, \"f\");\n            const details = event.data.step_details;\n            if (details.type == 'tool_calls') {\n                if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                    this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n                }\n            }\n            this._emit('runStepDone', event.data, accumulatedRunStep);\n            break;\n        case 'thread.run.step.in_progress':\n            break;\n    }\n}, _AssistantStream_handleEvent = function _AssistantStream_handleEvent(event) {\n    __classPrivateFieldGet(this, _AssistantStream_events, \"f\").push(event);\n    this._emit('event', event);\n}, _AssistantStream_accumulateRunStep = function _AssistantStream_accumulateRunStep(event) {\n    switch (event.event) {\n        case 'thread.run.step.created':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            return event.data;\n        case 'thread.run.step.delta':\n            let snapshot = __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n            if (!snapshot) {\n                throw Error('Received a RunStepDelta before creation of a snapshot');\n            }\n            let data = event.data;\n            if (data.delta) {\n                const accumulated = AssistantStream.accumulateDelta(snapshot, data.delta);\n                __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = accumulated;\n            }\n            return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n        case 'thread.run.step.in_progress':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            break;\n    }\n    if (__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id])\n        return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n    throw new Error('No snapshot available');\n}, _AssistantStream_accumulateMessage = function _AssistantStream_accumulateMessage(event, snapshot) {\n    let newContent = [];\n    switch (event.event) {\n        case 'thread.message.created':\n            //On creation the snapshot is just the initial message\n            return [event.data, newContent];\n        case 'thread.message.delta':\n            if (!snapshot) {\n                throw Error('Received a delta with no existing snapshot (there should be one from message creation)');\n            }\n            let data = event.data;\n            //If this delta does not have content, nothing to process\n            if (data.delta.content) {\n                for (const contentElement of data.delta.content) {\n                    if (contentElement.index in snapshot.content) {\n                        let currentContent = snapshot.content[contentElement.index];\n                        snapshot.content[contentElement.index] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateContent).call(this, contentElement, currentContent);\n                    }\n                    else {\n                        snapshot.content[contentElement.index] = contentElement;\n                        // This is a new element\n                        newContent.push(contentElement);\n                    }\n                }\n            }\n            return [snapshot, newContent];\n        case 'thread.message.in_progress':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //No changes on other thread events\n            if (snapshot) {\n                return [snapshot, newContent];\n            }\n            else {\n                throw Error('Received thread message event with no existing snapshot');\n            }\n    }\n    throw Error('Tried to accumulate a non-message event');\n}, _AssistantStream_accumulateContent = function _AssistantStream_accumulateContent(contentElement, currentContent) {\n    return AssistantStream.accumulateDelta(currentContent, contentElement);\n}, _AssistantStream_handleRun = function _AssistantStream_handleRun(event) {\n    __classPrivateFieldSet(this, _AssistantStream_currentRunSnapshot, event.data, \"f\");\n    switch (event.event) {\n        case 'thread.run.created':\n            break;\n        case 'thread.run.queued':\n            break;\n        case 'thread.run.in_progress':\n            break;\n        case 'thread.run.requires_action':\n        case 'thread.run.cancelled':\n        case 'thread.run.failed':\n        case 'thread.run.completed':\n        case 'thread.run.expired':\n            __classPrivateFieldSet(this, _AssistantStream_finalRun, event.data, \"f\");\n            if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n            }\n            break;\n        case 'thread.run.cancelling':\n            break;\n    }\n};\n//# sourceMappingURL=AssistantStream.mjs.map","import { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { isAssistantMessage } from \"./chatCompletionUtils.mjs\";\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner {\n    /** @deprecated - please use `runTools` instead. */\n    static runFunctions(client, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runFunctions' },\n        };\n        runner._run(() => runner._runFunctions(client, params, opts));\n        return runner;\n    }\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n    _addMessage(message, emit = true) {\n        super._addMessage(message, emit);\n        if (isAssistantMessage(message) && message.content) {\n            this._emit('content', message.content);\n        }\n    }\n}\n//# sourceMappingURL=ChatCompletionRunner.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ChatCompletionStream_instances, _ChatCompletionStream_params, _ChatCompletionStream_choiceEventStates, _ChatCompletionStream_currentChatCompletionSnapshot, _ChatCompletionStream_beginRequest, _ChatCompletionStream_getChoiceEventState, _ChatCompletionStream_addChunk, _ChatCompletionStream_emitToolCallDoneEvent, _ChatCompletionStream_emitContentDoneEvents, _ChatCompletionStream_endRequest, _ChatCompletionStream_getAutoParseableResponseFormat, _ChatCompletionStream_accumulateChatCompletion;\nimport { OpenAIError, APIUserAbortError, LengthFinishReasonError, ContentFilterFinishReasonError, } from \"../error.mjs\";\nimport { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { hasAutoParseableInput, isAutoParsableResponseFormat, isAutoParsableTool, maybeParseChatCompletion, shouldParseToolCall, } from \"../lib/parser.mjs\";\nimport { partialParse } from \"../_vendor/partial-json-parser/parser.mjs\";\nexport class ChatCompletionStream extends AbstractChatCompletionRunner {\n    constructor(params) {\n        super();\n        _ChatCompletionStream_instances.add(this);\n        _ChatCompletionStream_params.set(this, void 0);\n        _ChatCompletionStream_choiceEventStates.set(this, void 0);\n        _ChatCompletionStream_currentChatCompletionSnapshot.set(this, void 0);\n        __classPrivateFieldSet(this, _ChatCompletionStream_params, params, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n    }\n    get currentChatCompletionSnapshot() {\n        return __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    }\n    /**\n     * Intended for use on the frontend, consuming a stream produced with\n     * `.toReadableStream()` on the backend.\n     *\n     * Note that messages sent to the model do not appear in `.on('message')`\n     * in this context.\n     */\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStream(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static createChatCompletion(client, params, options) {\n        const runner = new ChatCompletionStream(params);\n        runner._run(() => runner._runChatCompletion(client, { ...params, stream: true }, { ...options, headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' } }));\n        return runner;\n    }\n    async _createChatCompletion(client, params, options) {\n        super._createChatCompletion;\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        const stream = await client.chat.completions.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const chunk of stream) {\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        let chatId;\n        for await (const chunk of stream) {\n            if (chatId && chatId !== chunk.id) {\n                // A new request has been made.\n                this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n            }\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n            chatId = chunk.id;\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    [(_ChatCompletionStream_params = new WeakMap(), _ChatCompletionStream_choiceEventStates = new WeakMap(), _ChatCompletionStream_currentChatCompletionSnapshot = new WeakMap(), _ChatCompletionStream_instances = new WeakSet(), _ChatCompletionStream_beginRequest = function _ChatCompletionStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n    }, _ChatCompletionStream_getChoiceEventState = function _ChatCompletionStream_getChoiceEventState(choice) {\n        let state = __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index];\n        if (state) {\n            return state;\n        }\n        state = {\n            content_done: false,\n            refusal_done: false,\n            logprobs_content_done: false,\n            logprobs_refusal_done: false,\n            done_tool_calls: new Set(),\n            current_tool_call_index: null,\n        };\n        __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index] = state;\n        return state;\n    }, _ChatCompletionStream_addChunk = function _ChatCompletionStream_addChunk(chunk) {\n        if (this.ended)\n            return;\n        const completion = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_accumulateChatCompletion).call(this, chunk);\n        this._emit('chunk', chunk, completion);\n        for (const choice of chunk.choices) {\n            const choiceSnapshot = completion.choices[choice.index];\n            if (choice.delta.content != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.content) {\n                this._emit('content', choice.delta.content, choiceSnapshot.message.content);\n                this._emit('content.delta', {\n                    delta: choice.delta.content,\n                    snapshot: choiceSnapshot.message.content,\n                    parsed: choiceSnapshot.message.parsed,\n                });\n            }\n            if (choice.delta.refusal != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.refusal) {\n                this._emit('refusal.delta', {\n                    delta: choice.delta.refusal,\n                    snapshot: choiceSnapshot.message.refusal,\n                });\n            }\n            if (choice.logprobs?.content != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.content.delta', {\n                    content: choice.logprobs?.content,\n                    snapshot: choiceSnapshot.logprobs?.content ?? [],\n                });\n            }\n            if (choice.logprobs?.refusal != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.refusal.delta', {\n                    refusal: choice.logprobs?.refusal,\n                    snapshot: choiceSnapshot.logprobs?.refusal ?? [],\n                });\n            }\n            const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n            if (choiceSnapshot.finish_reason) {\n                __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                if (state.current_tool_call_index != null) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                }\n            }\n            for (const toolCall of choice.delta.tool_calls ?? []) {\n                if (state.current_tool_call_index !== toolCall.index) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                    // new tool call started, the previous one is done\n                    if (state.current_tool_call_index != null) {\n                        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                    }\n                }\n                state.current_tool_call_index = toolCall.index;\n            }\n            for (const toolCallDelta of choice.delta.tool_calls ?? []) {\n                const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallDelta.index];\n                if (!toolCallSnapshot?.type) {\n                    continue;\n                }\n                if (toolCallSnapshot?.type === 'function') {\n                    this._emit('tool_calls.function.arguments.delta', {\n                        name: toolCallSnapshot.function?.name,\n                        index: toolCallDelta.index,\n                        arguments: toolCallSnapshot.function.arguments,\n                        parsed_arguments: toolCallSnapshot.function.parsed_arguments,\n                        arguments_delta: toolCallDelta.function?.arguments ?? '',\n                    });\n                }\n                else {\n                    assertNever(toolCallSnapshot?.type);\n                }\n            }\n        }\n    }, _ChatCompletionStream_emitToolCallDoneEvent = function _ChatCompletionStream_emitToolCallDoneEvent(choiceSnapshot, toolCallIndex) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (state.done_tool_calls.has(toolCallIndex)) {\n            // we've already fired the done event\n            return;\n        }\n        const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallIndex];\n        if (!toolCallSnapshot) {\n            throw new Error('no tool call snapshot');\n        }\n        if (!toolCallSnapshot.type) {\n            throw new Error('tool call snapshot missing `type`');\n        }\n        if (toolCallSnapshot.type === 'function') {\n            const inputTool = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.tools?.find((tool) => tool.type === 'function' && tool.function.name === toolCallSnapshot.function.name);\n            this._emit('tool_calls.function.arguments.done', {\n                name: toolCallSnapshot.function.name,\n                index: toolCallIndex,\n                arguments: toolCallSnapshot.function.arguments,\n                parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCallSnapshot.function.arguments)\n                    : inputTool?.function.strict ? JSON.parse(toolCallSnapshot.function.arguments)\n                        : null,\n            });\n        }\n        else {\n            assertNever(toolCallSnapshot.type);\n        }\n    }, _ChatCompletionStream_emitContentDoneEvents = function _ChatCompletionStream_emitContentDoneEvents(choiceSnapshot) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (choiceSnapshot.message.content && !state.content_done) {\n            state.content_done = true;\n            const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this);\n            this._emit('content.done', {\n                content: choiceSnapshot.message.content,\n                parsed: responseFormat ? responseFormat.$parseRaw(choiceSnapshot.message.content) : null,\n            });\n        }\n        if (choiceSnapshot.message.refusal && !state.refusal_done) {\n            state.refusal_done = true;\n            this._emit('refusal.done', { refusal: choiceSnapshot.message.refusal });\n        }\n        if (choiceSnapshot.logprobs?.content && !state.logprobs_content_done) {\n            state.logprobs_content_done = true;\n            this._emit('logprobs.content.done', { content: choiceSnapshot.logprobs.content });\n        }\n        if (choiceSnapshot.logprobs?.refusal && !state.logprobs_refusal_done) {\n            state.logprobs_refusal_done = true;\n            this._emit('logprobs.refusal.done', { refusal: choiceSnapshot.logprobs.refusal });\n        }\n    }, _ChatCompletionStream_endRequest = function _ChatCompletionStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any chunks`);\n        }\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n        return finalizeChatCompletion(snapshot, __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"));\n    }, _ChatCompletionStream_getAutoParseableResponseFormat = function _ChatCompletionStream_getAutoParseableResponseFormat() {\n        const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.response_format;\n        if (isAutoParsableResponseFormat(responseFormat)) {\n            return responseFormat;\n        }\n        return null;\n    }, _ChatCompletionStream_accumulateChatCompletion = function _ChatCompletionStream_accumulateChatCompletion(chunk) {\n        var _a, _b, _c, _d;\n        let snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        const { choices, ...rest } = chunk;\n        if (!snapshot) {\n            snapshot = __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, {\n                ...rest,\n                choices: [],\n            }, \"f\");\n        }\n        else {\n            Object.assign(snapshot, rest);\n        }\n        for (const { delta, finish_reason, index, logprobs = null, ...other } of chunk.choices) {\n            let choice = snapshot.choices[index];\n            if (!choice) {\n                choice = snapshot.choices[index] = { finish_reason, index, message: {}, logprobs, ...other };\n            }\n            if (logprobs) {\n                if (!choice.logprobs) {\n                    choice.logprobs = Object.assign({}, logprobs);\n                }\n                else {\n                    const { content, refusal, ...rest } = logprobs;\n                    assertIsEmpty(rest);\n                    Object.assign(choice.logprobs, rest);\n                    if (content) {\n                        (_a = choice.logprobs).content ?? (_a.content = []);\n                        choice.logprobs.content.push(...content);\n                    }\n                    if (refusal) {\n                        (_b = choice.logprobs).refusal ?? (_b.refusal = []);\n                        choice.logprobs.refusal.push(...refusal);\n                    }\n                }\n            }\n            if (finish_reason) {\n                choice.finish_reason = finish_reason;\n                if (__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\") && hasAutoParseableInput(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"))) {\n                    if (finish_reason === 'length') {\n                        throw new LengthFinishReasonError();\n                    }\n                    if (finish_reason === 'content_filter') {\n                        throw new ContentFilterFinishReasonError();\n                    }\n                }\n            }\n            Object.assign(choice, other);\n            if (!delta)\n                continue; // Shouldn't happen; just in case.\n            const { content, refusal, function_call, role, tool_calls, ...rest } = delta;\n            assertIsEmpty(rest);\n            Object.assign(choice.message, rest);\n            if (refusal) {\n                choice.message.refusal = (choice.message.refusal || '') + refusal;\n            }\n            if (role)\n                choice.message.role = role;\n            if (function_call) {\n                if (!choice.message.function_call) {\n                    choice.message.function_call = function_call;\n                }\n                else {\n                    if (function_call.name)\n                        choice.message.function_call.name = function_call.name;\n                    if (function_call.arguments) {\n                        (_c = choice.message.function_call).arguments ?? (_c.arguments = '');\n                        choice.message.function_call.arguments += function_call.arguments;\n                    }\n                }\n            }\n            if (content) {\n                choice.message.content = (choice.message.content || '') + content;\n                if (!choice.message.refusal && __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this)) {\n                    choice.message.parsed = partialParse(choice.message.content);\n                }\n            }\n            if (tool_calls) {\n                if (!choice.message.tool_calls)\n                    choice.message.tool_calls = [];\n                for (const { index, id, type, function: fn, ...rest } of tool_calls) {\n                    const tool_call = ((_d = choice.message.tool_calls)[index] ?? (_d[index] = {}));\n                    Object.assign(tool_call, rest);\n                    if (id)\n                        tool_call.id = id;\n                    if (type)\n                        tool_call.type = type;\n                    if (fn)\n                        tool_call.function ?? (tool_call.function = { name: fn.name ?? '', arguments: '' });\n                    if (fn?.name)\n                        tool_call.function.name = fn.name;\n                    if (fn?.arguments) {\n                        tool_call.function.arguments += fn.arguments;\n                        if (shouldParseToolCall(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"), tool_call)) {\n                            tool_call.function.parsed_arguments = partialParse(tool_call.function.arguments);\n                        }\n                    }\n                }\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('chunk', (chunk) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(chunk);\n            }\n            else {\n                pushQueue.push(chunk);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n}\nfunction finalizeChatCompletion(snapshot, params) {\n    const { id, choices, created, model, system_fingerprint, ...rest } = snapshot;\n    const completion = {\n        ...rest,\n        id,\n        choices: choices.map(({ message, finish_reason, index, logprobs, ...choiceRest }) => {\n            if (!finish_reason) {\n                throw new OpenAIError(`missing finish_reason for choice ${index}`);\n            }\n            const { content = null, function_call, tool_calls, ...messageRest } = message;\n            const role = message.role; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n            if (!role) {\n                throw new OpenAIError(`missing role for choice ${index}`);\n            }\n            if (function_call) {\n                const { arguments: args, name } = function_call;\n                if (args == null) {\n                    throw new OpenAIError(`missing function_call.arguments for choice ${index}`);\n                }\n                if (!name) {\n                    throw new OpenAIError(`missing function_call.name for choice ${index}`);\n                }\n                return {\n                    ...choiceRest,\n                    message: {\n                        content,\n                        function_call: { arguments: args, name },\n                        role,\n                        refusal: message.refusal ?? null,\n                    },\n                    finish_reason,\n                    index,\n                    logprobs,\n                };\n            }\n            if (tool_calls) {\n                return {\n                    ...choiceRest,\n                    index,\n                    finish_reason,\n                    logprobs,\n                    message: {\n                        ...messageRest,\n                        role,\n                        content,\n                        refusal: message.refusal ?? null,\n                        tool_calls: tool_calls.map((tool_call, i) => {\n                            const { function: fn, type, id, ...toolRest } = tool_call;\n                            const { arguments: args, name, ...fnRest } = fn || {};\n                            if (id == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n                            }\n                            if (type == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n                            }\n                            if (name == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`);\n                            }\n                            if (args == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`);\n                            }\n                            return { ...toolRest, id, type, function: { ...fnRest, name, arguments: args } };\n                        }),\n                    },\n                };\n            }\n            return {\n                ...choiceRest,\n                message: { ...messageRest, content, role, refusal: message.refusal ?? null },\n                finish_reason,\n                index,\n                logprobs,\n            };\n        }),\n        created,\n        model,\n        object: 'chat.completion',\n        ...(system_fingerprint ? { system_fingerprint } : {}),\n    };\n    return maybeParseChatCompletion(completion, params);\n}\nfunction str(x) {\n    return JSON.stringify(x);\n}\n/**\n * Ensures the given argument is an empty object, useful for\n * asserting that all known properties on an object have been\n * destructured.\n */\nfunction assertIsEmpty(obj) {\n    return;\n}\nfunction assertNever(_x) { }\n//# sourceMappingURL=ChatCompletionStream.mjs.map","import { ChatCompletionStream } from \"./ChatCompletionStream.mjs\";\nexport class ChatCompletionStreamingRunner extends ChatCompletionStream {\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStreamingRunner(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    /** @deprecated - please use `runTools` instead. */\n    static runFunctions(client, params, options) {\n        const runner = new ChatCompletionStreamingRunner(null);\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runFunctions' },\n        };\n        runner._run(() => runner._runFunctions(client, params, opts));\n        return runner;\n    }\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionStreamingRunner(\n        // @ts-expect-error TODO these types are incompatible\n        params);\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n}\n//# sourceMappingURL=ChatCompletionStreamingRunner.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _EventStream_instances, _EventStream_connectedPromise, _EventStream_resolveConnectedPromise, _EventStream_rejectConnectedPromise, _EventStream_endPromise, _EventStream_resolveEndPromise, _EventStream_rejectEndPromise, _EventStream_listeners, _EventStream_ended, _EventStream_errored, _EventStream_aborted, _EventStream_catchingPromiseCreated, _EventStream_handleError;\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nexport class EventStream {\n    constructor() {\n        _EventStream_instances.add(this);\n        this.controller = new AbortController();\n        _EventStream_connectedPromise.set(this, void 0);\n        _EventStream_resolveConnectedPromise.set(this, () => { });\n        _EventStream_rejectConnectedPromise.set(this, () => { });\n        _EventStream_endPromise.set(this, void 0);\n        _EventStream_resolveEndPromise.set(this, () => { });\n        _EventStream_rejectEndPromise.set(this, () => { });\n        _EventStream_listeners.set(this, {});\n        _EventStream_ended.set(this, false);\n        _EventStream_errored.set(this, false);\n        _EventStream_aborted.set(this, false);\n        _EventStream_catchingPromiseCreated.set(this, false);\n        __classPrivateFieldSet(this, _EventStream_connectedPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveConnectedPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectConnectedPromise, reject, \"f\");\n        }), \"f\");\n        __classPrivateFieldSet(this, _EventStream_endPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveEndPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectEndPromise, reject, \"f\");\n        }), \"f\");\n        // Don't let these promises cause unhandled rejection errors.\n        // we will manually cause an unhandled rejection error later\n        // if the user hasn't registered any error listener or called\n        // any promise-returning method.\n        __classPrivateFieldGet(this, _EventStream_connectedPromise, \"f\").catch(() => { });\n        __classPrivateFieldGet(this, _EventStream_endPromise, \"f\").catch(() => { });\n    }\n    _run(executor) {\n        // Unfortunately if we call `executor()` immediately we get runtime errors about\n        // references to `this` before the `super()` constructor call returns.\n        setTimeout(() => {\n            executor().then(() => {\n                this._emitFinal();\n                this._emit('end');\n            }, __classPrivateFieldGet(this, _EventStream_instances, \"m\", _EventStream_handleError).bind(this));\n        }, 0);\n    }\n    _connected() {\n        if (this.ended)\n            return;\n        __classPrivateFieldGet(this, _EventStream_resolveConnectedPromise, \"f\").call(this);\n        this._emit('connect');\n    }\n    get ended() {\n        return __classPrivateFieldGet(this, _EventStream_ended, \"f\");\n    }\n    get errored() {\n        return __classPrivateFieldGet(this, _EventStream_errored, \"f\");\n    }\n    get aborted() {\n        return __classPrivateFieldGet(this, _EventStream_aborted, \"f\");\n    }\n    abort() {\n        this.controller.abort();\n    }\n    /**\n     * Adds the listener function to the end of the listeners array for the event.\n     * No checks are made to see if the listener has already been added. Multiple calls passing\n     * the same combination of event and listener will result in the listener being added, and\n     * called, multiple times.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    on(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener });\n        return this;\n    }\n    /**\n     * Removes the specified listener from the listener array for the event.\n     * off() will remove, at most, one instance of a listener from the listener array. If any single\n     * listener has been added multiple times to the listener array for the specified event, then\n     * off() must be called multiple times to remove each instance.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    off(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (!listeners)\n            return this;\n        const index = listeners.findIndex((l) => l.listener === listener);\n        if (index >= 0)\n            listeners.splice(index, 1);\n        return this;\n    }\n    /**\n     * Adds a one-time listener function for the event. The next time the event is triggered,\n     * this listener is removed and then invoked.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    once(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener, once: true });\n        return this;\n    }\n    /**\n     * This is similar to `.once()`, but returns a Promise that resolves the next time\n     * the event is triggered, instead of calling a listener callback.\n     * @returns a Promise that resolves the next time given event is triggered,\n     * or rejects if an error is emitted.  (If you request the 'error' event,\n     * returns a promise that resolves with the error).\n     *\n     * Example:\n     *\n     *   const message = await stream.emitted('message') // rejects if the stream errors\n     */\n    emitted(event) {\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n            if (event !== 'error')\n                this.once('error', reject);\n            this.once(event, resolve);\n        });\n    }\n    async done() {\n        __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n        await __classPrivateFieldGet(this, _EventStream_endPromise, \"f\");\n    }\n    _emit(event, ...args) {\n        // make sure we don't emit any events after end\n        if (__classPrivateFieldGet(this, _EventStream_ended, \"f\")) {\n            return;\n        }\n        if (event === 'end') {\n            __classPrivateFieldSet(this, _EventStream_ended, true, \"f\");\n            __classPrivateFieldGet(this, _EventStream_resolveEndPromise, \"f\").call(this);\n        }\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (listeners) {\n            __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = listeners.filter((l) => !l.once);\n            listeners.forEach(({ listener }) => listener(...args));\n        }\n        if (event === 'abort') {\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n            return;\n        }\n        if (event === 'error') {\n            // NOTE: _emit('error', error) should only be called from #handleError().\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n                // If you are seeing stack traces here, make sure to handle errors via either:\n                // - runner.on('error', () => ...)\n                // - await runner.done()\n                // - await runner.finalChatCompletion()\n                // - etc.\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n        }\n    }\n    _emitFinal() { }\n}\n_EventStream_connectedPromise = new WeakMap(), _EventStream_resolveConnectedPromise = new WeakMap(), _EventStream_rejectConnectedPromise = new WeakMap(), _EventStream_endPromise = new WeakMap(), _EventStream_resolveEndPromise = new WeakMap(), _EventStream_rejectEndPromise = new WeakMap(), _EventStream_listeners = new WeakMap(), _EventStream_ended = new WeakMap(), _EventStream_errored = new WeakMap(), _EventStream_aborted = new WeakMap(), _EventStream_catchingPromiseCreated = new WeakMap(), _EventStream_instances = new WeakSet(), _EventStream_handleError = function _EventStream_handleError(error) {\n    __classPrivateFieldSet(this, _EventStream_errored, true, \"f\");\n    if (error instanceof Error && error.name === 'AbortError') {\n        error = new APIUserAbortError();\n    }\n    if (error instanceof APIUserAbortError) {\n        __classPrivateFieldSet(this, _EventStream_aborted, true, \"f\");\n        return this._emit('abort', error);\n    }\n    if (error instanceof OpenAIError) {\n        return this._emit('error', error);\n    }\n    if (error instanceof Error) {\n        const openAIError = new OpenAIError(error.message);\n        // @ts-ignore\n        openAIError.cause = error;\n        return this._emit('error', openAIError);\n    }\n    return this._emit('error', new OpenAIError(String(error)));\n};\n//# sourceMappingURL=EventStream.mjs.map","export function isRunnableFunctionWithParse(fn) {\n    return typeof fn.parse === 'function';\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n *\n * @deprecated - please use ParsingToolFunction instead.\n */\nexport class ParsingFunction {\n    constructor(input) {\n        this.function = input.function;\n        this.parse = input.parse;\n        this.parameters = input.parameters;\n        this.description = input.description;\n        this.name = input.name;\n    }\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n */\nexport class ParsingToolFunction {\n    constructor(input) {\n        this.type = 'function';\n        this.function = input;\n    }\n}\n//# sourceMappingURL=RunnableFunction.mjs.map","/**\n * Like `Promise.allSettled()` but throws an error if any promises are rejected.\n */\nexport const allSettledWithThrow = async (promises) => {\n    const results = await Promise.allSettled(promises);\n    const rejected = results.filter((result) => result.status === 'rejected');\n    if (rejected.length) {\n        for (const result of rejected) {\n            console.error(result.reason);\n        }\n        throw new Error(`${rejected.length} promise(s) failed - see the above errors`);\n    }\n    // Note: TS was complaining about using `.filter().map()` here for some reason\n    const values = [];\n    for (const result of results) {\n        if (result.status === 'fulfilled') {\n            values.push(result.value);\n        }\n    }\n    return values;\n};\n//# sourceMappingURL=Util.mjs.map","export const isAssistantMessage = (message) => {\n    return message?.role === 'assistant';\n};\nexport const isFunctionMessage = (message) => {\n    return message?.role === 'function';\n};\nexport const isToolMessage = (message) => {\n    return message?.role === 'tool';\n};\nexport function isPresent(obj) {\n    return obj != null;\n}\n//# sourceMappingURL=chatCompletionUtils.mjs.map","import { ContentFilterFinishReasonError, LengthFinishReasonError, OpenAIError } from \"../error.mjs\";\nexport function makeParseableResponseFormat(response_format, parser) {\n    const obj = { ...response_format };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-response-format',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableResponseFormat(response_format) {\n    return response_format?.['$brand'] === 'auto-parseable-response-format';\n}\nexport function makeParseableTool(tool, { parser, callback, }) {\n    const obj = { ...tool };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-tool',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n        $callback: {\n            value: callback,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableTool(tool) {\n    return tool?.['$brand'] === 'auto-parseable-tool';\n}\nexport function maybeParseChatCompletion(completion, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...completion,\n            choices: completion.choices.map((choice) => ({\n                ...choice,\n                message: { ...choice.message, parsed: null, tool_calls: choice.message.tool_calls ?? [] },\n            })),\n        };\n    }\n    return parseChatCompletion(completion, params);\n}\nexport function parseChatCompletion(completion, params) {\n    const choices = completion.choices.map((choice) => {\n        if (choice.finish_reason === 'length') {\n            throw new LengthFinishReasonError();\n        }\n        if (choice.finish_reason === 'content_filter') {\n            throw new ContentFilterFinishReasonError();\n        }\n        return {\n            ...choice,\n            message: {\n                ...choice.message,\n                tool_calls: choice.message.tool_calls?.map((toolCall) => parseToolCall(params, toolCall)) ?? [],\n                parsed: choice.message.content && !choice.message.refusal ?\n                    parseResponseFormat(params, choice.message.content)\n                    : null,\n            },\n        };\n    });\n    return { ...completion, choices };\n}\nfunction parseResponseFormat(params, content) {\n    if (params.response_format?.type !== 'json_schema') {\n        return null;\n    }\n    if (params.response_format?.type === 'json_schema') {\n        if ('$parseRaw' in params.response_format) {\n            const response_format = params.response_format;\n            return response_format.$parseRaw(content);\n        }\n        return JSON.parse(content);\n    }\n    return null;\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = params.tools?.find((inputTool) => inputTool.function?.name === toolCall.function.name);\n    return {\n        ...toolCall,\n        function: {\n            ...toolCall.function,\n            parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.function.arguments)\n                : inputTool?.function.strict ? JSON.parse(toolCall.function.arguments)\n                    : null,\n        },\n    };\n}\nexport function shouldParseToolCall(params, toolCall) {\n    if (!params) {\n        return false;\n    }\n    const inputTool = params.tools?.find((inputTool) => inputTool.function?.name === toolCall.function.name);\n    return isAutoParsableTool(inputTool) || inputTool?.function.strict || false;\n}\nexport function hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.response_format)) {\n        return true;\n    }\n    return (params.tools?.some((t) => isAutoParsableTool(t) || (t.type === 'function' && t.function.strict === true)) ?? false);\n}\nexport function validateInputTools(tools) {\n    for (const tool of tools ?? []) {\n        if (tool.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\n//# sourceMappingURL=parser.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { AbstractPage } from \"./core.mjs\";\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class Page extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.object = body.object;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    /**\n     * This page represents a response that isn't actually paginated at the API level\n     * so there will never be any next page params.\n     */\n    nextPageParams() {\n        return null;\n    }\n    nextPageInfo() {\n        return null;\n    }\n}\nexport class CursorPage extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    nextPageParams() {\n        const info = this.nextPageInfo();\n        if (!info)\n            return null;\n        if ('params' in info)\n            return info.params;\n        const params = Object.fromEntries(info.url.searchParams);\n        if (!Object.keys(params).length)\n            return null;\n        return params;\n    }\n    nextPageInfo() {\n        const data = this.getPaginatedItems();\n        if (!data.length) {\n            return null;\n        }\n        const id = data[data.length - 1]?.id;\n        if (!id) {\n            return null;\n        }\n        return { params: { after: id } };\n    }\n}\n//# sourceMappingURL=pagination.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport class APIResource {\n    constructor(client) {\n        this._client = client;\n    }\n}\n//# sourceMappingURL=resource.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as SpeechAPI from \"./speech.mjs\";\nimport { Speech } from \"./speech.mjs\";\nimport * as TranscriptionsAPI from \"./transcriptions.mjs\";\nimport { Transcriptions, } from \"./transcriptions.mjs\";\nimport * as TranslationsAPI from \"./translations.mjs\";\nimport { Translations, } from \"./translations.mjs\";\nexport class Audio extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.transcriptions = new TranscriptionsAPI.Transcriptions(this._client);\n        this.translations = new TranslationsAPI.Translations(this._client);\n        this.speech = new SpeechAPI.Speech(this._client);\n    }\n}\nAudio.Transcriptions = Transcriptions;\nAudio.Translations = Translations;\nAudio.Speech = Speech;\n//# sourceMappingURL=audio.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nexport class Speech extends APIResource {\n    /**\n     * Generates audio from the input text.\n     */\n    create(body, options) {\n        return this._client.post('/audio/speech', { body, ...options, __binaryResponse: true });\n    }\n}\n//# sourceMappingURL=speech.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Transcriptions extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/transcriptions', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n}\n//# sourceMappingURL=transcriptions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Translations extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/translations', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n}\n//# sourceMappingURL=translations.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { isRequestOptions } from \"../core.mjs\";\nimport { CursorPage } from \"../pagination.mjs\";\nexport class Batches extends APIResource {\n    /**\n     * Creates and executes a batch from an uploaded file of requests\n     */\n    create(body, options) {\n        return this._client.post('/batches', { body, ...options });\n    }\n    /**\n     * Retrieves a batch.\n     */\n    retrieve(batchId, options) {\n        return this._client.get(`/batches/${batchId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/batches', BatchesPage, { query, ...options });\n    }\n    /**\n     * Cancels an in-progress batch. The batch will be in status `cancelling` for up to\n     * 10 minutes, before changing to `cancelled`, where it will have partial results\n     * (if any) available in the output file.\n     */\n    cancel(batchId, options) {\n        return this._client.post(`/batches/${batchId}/cancel`, options);\n    }\n}\nexport class BatchesPage extends CursorPage {\n}\nBatches.BatchesPage = BatchesPage;\n//# sourceMappingURL=batches.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport { CursorPage } from \"../../pagination.mjs\";\nexport class Assistants extends APIResource {\n    /**\n     * Create an assistant with a model and instructions.\n     */\n    create(body, options) {\n        return this._client.post('/assistants', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves an assistant.\n     */\n    retrieve(assistantId, options) {\n        return this._client.get(`/assistants/${assistantId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies an assistant.\n     */\n    update(assistantId, body, options) {\n        return this._client.post(`/assistants/${assistantId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/assistants', AssistantsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete an assistant.\n     */\n    del(assistantId, options) {\n        return this._client.delete(`/assistants/${assistantId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class AssistantsPage extends CursorPage {\n}\nAssistants.AssistantsPage = AssistantsPage;\n//# sourceMappingURL=assistants.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as AssistantsAPI from \"./assistants.mjs\";\nimport * as ChatAPI from \"./chat/chat.mjs\";\nimport { Assistants, AssistantsPage, } from \"./assistants.mjs\";\nimport * as ThreadsAPI from \"./threads/threads.mjs\";\nimport { Threads, } from \"./threads/threads.mjs\";\nimport * as VectorStoresAPI from \"./vector-stores/vector-stores.mjs\";\nimport { VectorStores, VectorStoresPage, } from \"./vector-stores/vector-stores.mjs\";\nimport { Chat } from \"./chat/chat.mjs\";\nexport class Beta extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.vectorStores = new VectorStoresAPI.VectorStores(this._client);\n        this.chat = new ChatAPI.Chat(this._client);\n        this.assistants = new AssistantsAPI.Assistants(this._client);\n        this.threads = new ThreadsAPI.Threads(this._client);\n    }\n}\nBeta.VectorStores = VectorStores;\nBeta.VectorStoresPage = VectorStoresPage;\nBeta.Assistants = Assistants;\nBeta.AssistantsPage = AssistantsPage;\nBeta.Threads = Threads;\n//# sourceMappingURL=beta.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport * as CompletionsAPI from \"./completions.mjs\";\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\n(function (Chat) {\n    Chat.Completions = CompletionsAPI.Completions;\n})(Chat || (Chat = {}));\n//# sourceMappingURL=chat.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { ChatCompletionRunner } from \"../../../lib/ChatCompletionRunner.mjs\";\nimport { ChatCompletionStreamingRunner, } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nimport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nimport { parseChatCompletion, validateInputTools } from \"../../../lib/parser.mjs\";\nexport { ChatCompletionStreamingRunner, } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nexport { ParsingFunction, ParsingToolFunction, } from \"../../../lib/RunnableFunction.mjs\";\nexport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nexport { ChatCompletionRunner, } from \"../../../lib/ChatCompletionRunner.mjs\";\nexport class Completions extends APIResource {\n    parse(body, options) {\n        validateInputTools(body.tools);\n        return this._client.chat.completions\n            .create(body, {\n            ...options,\n            headers: {\n                ...options?.headers,\n                'X-Stainless-Helper-Method': 'beta.chat.completions.parse',\n            },\n        })\n            ._thenUnwrap((completion) => parseChatCompletion(completion, body));\n    }\n    runFunctions(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runFunctions(this._client, body, options);\n        }\n        return ChatCompletionRunner.runFunctions(this._client, body, options);\n    }\n    runTools(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runTools(this._client, body, options);\n        }\n        return ChatCompletionRunner.runTools(this._client, body, options);\n    }\n    /**\n     * Creates a chat completion stream\n     */\n    stream(body, options) {\n        return ChatCompletionStream.createChatCompletion(this._client, body, options);\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Messages extends APIResource {\n    /**\n     * Create a message.\n     */\n    create(threadId, body, options) {\n        return this._client.post(`/threads/${threadId}/messages`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieve a message.\n     */\n    retrieve(threadId, messageId, options) {\n        return this._client.get(`/threads/${threadId}/messages/${messageId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a message.\n     */\n    update(threadId, messageId, body, options) {\n        return this._client.post(`/threads/${threadId}/messages/${messageId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(threadId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/messages`, MessagesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Deletes a message.\n     */\n    del(threadId, messageId, options) {\n        return this._client.delete(`/threads/${threadId}/messages/${messageId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class MessagesPage extends CursorPage {\n}\nMessages.MessagesPage = MessagesPage;\n//# sourceMappingURL=messages.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../../core.mjs\";\nimport { AssistantStream } from \"../../../../lib/AssistantStream.mjs\";\nimport { sleep } from \"../../../../core.mjs\";\nimport * as StepsAPI from \"./steps.mjs\";\nimport { RunStepsPage, Steps, } from \"./steps.mjs\";\nimport { CursorPage } from \"../../../../pagination.mjs\";\nexport class Runs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.steps = new StepsAPI.Steps(this._client);\n    }\n    create(threadId, params, options) {\n        const { include, ...body } = params;\n        return this._client.post(`/threads/${threadId}/runs`, {\n            query: { include },\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n            stream: params.stream ?? false,\n        });\n    }\n    /**\n     * Retrieves a run.\n     */\n    retrieve(threadId, runId, options) {\n        return this._client.get(`/threads/${threadId}/runs/${runId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a run.\n     */\n    update(threadId, runId, body, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(threadId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/runs`, RunsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Cancels a run that is `in_progress`.\n     */\n    cancel(threadId, runId, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}/cancel`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * A helper to create a run an poll for a terminal state. More information on Run\n     * lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndPoll(threadId, body, options) {\n        const run = await this.create(threadId, body, options);\n        return await this.poll(threadId, run.id, options);\n    }\n    /**\n     * Create a Run stream\n     *\n     * @deprecated use `stream` instead\n     */\n    createAndStream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    /**\n     * A helper to poll a run status until it reaches a terminal state. More\n     * information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async poll(threadId, runId, options) {\n        const headers = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n        if (options?.pollIntervalMs) {\n            headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n        }\n        while (true) {\n            const { data: run, response } = await this.retrieve(threadId, runId, {\n                ...options,\n                headers: { ...options?.headers, ...headers },\n            }).withResponse();\n            switch (run.status) {\n                //If we are in any sort of intermediate state we poll\n                case 'queued':\n                case 'in_progress':\n                case 'cancelling':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                //We return the run in any terminal state.\n                case 'requires_action':\n                case 'incomplete':\n                case 'cancelled':\n                case 'completed':\n                case 'failed':\n                case 'expired':\n                    return run;\n            }\n        }\n    }\n    /**\n     * Create a Run stream\n     */\n    stream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    submitToolOutputs(threadId, runId, body, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}/submit_tool_outputs`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n            stream: body.stream ?? false,\n        });\n    }\n    /**\n     * A helper to submit a tool output to a run and poll for a terminal run state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async submitToolOutputsAndPoll(threadId, runId, body, options) {\n        const run = await this.submitToolOutputs(threadId, runId, body, options);\n        return await this.poll(threadId, run.id, options);\n    }\n    /**\n     * Submit the tool outputs from a previous run and stream the run to a terminal\n     * state. More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    submitToolOutputsStream(threadId, runId, body, options) {\n        return AssistantStream.createToolAssistantStream(threadId, runId, this._client.beta.threads.runs, body, options);\n    }\n}\nexport class RunsPage extends CursorPage {\n}\nRuns.RunsPage = RunsPage;\nRuns.Steps = Steps;\nRuns.RunStepsPage = RunStepsPage;\n//# sourceMappingURL=runs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../../core.mjs\";\nimport { CursorPage } from \"../../../../pagination.mjs\";\nexport class Steps extends APIResource {\n    retrieve(threadId, runId, stepId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.retrieve(threadId, runId, stepId, {}, query);\n        }\n        return this._client.get(`/threads/${threadId}/runs/${runId}/steps/${stepId}`, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(threadId, runId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, runId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/runs/${runId}/steps`, RunStepsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class RunStepsPage extends CursorPage {\n}\nSteps.RunStepsPage = RunStepsPage;\n//# sourceMappingURL=steps.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { AssistantStream } from \"../../../lib/AssistantStream.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { Messages, MessagesPage, } from \"./messages.mjs\";\nimport * as RunsAPI from \"./runs/runs.mjs\";\nimport { Runs, RunsPage, } from \"./runs/runs.mjs\";\nexport class Threads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.runs = new RunsAPI.Runs(this._client);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    create(body = {}, options) {\n        if (isRequestOptions(body)) {\n            return this.create({}, body);\n        }\n        return this._client.post('/threads', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a thread.\n     */\n    retrieve(threadId, options) {\n        return this._client.get(`/threads/${threadId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a thread.\n     */\n    update(threadId, body, options) {\n        return this._client.post(`/threads/${threadId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete a thread.\n     */\n    del(threadId, options) {\n        return this._client.delete(`/threads/${threadId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    createAndRun(body, options) {\n        return this._client.post('/threads/runs', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n            stream: body.stream ?? false,\n        });\n    }\n    /**\n     * A helper to create a thread, start a run and then poll for a terminal state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndRunPoll(body, options) {\n        const run = await this.createAndRun(body, options);\n        return await this.runs.poll(run.thread_id, run.id, options);\n    }\n    /**\n     * Create a thread and stream the run back\n     */\n    createAndRunStream(body, options) {\n        return AssistantStream.createThreadAssistantStream(body, this._client.beta.threads, options);\n    }\n}\nThreads.Runs = Runs;\nThreads.RunsPage = RunsPage;\nThreads.Messages = Messages;\nThreads.MessagesPage = MessagesPage;\n//# sourceMappingURL=threads.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { sleep } from \"../../../core.mjs\";\nimport { allSettledWithThrow } from \"../../../lib/Util.mjs\";\nimport { VectorStoreFilesPage } from \"./files.mjs\";\nexport class FileBatches extends APIResource {\n    /**\n     * Create a vector store file batch.\n     */\n    create(vectorStoreId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/file_batches`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a vector store file batch.\n     */\n    retrieve(vectorStoreId, batchId, options) {\n        return this._client.get(`/vector_stores/${vectorStoreId}/file_batches/${batchId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Cancel a vector store file batch. This attempts to cancel the processing of\n     * files in this batch as soon as possible.\n     */\n    cancel(vectorStoreId, batchId, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/file_batches/${batchId}/cancel`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Create a vector store batch and poll until all files have been processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const batch = await this.create(vectorStoreId, body);\n        return await this.poll(vectorStoreId, batch.id, options);\n    }\n    listFiles(vectorStoreId, batchId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.listFiles(vectorStoreId, batchId, {}, query);\n        }\n        return this._client.getAPIList(`/vector_stores/${vectorStoreId}/file_batches/${batchId}/files`, VectorStoreFilesPage, { query, ...options, headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers } });\n    }\n    /**\n     * Wait for the given file batch to be processed.\n     *\n     * Note: this will return even if one of the files failed to process, you need to\n     * check batch.file_counts.failed_count to handle this case.\n     */\n    async poll(vectorStoreId, batchId, options) {\n        const headers = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n        if (options?.pollIntervalMs) {\n            headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n        }\n        while (true) {\n            const { data: batch, response } = await this.retrieve(vectorStoreId, batchId, {\n                ...options,\n                headers,\n            }).withResponse();\n            switch (batch.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'cancelled':\n                case 'completed':\n                    return batch;\n            }\n        }\n    }\n    /**\n     * Uploads the given files concurrently and then creates a vector store file batch.\n     *\n     * The concurrency limit is configurable using the `maxConcurrency` parameter.\n     */\n    async uploadAndPoll(vectorStoreId, { files, fileIds = [] }, options) {\n        if (files == null || files.length == 0) {\n            throw new Error(`No \\`files\\` provided to process. If you've already uploaded files you should use \\`.createAndPoll()\\` instead`);\n        }\n        const configuredConcurrency = options?.maxConcurrency ?? 5;\n        // We cap the number of workers at the number of files (so we don't start any unnecessary workers)\n        const concurrencyLimit = Math.min(configuredConcurrency, files.length);\n        const client = this._client;\n        const fileIterator = files.values();\n        const allFileIds = [...fileIds];\n        // This code is based on this design. The libraries don't accommodate our environment limits.\n        // https://stackoverflow.com/questions/40639432/what-is-the-best-way-to-limit-concurrency-when-using-es6s-promise-all\n        async function processFiles(iterator) {\n            for (let item of iterator) {\n                const fileObj = await client.files.create({ file: item, purpose: 'assistants' }, options);\n                allFileIds.push(fileObj.id);\n            }\n        }\n        // Start workers to process results\n        const workers = Array(concurrencyLimit).fill(fileIterator).map(processFiles);\n        // Wait for all processing to complete.\n        await allSettledWithThrow(workers);\n        return await this.createAndPoll(vectorStoreId, {\n            file_ids: allFileIds,\n        });\n    }\n}\nexport { VectorStoreFilesPage };\n//# sourceMappingURL=file-batches.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { sleep, isRequestOptions } from \"../../../core.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Create a vector store file by attaching a\n     * [File](https://platform.openai.com/docs/api-reference/files) to a\n     * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).\n     */\n    create(vectorStoreId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/files`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a vector store file.\n     */\n    retrieve(vectorStoreId, fileId, options) {\n        return this._client.get(`/vector_stores/${vectorStoreId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(vectorStoreId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(vectorStoreId, {}, query);\n        }\n        return this._client.getAPIList(`/vector_stores/${vectorStoreId}/files`, VectorStoreFilesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete a vector store file. This will remove the file from the vector store but\n     * the file itself will not be deleted. To delete the file, use the\n     * [delete file](https://platform.openai.com/docs/api-reference/files/delete)\n     * endpoint.\n     */\n    del(vectorStoreId, fileId, options) {\n        return this._client.delete(`/vector_stores/${vectorStoreId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Attach a file to the given vector store and wait for it to be processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const file = await this.create(vectorStoreId, body, options);\n        return await this.poll(vectorStoreId, file.id, options);\n    }\n    /**\n     * Wait for the vector store file to finish processing.\n     *\n     * Note: this will return even if the file failed to process, you need to check\n     * file.last_error and file.status to handle these cases\n     */\n    async poll(vectorStoreId, fileId, options) {\n        const headers = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n        if (options?.pollIntervalMs) {\n            headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n        }\n        while (true) {\n            const fileResponse = await this.retrieve(vectorStoreId, fileId, {\n                ...options,\n                headers,\n            }).withResponse();\n            const file = fileResponse.data;\n            switch (file.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = fileResponse.response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'completed':\n                    return file;\n            }\n        }\n    }\n    /**\n     * Upload a file to the `files` API and then attach it to the given vector store.\n     *\n     * Note the file will be asynchronously processed (you can use the alternative\n     * polling helper method to wait for processing to complete).\n     */\n    async upload(vectorStoreId, file, options) {\n        const fileInfo = await this._client.files.create({ file: file, purpose: 'assistants' }, options);\n        return this.create(vectorStoreId, { file_id: fileInfo.id }, options);\n    }\n    /**\n     * Add a file to a vector store and poll until processing is complete.\n     */\n    async uploadAndPoll(vectorStoreId, file, options) {\n        const fileInfo = await this.upload(vectorStoreId, file, options);\n        return await this.poll(vectorStoreId, fileInfo.id, options);\n    }\n}\nexport class VectorStoreFilesPage extends CursorPage {\n}\nFiles.VectorStoreFilesPage = VectorStoreFilesPage;\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport * as FileBatchesAPI from \"./file-batches.mjs\";\nimport { FileBatches, } from \"./file-batches.mjs\";\nimport * as FilesAPI from \"./files.mjs\";\nimport { Files, VectorStoreFilesPage, } from \"./files.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class VectorStores extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n        this.fileBatches = new FileBatchesAPI.FileBatches(this._client);\n    }\n    /**\n     * Create a vector store.\n     */\n    create(body, options) {\n        return this._client.post('/vector_stores', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a vector store.\n     */\n    retrieve(vectorStoreId, options) {\n        return this._client.get(`/vector_stores/${vectorStoreId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a vector store.\n     */\n    update(vectorStoreId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/vector_stores', VectorStoresPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete a vector store.\n     */\n    del(vectorStoreId, options) {\n        return this._client.delete(`/vector_stores/${vectorStoreId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class VectorStoresPage extends CursorPage {\n}\nVectorStores.VectorStoresPage = VectorStoresPage;\nVectorStores.Files = Files;\nVectorStores.VectorStoreFilesPage = VectorStoreFilesPage;\nVectorStores.FileBatches = FileBatches;\n//# sourceMappingURL=vector-stores.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as CompletionsAPI from \"./completions.mjs\";\nimport { Completions, } from \"./completions.mjs\";\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\nChat.Completions = Completions;\n//# sourceMappingURL=chat.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/chat/completions', { body, ...options, stream: body.stream ?? false });\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/completions', { body, ...options, stream: body.stream ?? false });\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Embeddings extends APIResource {\n    /**\n     * Creates an embedding vector representing the input text.\n     */\n    create(body, options) {\n        return this._client.post('/embeddings', { body, ...options });\n    }\n}\n//# sourceMappingURL=embeddings.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { isRequestOptions } from \"../core.mjs\";\nimport { sleep } from \"../core.mjs\";\nimport { APIConnectionTimeoutError } from \"../error.mjs\";\nimport * as Core from \"../core.mjs\";\nimport { CursorPage } from \"../pagination.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Upload a file that can be used across various endpoints. Individual files can be\n     * up to 512 MB, and the size of all files uploaded by one organization can be up\n     * to 100 GB.\n     *\n     * The Assistants API supports files up to 2 million tokens and of specific file\n     * types. See the\n     * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) for\n     * details.\n     *\n     * The Fine-tuning API only supports `.jsonl` files. The input also has certain\n     * required formats for fine-tuning\n     * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input) or\n     * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n     * models.\n     *\n     * The Batch API only supports `.jsonl` files up to 200 MB in size. The input also\n     * has a specific required\n     * [format](https://platform.openai.com/docs/api-reference/batch/request-input).\n     *\n     * Please [contact us](https://help.openai.com/) if you need to increase these\n     * storage limits.\n     */\n    create(body, options) {\n        return this._client.post('/files', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Returns information about a specific file.\n     */\n    retrieve(fileId, options) {\n        return this._client.get(`/files/${fileId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/files', FileObjectsPage, { query, ...options });\n    }\n    /**\n     * Delete a file.\n     */\n    del(fileId, options) {\n        return this._client.delete(`/files/${fileId}`, options);\n    }\n    /**\n     * Returns the contents of the specified file.\n     */\n    content(fileId, options) {\n        return this._client.get(`/files/${fileId}/content`, { ...options, __binaryResponse: true });\n    }\n    /**\n     * Returns the contents of the specified file.\n     *\n     * @deprecated The `.content()` method should be used instead\n     */\n    retrieveContent(fileId, options) {\n        return this._client.get(`/files/${fileId}/content`, {\n            ...options,\n            headers: { Accept: 'application/json', ...options?.headers },\n        });\n    }\n    /**\n     * Waits for the given file to be processed, default timeout is 30 mins.\n     */\n    async waitForProcessing(id, { pollInterval = 5000, maxWait = 30 * 60 * 1000 } = {}) {\n        const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n        const start = Date.now();\n        let file = await this.retrieve(id);\n        while (!file.status || !TERMINAL_STATES.has(file.status)) {\n            await sleep(pollInterval);\n            file = await this.retrieve(id);\n            if (Date.now() - start > maxWait) {\n                throw new APIConnectionTimeoutError({\n                    message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`,\n                });\n            }\n        }\n        return file;\n    }\n}\nexport class FileObjectsPage extends CursorPage {\n}\nFiles.FileObjectsPage = FileObjectsPage;\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as JobsAPI from \"./jobs/jobs.mjs\";\nimport { FineTuningJobEventsPage, FineTuningJobsPage, Jobs, } from \"./jobs/jobs.mjs\";\nexport class FineTuning extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.jobs = new JobsAPI.Jobs(this._client);\n    }\n}\nFineTuning.Jobs = Jobs;\nFineTuning.FineTuningJobsPage = FineTuningJobsPage;\nFineTuning.FineTuningJobEventsPage = FineTuningJobEventsPage;\n//# sourceMappingURL=fine-tuning.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Checkpoints extends APIResource {\n    list(fineTuningJobId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(fineTuningJobId, {}, query);\n        }\n        return this._client.getAPIList(`/fine_tuning/jobs/${fineTuningJobId}/checkpoints`, FineTuningJobCheckpointsPage, { query, ...options });\n    }\n}\nexport class FineTuningJobCheckpointsPage extends CursorPage {\n}\nCheckpoints.FineTuningJobCheckpointsPage = FineTuningJobCheckpointsPage;\n//# sourceMappingURL=checkpoints.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport * as CheckpointsAPI from \"./checkpoints.mjs\";\nimport { Checkpoints, FineTuningJobCheckpointsPage, } from \"./checkpoints.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Jobs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n    }\n    /**\n     * Creates a fine-tuning job which begins the process of creating a new model from\n     * a given dataset.\n     *\n     * Response includes details of the enqueued job including job status and the name\n     * of the fine-tuned models once complete.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n     */\n    create(body, options) {\n        return this._client.post('/fine_tuning/jobs', { body, ...options });\n    }\n    /**\n     * Get info about a fine-tuning job.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n     */\n    retrieve(fineTuningJobId, options) {\n        return this._client.get(`/fine_tuning/jobs/${fineTuningJobId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/fine_tuning/jobs', FineTuningJobsPage, { query, ...options });\n    }\n    /**\n     * Immediately cancel a fine-tune job.\n     */\n    cancel(fineTuningJobId, options) {\n        return this._client.post(`/fine_tuning/jobs/${fineTuningJobId}/cancel`, options);\n    }\n    listEvents(fineTuningJobId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.listEvents(fineTuningJobId, {}, query);\n        }\n        return this._client.getAPIList(`/fine_tuning/jobs/${fineTuningJobId}/events`, FineTuningJobEventsPage, {\n            query,\n            ...options,\n        });\n    }\n}\nexport class FineTuningJobsPage extends CursorPage {\n}\nexport class FineTuningJobEventsPage extends CursorPage {\n}\nJobs.FineTuningJobsPage = FineTuningJobsPage;\nJobs.FineTuningJobEventsPage = FineTuningJobEventsPage;\nJobs.Checkpoints = Checkpoints;\nJobs.FineTuningJobCheckpointsPage = FineTuningJobCheckpointsPage;\n//# sourceMappingURL=jobs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport * as Core from \"../core.mjs\";\nexport class Images extends APIResource {\n    /**\n     * Creates a variation of a given image.\n     */\n    createVariation(body, options) {\n        return this._client.post('/images/variations', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Creates an edited or extended image given an original image and a prompt.\n     */\n    edit(body, options) {\n        return this._client.post('/images/edits', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Creates an image given a prompt.\n     */\n    generate(body, options) {\n        return this._client.post('/images/generations', { body, ...options });\n    }\n}\n//# sourceMappingURL=images.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { Page } from \"../pagination.mjs\";\nexport class Models extends APIResource {\n    /**\n     * Retrieves a model instance, providing basic information about the model such as\n     * the owner and permissioning.\n     */\n    retrieve(model, options) {\n        return this._client.get(`/models/${model}`, options);\n    }\n    /**\n     * Lists the currently available models, and provides basic information about each\n     * one such as the owner and availability.\n     */\n    list(options) {\n        return this._client.getAPIList('/models', ModelsPage, options);\n    }\n    /**\n     * Delete a fine-tuned model. You must have the Owner role in your organization to\n     * delete a model.\n     */\n    del(model, options) {\n        return this._client.delete(`/models/${model}`, options);\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class ModelsPage extends Page {\n}\nModels.ModelsPage = ModelsPage;\n//# sourceMappingURL=models.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Moderations extends APIResource {\n    /**\n     * Classifies if text and/or image inputs are potentially harmful. Learn more in\n     * the [moderation guide](https://platform.openai.com/docs/guides/moderation).\n     */\n    create(body, options) {\n        return this._client.post('/moderations', { body, ...options });\n    }\n}\n//# sourceMappingURL=moderations.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Parts extends APIResource {\n    /**\n     * Adds a\n     * [Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.\n     * A Part represents a chunk of bytes from the file you are trying to upload.\n     *\n     * Each Part can be at most 64 MB, and you can add Parts until you hit the Upload\n     * maximum of 8 GB.\n     *\n     * It is possible to add multiple Parts in parallel. You can decide the intended\n     * order of the Parts when you\n     * [complete the Upload](https://platform.openai.com/docs/api-reference/uploads/complete).\n     */\n    create(uploadId, body, options) {\n        return this._client.post(`/uploads/${uploadId}/parts`, Core.multipartFormRequestOptions({ body, ...options }));\n    }\n}\n//# sourceMappingURL=parts.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as PartsAPI from \"./parts.mjs\";\nimport { Parts } from \"./parts.mjs\";\nexport class Uploads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.parts = new PartsAPI.Parts(this._client);\n    }\n    /**\n     * Creates an intermediate\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object\n     * that you can add\n     * [Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.\n     * Currently, an Upload can accept at most 8 GB in total and expires after an hour\n     * after you create it.\n     *\n     * Once you complete the Upload, we will create a\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * contains all the parts you uploaded. This File is usable in the rest of our\n     * platform as a regular File object.\n     *\n     * For certain `purpose`s, the correct `mime_type` must be specified. Please refer\n     * to documentation for the supported MIME types for your use case:\n     *\n     * - [Assistants](https://platform.openai.com/docs/assistants/tools/file-search#supported-files)\n     *\n     * For guidance on the proper filename extensions for each purpose, please follow\n     * the documentation on\n     * [creating a File](https://platform.openai.com/docs/api-reference/files/create).\n     */\n    create(body, options) {\n        return this._client.post('/uploads', { body, ...options });\n    }\n    /**\n     * Cancels the Upload. No Parts may be added after an Upload is cancelled.\n     */\n    cancel(uploadId, options) {\n        return this._client.post(`/uploads/${uploadId}/cancel`, options);\n    }\n    /**\n     * Completes the\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object).\n     *\n     * Within the returned Upload object, there is a nested\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * is ready to use in the rest of the platform.\n     *\n     * You can specify the order of the Parts by passing in an ordered list of the Part\n     * IDs.\n     *\n     * The number of bytes uploaded upon completion must match the number of bytes\n     * initially specified when creating the Upload object. No Parts may be added after\n     * an Upload is completed.\n     */\n    complete(uploadId, body, options) {\n        return this._client.post(`/uploads/${uploadId}/complete`, { body, ...options });\n    }\n}\nUploads.Parts = Parts;\n//# sourceMappingURL=uploads.mjs.map","import { ReadableStream } from \"./_shims/index.mjs\";\nimport { OpenAIError } from \"./error.mjs\";\nimport { LineDecoder } from \"./internal/decoders/line.mjs\";\nimport { APIError } from \"./error.mjs\";\nexport class Stream {\n    constructor(iterator, controller) {\n        this.iterator = iterator;\n        this.controller = controller;\n    }\n    static fromSSEResponse(response, controller) {\n        let consumed = false;\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const sse of _iterSSEMessages(response, controller)) {\n                    if (done)\n                        continue;\n                    if (sse.data.startsWith('[DONE]')) {\n                        done = true;\n                        continue;\n                    }\n                    if (sse.event === null) {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        if (data && data.error) {\n                            throw new APIError(undefined, data.error, undefined, undefined);\n                        }\n                        yield data;\n                    }\n                    else {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        // TODO: Is this where the error should be thrown?\n                        if (sse.event == 'error') {\n                            throw new APIError(undefined, data.error, data.message, undefined);\n                        }\n                        yield { event: sse.event, data: data };\n                    }\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    /**\n     * Generates a Stream from a newline-separated ReadableStream\n     * where each item is a JSON value.\n     */\n    static fromReadableStream(readableStream, controller) {\n        let consumed = false;\n        async function* iterLines() {\n            const lineDecoder = new LineDecoder();\n            const iter = readableStreamAsyncIterable(readableStream);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    yield line;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                yield line;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const line of iterLines()) {\n                    if (done)\n                        continue;\n                    if (line)\n                        yield JSON.parse(line);\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterator();\n    }\n    /**\n     * Splits the stream into two streams which can be\n     * independently read from at different speeds.\n     */\n    tee() {\n        const left = [];\n        const right = [];\n        const iterator = this.iterator();\n        const teeIterator = (queue) => {\n            return {\n                next: () => {\n                    if (queue.length === 0) {\n                        const result = iterator.next();\n                        left.push(result);\n                        right.push(result);\n                    }\n                    return queue.shift();\n                },\n            };\n        };\n        return [\n            new Stream(() => teeIterator(left), this.controller),\n            new Stream(() => teeIterator(right), this.controller),\n        ];\n    }\n    /**\n     * Converts this stream to a newline-separated ReadableStream of\n     * JSON stringified values in the stream\n     * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n     */\n    toReadableStream() {\n        const self = this;\n        let iter;\n        const encoder = new TextEncoder();\n        return new ReadableStream({\n            async start() {\n                iter = self[Symbol.asyncIterator]();\n            },\n            async pull(ctrl) {\n                try {\n                    const { value, done } = await iter.next();\n                    if (done)\n                        return ctrl.close();\n                    const bytes = encoder.encode(JSON.stringify(value) + '\\n');\n                    ctrl.enqueue(bytes);\n                }\n                catch (err) {\n                    ctrl.error(err);\n                }\n            },\n            async cancel() {\n                await iter.return?.();\n            },\n        });\n    }\n}\nexport async function* _iterSSEMessages(response, controller) {\n    if (!response.body) {\n        controller.abort();\n        throw new OpenAIError(`Attempted to iterate over a response with no body`);\n    }\n    const sseDecoder = new SSEDecoder();\n    const lineDecoder = new LineDecoder();\n    const iter = readableStreamAsyncIterable(response.body);\n    for await (const sseChunk of iterSSEChunks(iter)) {\n        for (const line of lineDecoder.decode(sseChunk)) {\n            const sse = sseDecoder.decode(line);\n            if (sse)\n                yield sse;\n        }\n    }\n    for (const line of lineDecoder.flush()) {\n        const sse = sseDecoder.decode(line);\n        if (sse)\n            yield sse;\n    }\n}\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */\nasync function* iterSSEChunks(iterator) {\n    let data = new Uint8Array();\n    for await (const chunk of iterator) {\n        if (chunk == null) {\n            continue;\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? new TextEncoder().encode(chunk)\n                : chunk;\n        let newData = new Uint8Array(data.length + binaryChunk.length);\n        newData.set(data);\n        newData.set(binaryChunk, data.length);\n        data = newData;\n        let patternIndex;\n        while ((patternIndex = findDoubleNewlineIndex(data)) !== -1) {\n            yield data.slice(0, patternIndex);\n            data = data.slice(patternIndex);\n        }\n    }\n    if (data.length > 0) {\n        yield data;\n    }\n}\nfunction findDoubleNewlineIndex(buffer) {\n    // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n    // and returns the index right after the first occurrence of any pattern,\n    // or -1 if none of the patterns are found.\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = 0; i < buffer.length - 2; i++) {\n        if (buffer[i] === newline && buffer[i + 1] === newline) {\n            // \\n\\n\n            return i + 2;\n        }\n        if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n            // \\r\\r\n            return i + 2;\n        }\n        if (buffer[i] === carriage &&\n            buffer[i + 1] === newline &&\n            i + 3 < buffer.length &&\n            buffer[i + 2] === carriage &&\n            buffer[i + 3] === newline) {\n            // \\r\\n\\r\\n\n            return i + 4;\n        }\n    }\n    return -1;\n}\nclass SSEDecoder {\n    constructor() {\n        this.event = null;\n        this.data = [];\n        this.chunks = [];\n    }\n    decode(line) {\n        if (line.endsWith('\\r')) {\n            line = line.substring(0, line.length - 1);\n        }\n        if (!line) {\n            // empty line and we didn't previously encounter any messages\n            if (!this.event && !this.data.length)\n                return null;\n            const sse = {\n                event: this.event,\n                data: this.data.join('\\n'),\n                raw: this.chunks,\n            };\n            this.event = null;\n            this.data = [];\n            this.chunks = [];\n            return sse;\n        }\n        this.chunks.push(line);\n        if (line.startsWith(':')) {\n            return null;\n        }\n        let [fieldname, _, value] = partition(line, ':');\n        if (value.startsWith(' ')) {\n            value = value.substring(1);\n        }\n        if (fieldname === 'event') {\n            this.event = value;\n        }\n        else if (fieldname === 'data') {\n            this.data.push(value);\n        }\n        return null;\n    }\n}\n/** This is an internal helper function that's just used for testing */\nexport function _decodeChunks(chunks) {\n    const decoder = new LineDecoder();\n    const lines = [];\n    for (const chunk of chunks) {\n        lines.push(...decoder.decode(chunk));\n    }\n    return lines;\n}\nfunction partition(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index !== -1) {\n        return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n    }\n    return [str, '', ''];\n}\n/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function readableStreamAsyncIterable(stream) {\n    if (stream[Symbol.asyncIterator])\n        return stream;\n    const reader = stream.getReader();\n    return {\n        async next() {\n            try {\n                const result = await reader.read();\n                if (result?.done)\n                    reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            }\n            catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return() {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            await cancelPromise;\n            return { done: true, value: undefined };\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n//# sourceMappingURL=streaming.mjs.map","import { FormData, File, getMultipartRequestOptions, isFsReadStream, } from \"./_shims/index.mjs\";\nexport { fileFromPath } from \"./_shims/index.mjs\";\nexport const isResponseLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.url === 'string' &&\n    typeof value.blob === 'function';\nexport const isFileLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.name === 'string' &&\n    typeof value.lastModified === 'number' &&\n    isBlobLike(value);\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */\nexport const isBlobLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.size === 'number' &&\n    typeof value.type === 'string' &&\n    typeof value.text === 'function' &&\n    typeof value.slice === 'function' &&\n    typeof value.arrayBuffer === 'function';\nexport const isUploadable = (value) => {\n    return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\n};\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(value, name, options) {\n    // If it's a promise, resolve it.\n    value = await value;\n    // If we've been given a `File` we don't need to do anything\n    if (isFileLike(value)) {\n        return value;\n    }\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file');\n        // we need to convert the `Blob` into an array buffer because the `Blob` class\n        // that `node-fetch` defines is incompatible with the web standard which results\n        // in `new File` interpreting it as a string instead of binary data.\n        const data = isBlobLike(blob) ? [(await blob.arrayBuffer())] : [blob];\n        return new File(data, name, options);\n    }\n    const bits = await getBytes(value);\n    name || (name = getName(value) ?? 'unknown_file');\n    if (!options?.type) {\n        const type = bits[0]?.type;\n        if (typeof type === 'string') {\n            options = { ...options, type };\n        }\n    }\n    return new File(bits, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === 'string' ||\n        ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n        value instanceof ArrayBuffer) {\n        parts.push(value);\n    }\n    else if (isBlobLike(value)) {\n        parts.push(await value.arrayBuffer());\n    }\n    else if (isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value) {\n            parts.push(chunk); // TODO, consider validating?\n        }\n    }\n    else {\n        throw new Error(`Unexpected data type: ${typeof value}; constructor: ${value?.constructor\n            ?.name}; props: ${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    const props = Object.getOwnPropertyNames(value);\n    return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\nfunction getName(value) {\n    return (getStringFromMaybeBuffer(value.name) ||\n        getStringFromMaybeBuffer(value.filename) ||\n        // For fs.ReadStream\n        getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop());\n}\nconst getStringFromMaybeBuffer = (x) => {\n    if (typeof x === 'string')\n        return x;\n    if (typeof Buffer !== 'undefined' && x instanceof Buffer)\n        return String(x);\n    return undefined;\n};\nconst isAsyncIterableIterator = (value) => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\nexport const isMultipartBody = (body) => body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async (opts) => {\n    if (!hasUploadableValue(opts.body))\n        return opts;\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const multipartFormRequestOptions = async (opts) => {\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const createForm = async (body) => {\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n    return form;\n};\nconst hasUploadableValue = (value) => {\n    if (isUploadable(value))\n        return true;\n    if (Array.isArray(value))\n        return value.some(hasUploadableValue);\n    if (value && typeof value === 'object') {\n        for (const k in value) {\n            if (hasUploadableValue(value[k]))\n                return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value) => {\n    if (value === undefined)\n        return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        form.append(key, String(value));\n    }\n    else if (isUploadable(value)) {\n        const file = await toFile(value);\n        form.append(key, file);\n    }\n    else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n    }\n    else if (typeof value === 'object') {\n        await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\n    }\n    else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n};\n//# sourceMappingURL=uploads.mjs.map","export const VERSION = '4.73.1'; // x-release-please-version\n//# sourceMappingURL=version.mjs.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { render } from '@wordpress/element';\nimport App from './App';\nimport './index.css';\n\n// Render the React app\nconst root = document.getElementById('medical-consultation-root');\nif (root) {\n    render(<App />, root);\n}"],"names":["React","BrowserRouter","Routes","Route","ConsultationFlow","LoginForm","ProtectedRoute","App","createElement","path","element","useState","useReactMediaRecorder","Mic","Square","Loader","processAudioRecording","usePatientStore","AudioRecorder","isProcessing","setIsProcessing","currentPatient","state","status","startRecording","stopRecording","mediaBlobUrl","audio","blobPropertyBag","type","onStop","blobUrl","blob","id","console","error","className","onClick","size","src","controls","useAuthStore","Lock","Mail","email","setEmail","password","setPassword","signIn","loading","handleSubmit","e","preventDefault","onSubmit","htmlFor","required","value","onChange","target","placeholder","disabled","PatientForm","useForm","register","watch","savePatient","setCurrentPatient","hasAllergies","onMedication","data","patientData","name","age","calculateAge","birthDate","gender","symptoms","medication","currentMedication","allergies","split","map","a","trim","medicalHistory","formatMedicalHistory","rows","today","Date","birth","getFullYear","monthDiff","getMonth","getDate","familyHistory","chronicDiseases","previousSurgeries","habits","Navigate","children","requiredRole","user","to","replace","customClaims","role","Fragment","config","openai","apiKey","import","meta","env","VITE_OPENAI_API_KEY","anthropic","VITE_ANTHROPIC_API_KEY","emailjs","serviceId","VITE_EMAILJS_SERVICE_ID","templateId","VITE_EMAILJS_TEMPLATE_ID","publicKey","VITE_EMAILJS_PUBLIC_KEY","validateEnvVariables","missingVars","push","length","Error","join","initializeApp","getAuth","getFirestore","getStorage","firebaseConfig","VITE_FIREBASE_API_KEY","authDomain","VITE_FIREBASE_AUTH_DOMAIN","projectId","VITE_FIREBASE_PROJECT_ID","storageBucket","VITE_FIREBASE_STORAGE_BUCKET","messagingSenderId","VITE_FIREBASE_MESSAGING_SENDER_ID","appId","VITE_FIREBASE_APP_ID","app","auth","db","storage","Heart","cardiologyConfig","icon","promptTemplate","requiredFields","specialtyFields","bloodPressure","label","unit","heartRate","ecg","options","chestPain","neurologyConfig","pediatricsConfig","generalConfig","specialtyConfigs","general","cardiology","neurology","pediatrics","getSpecialtyConfig","specialty","Dexie","MedicalDatabase","constructor","version","stores","patients","audioRecords","OpenAI","Anthropic","logAuditEvent","tokenOptimizer","AIOrchestrator","errorThreshold","errorCounts","Map","dangerouslyAllowBrowser","models","ollama","priority","healthCheck","response","fetch","ok","process","processWithOllama","bind","gpt4","processWithGPT4","claude","processWithClaude","processRequest","currentModel","selectBestModel","optimizedPrompt","optimizePrompt","cachedResponse","getCachedResponse","result","cacheResponse","set","model","tokenUsage","getTokenUsage","timestamp","errorCount","get","nextModel","aiOrchestrator","TokenOptimizer","maxTokens","costPerToken","tokenCounters","responseCache","modelType","relevantData","extractRelevantData","compressedPrompt","compressPrompt","estimateTokens","truncatePrompt","critical","extractCriticalInfo","summarizeSymptoms","vitals","filterRelevantVitals","history","summarizeHistory","criticalFields","reduce","acc","field","uniqueSymptoms","Set","s","toLowerCase","Array","from","sort","b","getSymptomPriority","slice","symptom","urgentKeywords","some","keyword","includes","relevantFields","Object","entries","filter","key","sentences","Boolean","JSON","stringify","prompt","maxLength","text","Math","ceil","calculateCost","tokens","hash","hashPrompt","cacheEntry","now","updateTokenCount","cached","i","char","charCodeAt","toString","current","fromEntries","transcribeAudio","analyzeTranscription","audioBlob","patientId","audioRecord","createdAt","audioId","add","transcription","analysis","update","message","getPatientAudioRecords","where","equals","reverse","sortBy","collection","addDoc","userId","action","details","auditLog","formData","FormData","append","method","headers","body","json","create","signInWithEmailAndPassword","signOut","firebaseSignOut","onAuthStateChanged","setState","patient","clearCurrentPatient","render","root","document","getElementById"],"sourceRoot":""}